package com.facebook.b.b;

import android.os.Environment;
import com.facebook.a.a;
import com.facebook.a.b;
import com.facebook.b.a.a;
import com.facebook.common.c.a;
import com.facebook.common.c.c;
import com.facebook.common.d.i;
import com.facebook.common.time.a;
import com.facebook.common.time.c;
import java.io.File;
import java.io.IOException;
import java.util.Collection;
import java.util.List;
import java.util.Locale;
import java.util.concurrent.TimeUnit;

public class a implements d {
  static final long a;
  
  private static final Class<?> b = a.class;
  
  private final File c;
  
  private final boolean d;
  
  private final File e;
  
  private final a f;
  
  private final a g;
  
  static  {
    a = TimeUnit.MINUTES.toMillis(30L);
  }
  
  public a(File paramFile, int paramInt, a parama) {
    i.a(paramFile);
    this.c = paramFile;
    this.d = a(paramFile, parama);
    this.e = new File(this.c, a(paramInt));
    this.f = parama;
    g();
    this.g = c.b();
  }
  
  private long a(File paramFile) {
    if (!paramFile.exists())
      return 0L; 
    long l = paramFile.length();
    return paramFile.delete() ? l : -1L;
  }
  
  static String a(int paramInt) { return String.format((Locale)null, "%s.ols%d.%d", new Object[] { "v2", Integer.valueOf(100), Integer.valueOf(paramInt) }); }
  
  private void a(File paramFile, String paramString) {
    try {
      c.a(paramFile);
      return;
    } catch (com.facebook.common.c.c.a paramFile) {
      this.f.a(a.a.k, b, paramString, paramFile);
      throw paramFile;
    } 
  }
  
  private static boolean a(File paramFile, a parama) {
    try {
      File file = Environment.getExternalStorageDirectory();
      if (file != null) {
        String str = file.toString();
        try {
          String str1 = paramFile.getCanonicalPath();
          try {
            return str1.contains(str);
          } catch (IOException paramFile) {}
        } catch (IOException paramFile) {
          file = null;
        } 
        a.a a1 = a.a.q;
        Class clazz = b;
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("failed to read folder to check if external: ");
        stringBuilder.append(file);
        parama.a(a1, clazz, stringBuilder.toString(), paramFile);
        return false;
      } 
    } catch (Exception paramFile) {
      parama.a(a.a.q, b, "failed to get the external storage directory!", paramFile);
    } 
    return false;
  }
  
  private boolean a(String paramString, boolean paramBoolean) {
    File file = a(paramString);
    boolean bool = file.exists();
    if (paramBoolean && bool)
      file.setLastModified(this.g.a()); 
    return bool;
  }
  
  private c b(File paramFile) {
    c c1 = c.b(paramFile);
    return (c1 == null) ? null : (e(c1.b).equals(paramFile.getParentFile()) ? c1 : null);
  }
  
  private String d(String paramString) {
    int i = Math.abs(paramString.hashCode() % 100);
    StringBuilder stringBuilder = new StringBuilder();
    stringBuilder.append(this.e);
    stringBuilder.append(File.separator);
    stringBuilder.append(String.valueOf(i));
    return stringBuilder.toString();
  }
  
  private File e(String paramString) { return new File(d(paramString)); }
  
  private String f(String paramString) {
    c c1 = new c(".cnt", paramString, null);
    return c1.a(d(c1.b));
  }
  
  private static String g(String paramString) { return ".cnt".equals(paramString) ? ".cnt" : (".tmp".equals(paramString) ? ".tmp" : null); }
  
  private void g() {
    boolean bool1 = this.c.exists();
    boolean bool = true;
    if (bool1)
      if (!this.e.exists()) {
        a.b(this.c);
      } else {
        bool = false;
      }  
    if (bool)
      try {
        c.a(this.e);
        return;
      } catch (com.facebook.common.c.c.a a2) {
        a a1 = this.f;
        a.a a3 = a.a.k;
        Class clazz = b;
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("version directory could not be created: ");
        stringBuilder.append(this.e);
        a1.a(a3, clazz, stringBuilder.toString(), null);
      }  
  }
  
  public long a(d.a parama) { return a(((b)parama).c().c()); }
  
  public d.b a(String paramString, Object paramObject) {
    paramObject = new c(".tmp", paramString, null);
    File file = e(paramObject.b);
    if (!file.exists())
      a(file, "insert"); 
    try {
      return new e(this, paramString, paramObject.a(file));
    } catch (IOException paramString) {
      this.f.a(a.a.f, b, "insert", paramString);
      throw paramString;
    } 
  }
  
  File a(String paramString) { return new File(f(paramString)); }
  
  public boolean a() { return this.d; }
  
  public long b(String paramString) { return a(a(paramString)); }
  
  public a b(String paramString, Object paramObject) {
    File file = a(paramString);
    if (file.exists()) {
      file.setLastModified(this.g.a());
      return b.a(file);
    } 
    return null;
  }
  
  public void b() { a.a(this.c, new f(this, null)); }
  
  public void c() { a.a(this.c); }
  
  public boolean c(String paramString, Object paramObject) { return a(paramString, false); }
  
  public List<d.a> d() {
    a a1 = new a(this, null);
    a.a(this.e, a1);
    return a1.a();
  }
}
