package com.facebook.g;

import com.facebook.common.d.a;
import com.facebook.common.d.i;
import com.facebook.common.d.n;
import java.io.IOException;
import java.io.InputStream;
import java.util.Iterator;
import java.util.List;

public class d {
  private static d a;
  
  private int b;
  
  private List<c.a> c;
  
  private final c.a d = new a();
  
  private d() { b(); }
  
  private static int a(int paramInt, InputStream paramInputStream, byte[] paramArrayOfByte) {
    boolean bool;
    i.a(paramInputStream);
    i.a(paramArrayOfByte);
    if (paramArrayOfByte.length >= paramInt) {
      bool = true;
    } else {
      bool = false;
    } 
    i.a(bool);
    if (paramInputStream.markSupported())
      try {
        paramInputStream.mark(paramInt);
        return a.a(paramInputStream, paramArrayOfByte, 0, paramInt);
      } finally {
        paramInputStream.reset();
      }  
    return a.a(paramInputStream, paramArrayOfByte, 0, paramInt);
  }
  
  public static d a() { // Byte code:
    //   0: ldc com/facebook/g/d
    //   2: monitorenter
    //   3: getstatic com/facebook/g/d.a : Lcom/facebook/g/d;
    //   6: ifnonnull -> 19
    //   9: new com/facebook/g/d
    //   12: dup
    //   13: invokespecial <init> : ()V
    //   16: putstatic com/facebook/g/d.a : Lcom/facebook/g/d;
    //   19: getstatic com/facebook/g/d.a : Lcom/facebook/g/d;
    //   22: astore_0
    //   23: ldc com/facebook/g/d
    //   25: monitorexit
    //   26: aload_0
    //   27: areturn
    //   28: astore_0
    //   29: ldc com/facebook/g/d
    //   31: monitorexit
    //   32: aload_0
    //   33: athrow
    // Exception table:
    //   from	to	target	type
    //   3	19	28	finally
    //   19	23	28	finally }
  
  public static c b(InputStream paramInputStream) { return a().a(paramInputStream); }
  
  private void b() {
    this.b = this.d.a();
    List list = this.c;
    if (list != null)
      for (c.a a1 : list)
        this.b = Math.max(this.b, a1.a());  
  }
  
  public static c c(InputStream paramInputStream) {
    try {
      return b(paramInputStream);
    } catch (IOException paramInputStream) {
      throw n.b(paramInputStream);
    } 
  }
  
  public c a(InputStream paramInputStream) {
    i.a(paramInputStream);
    int i = this.b;
    byte[] arrayOfByte = new byte[i];
    i = a(i, paramInputStream, arrayOfByte);
    c c1 = this.d.a(arrayOfByte, i);
    if (c1 != null && c1 != c.a)
      return c1; 
    List list = this.c;
    if (list != null) {
      Iterator iterator = list.iterator();
      while (iterator.hasNext()) {
        c c2 = ((c.a)iterator.next()).a(arrayOfByte, i);
        if (c2 != null && c2 != c.a)
          return c2; 
      } 
    } 
    return c.a;
  }
  
  public void a(List<c.a> paramList) {
    this.c = paramList;
    b();
  }
}
