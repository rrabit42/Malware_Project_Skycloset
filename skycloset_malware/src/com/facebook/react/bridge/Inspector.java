package com.facebook.react.bridge;

import com.facebook.common.e.a;
import com.facebook.j.a.a;
import com.facebook.jni.HybridData;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

@a
public class Inspector {
  private final HybridData mHybridData;
  
  static  {
    ReactBridge.staticInit();
  }
  
  private Inspector(HybridData paramHybridData) { this.mHybridData = paramHybridData; }
  
  public static LocalConnection connect(int paramInt, RemoteConnection paramRemoteConnection) {
    try {
      return instance().connectNative(paramInt, paramRemoteConnection);
    } catch (UnsatisfiedLinkError paramRemoteConnection) {
      a.c("ReactNative", "Inspector doesn't work in open source yet", paramRemoteConnection);
      throw new RuntimeException(paramRemoteConnection);
    } 
  }
  
  private native LocalConnection connectNative(int paramInt, RemoteConnection paramRemoteConnection);
  
  public static List<Page> getPages() {
    try {
      return Arrays.asList(instance().getPagesNative());
    } catch (UnsatisfiedLinkError unsatisfiedLinkError) {
      a.c("ReactNative", "Inspector doesn't work in open source yet", unsatisfiedLinkError);
      return Collections.emptyList();
    } 
  }
  
  private native Page[] getPagesNative();
  
  private static native Inspector instance();
}
