package com.facebook.react.bridge;

import com.facebook.j.a.a;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

@a
public class ReactMarker {
  private static final List<MarkerListener> sListeners = new ArrayList();
  
  @a
  public static void addListener(MarkerListener paramMarkerListener) {
    synchronized (sListeners) {
      if (!sListeners.contains(paramMarkerListener))
        sListeners.add(paramMarkerListener); 
      return;
    } 
  }
  
  @a
  public static void clearMarkerListeners() {
    synchronized (sListeners) {
      sListeners.clear();
      return;
    } 
  }
  
  @a
  public static void logMarker(ReactMarkerConstants paramReactMarkerConstants) { logMarker(paramReactMarkerConstants, null, 0); }
  
  @a
  public static void logMarker(ReactMarkerConstants paramReactMarkerConstants, int paramInt) { logMarker(paramReactMarkerConstants, null, paramInt); }
  
  @a
  public static void logMarker(ReactMarkerConstants paramReactMarkerConstants, String paramString) { logMarker(paramReactMarkerConstants, paramString, 0); }
  
  @a
  public static void logMarker(ReactMarkerConstants paramReactMarkerConstants, String paramString, int paramInt) {
    synchronized (sListeners) {
      Iterator iterator = sListeners.iterator();
      while (iterator.hasNext())
        ((MarkerListener)iterator.next()).logMarker(paramReactMarkerConstants, paramString, paramInt); 
      return;
    } 
  }
  
  @a
  public static void logMarker(String paramString) { logMarker(paramString, null); }
  
  @a
  public static void logMarker(String paramString, int paramInt) { logMarker(paramString, null, paramInt); }
  
  @a
  public static void logMarker(String paramString1, String paramString2) { logMarker(paramString1, paramString2, 0); }
  
  @a
  public static void logMarker(String paramString1, String paramString2, int paramInt) { logMarker(ReactMarkerConstants.valueOf(paramString1), paramString2, paramInt); }
  
  @a
  public static void removeListener(MarkerListener paramMarkerListener) {
    synchronized (sListeners) {
      sListeners.remove(paramMarkerListener);
      return;
    } 
  }
}
