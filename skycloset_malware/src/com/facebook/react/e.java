package com.facebook.react;

import com.facebook.react.b.a;
import com.facebook.react.bridge.ModuleHolder;
import com.facebook.react.bridge.NativeModuleRegistry;
import com.facebook.react.bridge.ReactApplicationContext;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

public class e {
  private final ReactApplicationContext a;
  
  private final k b;
  
  private final Map<String, ModuleHolder> c = new HashMap();
  
  public e(ReactApplicationContext paramReactApplicationContext, k paramk) {
    this.a = paramReactApplicationContext;
    this.b = paramk;
  }
  
  public NativeModuleRegistry a() { return new NativeModuleRegistry(this.a, this.c); }
  
  public void a(o paramo) {
    Iterable iterable;
    if (paramo instanceof c) {
      iterable = ((c)paramo).d(this.a);
    } else if (iterable instanceof s) {
      iterable = ((s)iterable).c(this.a);
    } else {
      iterable = p.a(iterable, this.a, this.b);
    } 
    Iterator iterator = iterable.iterator();
    while (iterator.hasNext()) {
      ModuleHolder moduleHolder = (ModuleHolder)iterator.next();
      String str = moduleHolder.getName();
      if (this.c.containsKey(str)) {
        ModuleHolder moduleHolder1 = (ModuleHolder)this.c.get(str);
        if (moduleHolder.getCanOverrideExistingModule()) {
          this.c.remove(moduleHolder1);
        } else {
          StringBuilder stringBuilder = new StringBuilder();
          stringBuilder.append("Native module ");
          stringBuilder.append(str);
          stringBuilder.append(" tried to override ");
          stringBuilder.append(moduleHolder1.getClassName());
          stringBuilder.append(" for module name .Check the getPackages() method in MainApplication.java, it might be that module is being created twice. If this was your intention, set canOverrideExistingModule=true");
          throw new IllegalStateException(stringBuilder.toString());
        } 
      } 
      if (a.d && moduleHolder.isTurboModule())
        continue; 
      this.c.put(str, moduleHolder);
    } 
  }
}
