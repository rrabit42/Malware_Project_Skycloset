package com.facebook.react.views.slider;

import android.graphics.PorterDuff;
import android.graphics.drawable.Drawable;
import android.graphics.drawable.LayerDrawable;
import android.view.View;
import android.widget.SeekBar;
import com.facebook.react.common.e;
import com.facebook.react.uimanager.SimpleViewManager;
import com.facebook.react.uimanager.a.a;
import com.facebook.react.uimanager.af;
import com.facebook.react.uimanager.h;
import com.facebook.react.uimanager.w;
import java.util.Map;

public class ReactSliderManager extends SimpleViewManager<a> {
  private static final SeekBar.OnSeekBarChangeListener ON_CHANGE_LISTENER = new Object();
  
  public static final String REACT_CLASS = "RCTSlider";
  
  private static final int STYLE = 16842875;
  
  protected void addEventEmitters(af paramaf, a parama) { parama.setOnSeekBarChangeListener(ON_CHANGE_LISTENER); }
  
  public h createShadowNodeInstance() { return new a(null); }
  
  protected a createViewInstance(af paramaf) { return new a(paramaf, null, 16842875); }
  
  public Map getExportedCustomDirectEventTypeConstants() { return e.a("topSlidingComplete", e.a("registrationName", "onSlidingComplete")); }
  
  public String getName() { return "RCTSlider"; }
  
  public Class getShadowNodeClass() { return a.class; }
  
  @a(a = "enabled", f = true)
  public void setEnabled(a parama, boolean paramBoolean) { parama.setEnabled(paramBoolean); }
  
  @a(a = "maximumTrackTintColor", b = "Color")
  public void setMaximumTrackTintColor(a parama, Integer paramInteger) {
    Drawable drawable = ((LayerDrawable)parama.getProgressDrawable().getCurrent()).findDrawableByLayerId(16908288);
    if (paramInteger == null) {
      drawable.clearColorFilter();
      return;
    } 
    drawable.setColorFilter(paramInteger.intValue(), PorterDuff.Mode.SRC_IN);
  }
  
  @a(a = "maximumValue", c = 1.0D)
  public void setMaximumValue(a parama, double paramDouble) { parama.setMaxValue(paramDouble); }
  
  @a(a = "minimumTrackTintColor", b = "Color")
  public void setMinimumTrackTintColor(a parama, Integer paramInteger) {
    Drawable drawable = ((LayerDrawable)parama.getProgressDrawable().getCurrent()).findDrawableByLayerId(16908301);
    if (paramInteger == null) {
      drawable.clearColorFilter();
      return;
    } 
    drawable.setColorFilter(paramInteger.intValue(), PorterDuff.Mode.SRC_IN);
  }
  
  @a(a = "minimumValue", c = 0.0D)
  public void setMinimumValue(a parama, double paramDouble) { parama.setMinValue(paramDouble); }
  
  @a(a = "step", c = 0.0D)
  public void setStep(a parama, double paramDouble) { parama.setStep(paramDouble); }
  
  @a(a = "thumbTintColor", b = "Color")
  public void setThumbTintColor(a parama, Integer paramInteger) {
    if (paramInteger == null) {
      parama.getThumb().clearColorFilter();
      return;
    } 
    parama.getThumb().setColorFilter(paramInteger.intValue(), PorterDuff.Mode.SRC_IN);
  }
  
  @a(a = "value", c = 0.0D)
  public void setValue(a parama, double paramDouble) {
    parama.setOnSeekBarChangeListener(null);
    parama.setValue(paramDouble);
    parama.setOnSeekBarChangeListener(ON_CHANGE_LISTENER);
  }
}
