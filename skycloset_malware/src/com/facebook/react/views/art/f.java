package com.facebook.react.views.art;

import android.graphics.Canvas;
import android.graphics.Matrix;
import android.graphics.Paint;
import com.facebook.react.bridge.JSApplicationIllegalArgumentException;
import com.facebook.react.bridge.ReadableArray;
import com.facebook.react.uimanager.a.a;
import com.facebook.react.uimanager.c;
import com.facebook.react.uimanager.x;

public abstract class f extends x {
  private static final float[] a = new float[9];
  
  private static final float[] d = new float[9];
  
  protected float b = 1.0F;
  
  protected final float c = (c.a()).density;
  
  private Matrix e = new Matrix();
  
  protected void Q() {
    float[] arrayOfFloat1 = d;
    float[] arrayOfFloat2 = a;
    arrayOfFloat1[0] = arrayOfFloat2[0];
    arrayOfFloat1[1] = arrayOfFloat2[2];
    float f1 = arrayOfFloat2[4];
    float f2 = this.c;
    arrayOfFloat1[2] = f1 * f2;
    arrayOfFloat1[3] = arrayOfFloat2[1];
    arrayOfFloat1[4] = arrayOfFloat2[3];
    arrayOfFloat1[5] = arrayOfFloat2[5] * f2;
    arrayOfFloat1[6] = 0.0F;
    arrayOfFloat1[7] = 0.0F;
    arrayOfFloat1[8] = 1.0F;
    if (this.e == null)
      this.e = new Matrix(); 
    this.e.setValues(d);
  }
  
  protected final void a(Canvas paramCanvas) {
    paramCanvas.save();
    Matrix matrix = this.e;
    if (matrix != null)
      paramCanvas.concat(matrix); 
  }
  
  public abstract void a(Canvas paramCanvas, Paint paramPaint, float paramFloat);
  
  public boolean a() { return true; }
  
  protected void b(Canvas paramCanvas) { paramCanvas.restore(); }
  
  @a(a = "opacity", d = 1.0F)
  public void setOpacity(float paramFloat) {
    this.b = paramFloat;
    D();
  }
  
  @a(a = "transform")
  public void setTransform(ReadableArray paramReadableArray) {
    if (paramReadableArray != null) {
      int i = g.a(paramReadableArray, a);
      if (i == 6) {
        Q();
      } else if (i != -1) {
        throw new JSApplicationIllegalArgumentException("Transform matrices must be of size 6");
      } 
    } else {
      this.e = null;
    } 
    D();
  }
}
