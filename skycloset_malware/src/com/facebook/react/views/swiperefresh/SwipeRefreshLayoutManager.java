package com.facebook.react.views.swiperefresh;

import android.view.View;
import com.facebook.react.bridge.ReadableArray;
import com.facebook.react.common.e;
import com.facebook.react.module.a.a;
import com.facebook.react.uimanager.ViewGroupManager;
import com.facebook.react.uimanager.a.a;
import com.facebook.react.uimanager.af;
import java.util.Map;

@a(a = "AndroidSwipeRefreshLayout")
public class SwipeRefreshLayoutManager extends ViewGroupManager<a> {
  public static final String REACT_CLASS = "AndroidSwipeRefreshLayout";
  
  protected void addEventEmitters(af paramaf, a parama) { parama.setOnRefreshListener(new Object(this, paramaf, parama)); }
  
  protected a createViewInstance(af paramaf) { return new a(paramaf); }
  
  public Map<String, Object> getExportedCustomDirectEventTypeConstants() { return e.c().a("topRefresh", e.a("registrationName", "onRefresh")).a(); }
  
  public Map<String, Object> getExportedViewConstants() { return e.a("SIZE", e.a("DEFAULT", Integer.valueOf(1), "LARGE", Integer.valueOf(0))); }
  
  public String getName() { return "AndroidSwipeRefreshLayout"; }
  
  @a(a = "colors", b = "ColorArray")
  public void setColors(a parama, ReadableArray paramReadableArray) {
    byte b = 0;
    if (paramReadableArray != null) {
      int[] arrayOfInt = new int[paramReadableArray.size()];
      while (b < paramReadableArray.size()) {
        arrayOfInt[b] = paramReadableArray.getInt(b);
        b++;
      } 
      parama.setColorSchemeColors(arrayOfInt);
      return;
    } 
    parama.setColorSchemeColors(new int[0]);
  }
  
  @a(a = "enabled", f = true)
  public void setEnabled(a parama, boolean paramBoolean) { parama.setEnabled(paramBoolean); }
  
  @a(a = "progressBackgroundColor", b = "Color", e = 0)
  public void setProgressBackgroundColor(a parama, int paramInt) { parama.setProgressBackgroundColorSchemeColor(paramInt); }
  
  @a(a = "progressViewOffset", d = 0.0F)
  public void setProgressViewOffset(a parama, float paramFloat) { parama.setProgressViewOffset(paramFloat); }
  
  @a(a = "refreshing")
  public void setRefreshing(a parama, boolean paramBoolean) { parama.setRefreshing(paramBoolean); }
  
  @a(a = "size", e = 1)
  public void setSize(a parama, int paramInt) { parama.setSize(paramInt); }
}
