package com.facebook.react.views.textinput;

import android.annotation.TargetApi;
import android.os.Build;
import android.support.v4.f.r;
import android.view.ViewGroup;
import android.widget.EditText;
import com.facebook.i.a.a;
import com.facebook.react.bridge.JSApplicationIllegalArgumentException;
import com.facebook.react.uimanager.a.a;
import com.facebook.react.uimanager.af;
import com.facebook.react.uimanager.ap;
import com.facebook.react.views.text.h;
import com.facebook.react.views.text.q;
import com.facebook.react.views.view.b;
import com.facebook.yoga.YogaMeasureFunction;
import com.facebook.yoga.YogaMeasureMode;
import com.facebook.yoga.YogaNode;
import com.facebook.yoga.b;

@TargetApi(23)
public class m extends h implements YogaMeasureFunction {
  private String A = null;
  
  private int w = -1;
  
  private EditText x;
  
  private k y;
  
  private String z = null;
  
  public m() {
    if (Build.VERSION.SDK_INT < 23) {
      bool = false;
    } else {
      bool = true;
    } 
    this.h = bool;
    S();
  }
  
  private void S() { a(this); }
  
  public boolean C() { return true; }
  
  public String Q() { return this.z; }
  
  public String R() { return this.A; }
  
  public void a(af paramaf) {
    super.a(paramaf);
    EditText editText = new EditText(m());
    c(4, r.f(editText));
    c(1, editText.getPaddingTop());
    c(5, r.g(editText));
    c(3, editText.getPaddingBottom());
    this.x = editText;
    this.x.setPadding(0, 0, 0, 0);
    this.x.setLayoutParams(new ViewGroup.LayoutParams(-2, -2));
  }
  
  public void a(ap paramap) {
    super.a(paramap);
    if (this.w != -1) {
      q q = new q(a(this, Q()), this.w, this.u, j(0), j(1), j(2), j(3), this.g, this.h, this.i);
      paramap.a(j(), q);
    } 
  }
  
  public void a(Object paramObject) {
    a.a(paramObject instanceof k);
    this.y = (k)paramObject;
    f();
  }
  
  public boolean b() { return true; }
  
  public void d(int paramInt, float paramFloat) {
    super.d(paramInt, paramFloat);
    D();
  }
  
  public long measure(YogaNode paramYogaNode, float paramFloat1, YogaMeasureMode paramYogaMeasureMode1, float paramFloat2, YogaMeasureMode paramYogaMeasureMode2) {
    EditText editText = (EditText)a.a(this.x);
    k k1 = this.y;
    if (k1 != null) {
      k1.a(editText);
    } else {
      editText.setTextSize(0, this.a.h());
      if (this.f != -1)
        editText.setLines(this.f); 
      if (Build.VERSION.SDK_INT >= 23 && editText.getBreakStrategy() != this.h)
        editText.setBreakStrategy(this.h); 
    } 
    editText.setHint(R());
    editText.measure(b.a(paramFloat1, paramYogaMeasureMode1), b.a(paramFloat2, paramYogaMeasureMode2));
    return b.a(editText.getMeasuredWidth(), editText.getMeasuredHeight());
  }
  
  @a(a = "mostRecentEventCount")
  public void setMostRecentEventCount(int paramInt) { this.w = paramInt; }
  
  @a(a = "placeholder")
  public void setPlaceholder(String paramString) {
    this.A = paramString;
    D();
  }
  
  @a(a = "text")
  public void setText(String paramString) {
    this.z = paramString;
    D();
  }
  
  public void setTextBreakStrategy(String paramString) {
    byte b;
    if (Build.VERSION.SDK_INT < 23)
      return; 
    if (paramString == null || "simple".equals(paramString)) {
      b = 0;
    } else if ("highQuality".equals(paramString)) {
      b = 1;
    } else if ("balanced".equals(paramString)) {
      b = 2;
    } else {
      StringBuilder stringBuilder = new StringBuilder();
      stringBuilder.append("Invalid textBreakStrategy: ");
      stringBuilder.append(paramString);
      throw new JSApplicationIllegalArgumentException(stringBuilder.toString());
    } 
    this.h = b;
  }
}
