package com.facebook.react.views.viewpager;

import android.support.v4.f.p;
import android.support.v4.f.u;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewGroup;
import com.facebook.common.e.a;
import com.facebook.react.bridge.ReactContext;
import com.facebook.react.uimanager.UIManagerModule;
import com.facebook.react.uimanager.events.d;
import com.facebook.react.uimanager.events.f;
import java.util.List;

public class d extends u {
  private final d d;
  
  private boolean e;
  
  private boolean f = true;
  
  private final Runnable g = new Object(this);
  
  public d(ReactContext paramReactContext) {
    super(paramReactContext);
    this.d = ((UIManagerModule)paramReactContext.getNativeModule(UIManagerModule.class)).getEventDispatcher();
    this.e = false;
    setOnPageChangeListener(new b(this, null));
    setAdapter(new a(this, null));
  }
  
  void a(View paramView, int paramInt) { getAdapter().b(paramView, paramInt); }
  
  public void b(int paramInt, boolean paramBoolean) {
    this.e = true;
    a(paramInt, paramBoolean);
    this.e = false;
  }
  
  void d(int paramInt) { getAdapter().b(paramInt); }
  
  View e(int paramInt) { return getAdapter().c(paramInt); }
  
  public a getAdapter() { return (a)super.getAdapter(); }
  
  int getViewCountInAdapter() { return getAdapter().a(); }
  
  protected void onAttachedToWindow() {
    super.onAttachedToWindow();
    requestLayout();
    post(this.g);
  }
  
  public boolean onInterceptTouchEvent(MotionEvent paramMotionEvent) {
    if (!this.f)
      return false; 
    try {
      if (super.onInterceptTouchEvent(paramMotionEvent)) {
        f.a(this, paramMotionEvent);
        return true;
      } 
    } catch (IllegalArgumentException paramMotionEvent) {
      a.b("ReactNative", "Error intercepting touch event.", paramMotionEvent);
    } 
    return false;
  }
  
  public boolean onTouchEvent(MotionEvent paramMotionEvent) {
    if (!this.f)
      return false; 
    try {
      return super.onTouchEvent(paramMotionEvent);
    } catch (IllegalArgumentException paramMotionEvent) {
      a.b("ReactNative", "Error handling touch event.", paramMotionEvent);
      return false;
    } 
  }
  
  public void setScrollEnabled(boolean paramBoolean) { this.f = paramBoolean; }
  
  public void setViews(List<View> paramList) { getAdapter().a(paramList); }
}
