package com.facebook.react.views.text;

import com.facebook.react.bridge.JSApplicationIllegalArgumentException;
import com.facebook.react.uimanager.o;

public class w {
  private boolean a = true;
  
  private float b = NaNF;
  
  private float c = NaNF;
  
  private float d = NaNF;
  
  private float e = NaNF;
  
  private float f = NaNF;
  
  private z g = z.e;
  
  public w a(w paramw) {
    float f1;
    z z1;
    w w1 = new w();
    w1.a = this.a;
    if (!Float.isNaN(paramw.b)) {
      f1 = paramw.b;
    } else {
      f1 = this.b;
    } 
    w1.b = f1;
    if (!Float.isNaN(paramw.c)) {
      f1 = paramw.c;
    } else {
      f1 = this.c;
    } 
    w1.c = f1;
    if (!Float.isNaN(paramw.d)) {
      f1 = paramw.d;
    } else {
      f1 = this.d;
    } 
    w1.d = f1;
    if (!Float.isNaN(paramw.e)) {
      f1 = paramw.e;
    } else {
      f1 = this.e;
    } 
    w1.e = f1;
    if (!Float.isNaN(paramw.f)) {
      f1 = paramw.f;
    } else {
      f1 = this.f;
    } 
    w1.f = f1;
    if (paramw.g != z.e) {
      z1 = paramw.g;
    } else {
      z1 = this.g;
    } 
    w1.g = z1;
    return w1;
  }
  
  public void a(float paramFloat) { this.b = paramFloat; }
  
  public void a(z paramz) { this.g = paramz; }
  
  public void a(boolean paramBoolean) { this.a = paramBoolean; }
  
  public boolean a() { return this.a; }
  
  public float b() { return this.b; }
  
  public void b(float paramFloat) { this.c = paramFloat; }
  
  public float c() { return this.c; }
  
  public void c(float paramFloat) { this.d = paramFloat; }
  
  public float d() { return this.d; }
  
  public void d(float paramFloat) {
    if (paramFloat == 0.0F || paramFloat >= 1.0F) {
      this.e = paramFloat;
      return;
    } 
    throw new JSApplicationIllegalArgumentException("maxFontSizeMultiplier must be NaN, 0, or >= 1");
  }
  
  public float e() { return this.e; }
  
  public void e(float paramFloat) { this.f = paramFloat; }
  
  public float f() { return this.f; }
  
  public z g() { return this.g; }
  
  public int h() {
    float f1;
    if (!Float.isNaN(this.b)) {
      f1 = this.b;
    } else {
      f1 = 14.0F;
    } 
    if (this.a) {
      f1 = o.a(f1, k());
    } else {
      f1 = o.a(f1);
    } 
    return (int)Math.ceil(f1);
  }
  
  public float i() {
    boolean bool;
    float f1;
    if (Float.isNaN(this.c))
      return NaNF; 
    if (this.a) {
      f1 = o.a(this.c, k());
    } else {
      f1 = o.a(this.c);
    } 
    if (!Float.isNaN(this.f) && this.f > f1) {
      bool = true;
    } else {
      bool = false;
    } 
    if (bool)
      f1 = this.f; 
    return f1;
  }
  
  public float j() {
    float f1;
    if (Float.isNaN(this.d))
      return NaNF; 
    if (this.a) {
      f1 = o.a(this.d, k());
    } else {
      f1 = o.a(this.d);
    } 
    return f1 / h();
  }
  
  public float k() { return !Float.isNaN(this.e) ? this.e : 0.0F; }
  
  public String toString() {
    StringBuilder stringBuilder = new StringBuilder();
    stringBuilder.append("TextAttributes {\n  getAllowFontScaling(): ");
    stringBuilder.append(a());
    stringBuilder.append("\n  getFontSize(): ");
    stringBuilder.append(b());
    stringBuilder.append("\n  getEffectiveFontSize(): ");
    stringBuilder.append(h());
    stringBuilder.append("\n  getHeightOfTallestInlineImage(): ");
    stringBuilder.append(f());
    stringBuilder.append("\n  getLetterSpacing(): ");
    stringBuilder.append(d());
    stringBuilder.append("\n  getEffectiveLetterSpacing(): ");
    stringBuilder.append(j());
    stringBuilder.append("\n  getLineHeight(): ");
    stringBuilder.append(c());
    stringBuilder.append("\n  getEffectiveLineHeight(): ");
    stringBuilder.append(i());
    stringBuilder.append("\n  getTextTransform(): ");
    stringBuilder.append(g());
    stringBuilder.append("\n  getMaxFontSizeMultiplier(): ");
    stringBuilder.append(e());
    stringBuilder.append("\n  getEffectiveMaxFontSizeMultiplier(): ");
    stringBuilder.append(k());
    stringBuilder.append("\n}");
    return stringBuilder.toString();
  }
}
