package com.facebook.react.views.modal;

import android.view.View;
import com.facebook.react.common.e;
import com.facebook.react.module.a.a;
import com.facebook.react.uimanager.UIManagerModule;
import com.facebook.react.uimanager.ViewGroupManager;
import com.facebook.react.uimanager.a.a;
import com.facebook.react.uimanager.af;
import com.facebook.react.uimanager.events.d;
import com.facebook.react.uimanager.h;
import com.facebook.react.uimanager.w;
import java.util.Map;

@a(a = "RCTModalHostView")
public class ReactModalHostManager extends ViewGroupManager<c> {
  public static final String REACT_CLASS = "RCTModalHostView";
  
  protected void addEventEmitters(af paramaf, c paramc) {
    d d = ((UIManagerModule)paramaf.getNativeModule(UIManagerModule.class)).getEventDispatcher();
    paramc.setOnRequestCloseListener(new Object(this, d, paramc));
    paramc.setOnShowListener(new Object(this, d, paramc));
  }
  
  public h createShadowNodeInstance() { return new b(); }
  
  protected c createViewInstance(af paramaf) { return new c(paramaf); }
  
  public Map<String, Object> getExportedCustomDirectEventTypeConstants() { return e.c().a("topRequestClose", e.a("registrationName", "onRequestClose")).a("topShow", e.a("registrationName", "onShow")).a(); }
  
  public String getName() { return "RCTModalHostView"; }
  
  public Class<? extends h> getShadowNodeClass() { return b.class; }
  
  protected void onAfterUpdateTransaction(c paramc) {
    super.onAfterUpdateTransaction(paramc);
    paramc.b();
  }
  
  public void onDropViewInstance(c paramc) {
    super.onDropViewInstance(paramc);
    paramc.a();
  }
  
  @a(a = "animationType")
  public void setAnimationType(c paramc, String paramString) { paramc.setAnimationType(paramString); }
  
  @a(a = "hardwareAccelerated")
  public void setHardwareAccelerated(c paramc, boolean paramBoolean) { paramc.setHardwareAccelerated(paramBoolean); }
  
  @a(a = "transparent")
  public void setTransparent(c paramc, boolean paramBoolean) { paramc.setTransparent(paramBoolean); }
}
