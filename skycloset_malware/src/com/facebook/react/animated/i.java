package com.facebook.react.animated;

import com.facebook.react.bridge.ReadableArray;
import com.facebook.react.bridge.ReadableMap;

class i extends s {
  private final double[] g;
  
  private final double[] h;
  
  private final String i;
  
  private final String j;
  
  private s k;
  
  public i(ReadableMap paramReadableMap) {
    this.g = a(paramReadableMap.getArray("inputRange"));
    this.h = a(paramReadableMap.getArray("outputRange"));
    this.i = paramReadableMap.getString("extrapolateLeft");
    this.j = paramReadableMap.getString("extrapolateRight");
  }
  
  private static double a(double paramDouble1, double paramDouble2, double paramDouble3, double paramDouble4, double paramDouble5, String paramString1, String paramString2) { // Byte code:
    //   0: iconst_0
    //   1: istore #15
    //   3: dload_0
    //   4: dload_2
    //   5: dcmpg
    //   6: ifge -> 173
    //   9: aload #10
    //   11: invokevirtual hashCode : ()I
    //   14: istore #14
    //   16: iload #14
    //   18: ldc -1289044198
    //   20: if_icmpeq -> 72
    //   23: iload #14
    //   25: ldc -135761730
    //   27: if_icmpeq -> 56
    //   30: iload #14
    //   32: ldc 94742715
    //   34: if_icmpeq -> 40
    //   37: goto -> 88
    //   40: aload #10
    //   42: ldc 'clamp'
    //   44: invokevirtual equals : (Ljava/lang/Object;)Z
    //   47: ifeq -> 88
    //   50: iconst_1
    //   51: istore #14
    //   53: goto -> 91
    //   56: aload #10
    //   58: ldc 'identity'
    //   60: invokevirtual equals : (Ljava/lang/Object;)Z
    //   63: ifeq -> 88
    //   66: iconst_0
    //   67: istore #14
    //   69: goto -> 91
    //   72: aload #10
    //   74: ldc 'extend'
    //   76: invokevirtual equals : (Ljava/lang/Object;)Z
    //   79: ifeq -> 88
    //   82: iconst_2
    //   83: istore #14
    //   85: goto -> 91
    //   88: iconst_m1
    //   89: istore #14
    //   91: iload #14
    //   93: tableswitch default -> 120, 0 -> 171, 1 -> 166, 2 -> 173
    //   120: new java/lang/StringBuilder
    //   123: dup
    //   124: invokespecial <init> : ()V
    //   127: astore #11
    //   129: aload #11
    //   131: ldc 'Invalid extrapolation type '
    //   133: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   136: pop
    //   137: aload #11
    //   139: aload #10
    //   141: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   144: pop
    //   145: aload #11
    //   147: ldc 'for left extrapolation'
    //   149: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   152: pop
    //   153: new com/facebook/react/bridge/JSApplicationIllegalArgumentException
    //   156: dup
    //   157: aload #11
    //   159: invokevirtual toString : ()Ljava/lang/String;
    //   162: invokespecial <init> : (Ljava/lang/String;)V
    //   165: athrow
    //   166: dload_2
    //   167: dstore_0
    //   168: goto -> 173
    //   171: dload_0
    //   172: dreturn
    //   173: dload_0
    //   174: dstore #12
    //   176: dload_0
    //   177: dload #4
    //   179: dcmpl
    //   180: ifle -> 351
    //   183: aload #11
    //   185: invokevirtual hashCode : ()I
    //   188: istore #14
    //   190: iload #14
    //   192: ldc -1289044198
    //   194: if_icmpeq -> 247
    //   197: iload #14
    //   199: ldc -135761730
    //   201: if_icmpeq -> 230
    //   204: iload #14
    //   206: ldc 94742715
    //   208: if_icmpeq -> 214
    //   211: goto -> 263
    //   214: aload #11
    //   216: ldc 'clamp'
    //   218: invokevirtual equals : (Ljava/lang/Object;)Z
    //   221: ifeq -> 263
    //   224: iconst_1
    //   225: istore #14
    //   227: goto -> 266
    //   230: aload #11
    //   232: ldc 'identity'
    //   234: invokevirtual equals : (Ljava/lang/Object;)Z
    //   237: ifeq -> 263
    //   240: iload #15
    //   242: istore #14
    //   244: goto -> 266
    //   247: aload #11
    //   249: ldc 'extend'
    //   251: invokevirtual equals : (Ljava/lang/Object;)Z
    //   254: ifeq -> 263
    //   257: iconst_2
    //   258: istore #14
    //   260: goto -> 266
    //   263: iconst_m1
    //   264: istore #14
    //   266: dload_0
    //   267: dstore #12
    //   269: iload #14
    //   271: tableswitch default -> 296, 0 -> 349, 1 -> 342, 2 -> 351
    //   296: new java/lang/StringBuilder
    //   299: dup
    //   300: invokespecial <init> : ()V
    //   303: astore #10
    //   305: aload #10
    //   307: ldc 'Invalid extrapolation type '
    //   309: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   312: pop
    //   313: aload #10
    //   315: aload #11
    //   317: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   320: pop
    //   321: aload #10
    //   323: ldc 'for right extrapolation'
    //   325: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   328: pop
    //   329: new com/facebook/react/bridge/JSApplicationIllegalArgumentException
    //   332: dup
    //   333: aload #10
    //   335: invokevirtual toString : ()Ljava/lang/String;
    //   338: invokespecial <init> : (Ljava/lang/String;)V
    //   341: athrow
    //   342: dload #4
    //   344: dstore #12
    //   346: goto -> 351
    //   349: dload_0
    //   350: dreturn
    //   351: dload #6
    //   353: dload #8
    //   355: dload #6
    //   357: dsub
    //   358: dload #12
    //   360: dload_2
    //   361: dsub
    //   362: dmul
    //   363: dload #4
    //   365: dload_2
    //   366: dsub
    //   367: ddiv
    //   368: dadd
    //   369: dreturn }
  
  static double a(double paramDouble, double[] paramArrayOfDouble1, double[] paramArrayOfDouble2, String paramString1, String paramString2) {
    int m = a(paramDouble, paramArrayOfDouble1);
    double d = paramArrayOfDouble1[m];
    int n = m + 1;
    return a(paramDouble, d, paramArrayOfDouble1[n], paramArrayOfDouble2[m], paramArrayOfDouble2[n], paramString1, paramString2);
  }
  
  private static int a(double paramDouble, double[] paramArrayOfDouble) {
    byte b;
    for (b = 1; b < paramArrayOfDouble.length - 1 && paramArrayOfDouble[b] < paramDouble; b++);
    return b - 1;
  }
  
  private static double[] a(ReadableArray paramReadableArray) {
    double[] arrayOfDouble = new double[paramReadableArray.size()];
    for (byte b = 0; b < arrayOfDouble.length; b++)
      arrayOfDouble[b] = paramReadableArray.getDouble(b); 
    return arrayOfDouble;
  }
  
  public void a() {
    s s1 = this.k;
    if (s1 == null)
      return; 
    this.e = a(s1.b(), this.g, this.h, this.i, this.j);
  }
  
  public void c(b paramb) {
    if (this.k == null) {
      if (paramb instanceof s) {
        this.k = (s)paramb;
        return;
      } 
      throw new IllegalArgumentException("Parent is of an invalid type");
    } 
    throw new IllegalStateException("Parent already attached");
  }
  
  public void d(b paramb) {
    if (paramb == this.k) {
      this.k = null;
      return;
    } 
    throw new IllegalArgumentException("Invalid parent node provided");
  }
}
