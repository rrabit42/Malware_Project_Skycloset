package com.facebook.react.animated;

import com.facebook.react.bridge.ReadableArray;
import com.facebook.react.bridge.ReadableMap;

class h extends d {
  private long e;
  
  private double[] f;
  
  private double g;
  
  private double h;
  
  private int i;
  
  private int j;
  
  h(ReadableMap paramReadableMap) { a(paramReadableMap); }
  
  public void a(long paramLong) {
    if (this.e < 0L) {
      this.e = paramLong;
      if (this.j == 1)
        this.h = this.b.e; 
    } 
    int k = (int)Math.round(((paramLong - this.e) / 1000000L) / 16.666666666666668D);
    if (k >= 0) {
      double d1;
      if (this.a)
        return; 
      double[] arrayOfDouble = this.f;
      if (k >= arrayOfDouble.length - 1) {
        d1 = this.g;
        k = this.i;
        if (k == -1 || this.j < k) {
          this.e = -1L;
          this.j++;
        } else {
          this.a = true;
        } 
      } else {
        d1 = this.h;
        d1 = arrayOfDouble[k] * (this.g - d1) + d1;
      } 
      this.b.e = d1;
      return;
    } 
    throw new IllegalStateException("Calculated frame index should never be lower than 0");
  }
  
  public void a(ReadableMap paramReadableMap) {
    double d1;
    ReadableArray readableArray = paramReadableMap.getArray("frames");
    int m = readableArray.size();
    double[] arrayOfDouble = this.f;
    if (arrayOfDouble == null || arrayOfDouble.length != m)
      this.f = new double[m]; 
    int k;
    for (k = 0; k < m; k++)
      this.f[k] = readableArray.getDouble(k); 
    if (paramReadableMap.hasKey("toValue")) {
      d1 = paramReadableMap.getDouble("toValue");
    } else {
      d1 = 0.0D;
    } 
    this.g = d1;
    boolean bool1 = paramReadableMap.hasKey("iterations");
    boolean bool = true;
    if (bool1) {
      k = paramReadableMap.getInt("iterations");
    } else {
      k = 1;
    } 
    this.i = k;
    this.j = 1;
    if (this.i != 0)
      bool = false; 
    this.a = bool;
    this.e = -1L;
  }
}
