package com.facebook.react.uimanager;

import android.view.View;
import android.view.ViewGroup;
import java.util.List;
import java.util.WeakHashMap;

public abstract class ViewGroupManager<T extends ViewGroup> extends BaseViewManager<T, h> {
  private static WeakHashMap<View, Integer> mZIndexHash = new WeakHashMap();
  
  public static Integer getViewZIndex(View paramView) { return (Integer)mZIndexHash.get(paramView); }
  
  public static void setViewZIndex(View paramView, int paramInt) { mZIndexHash.put(paramView, Integer.valueOf(paramInt)); }
  
  public void addView(T paramT, View paramView, int paramInt) { paramT.addView(paramView, paramInt); }
  
  public void addViews(T paramT, List<View> paramList) {
    int i = paramList.size();
    for (byte b = 0; b < i; b++)
      addView(paramT, (View)paramList.get(b), b); 
  }
  
  public h createShadowNodeInstance() { return new h(); }
  
  public View getChildAt(T paramT, int paramInt) { return paramT.getChildAt(paramInt); }
  
  public int getChildCount(T paramT) { return paramT.getChildCount(); }
  
  public Class<? extends h> getShadowNodeClass() { return h.class; }
  
  public boolean needsCustomLayoutForChildren() { return false; }
  
  public void removeAllViews(T paramT) {
    for (int i = getChildCount(paramT) - 1; i >= 0; i--)
      removeViewAt(paramT, i); 
  }
  
  public void removeView(T paramT, View paramView) {
    for (byte b = 0; b < getChildCount(paramT); b++) {
      if (getChildAt(paramT, b) == paramView) {
        removeViewAt(paramT, b);
        return;
      } 
    } 
  }
  
  public void removeViewAt(T paramT, int paramInt) { paramT.removeViewAt(paramInt); }
  
  public boolean shouldPromoteGrandchildren() { return false; }
  
  public void updateExtraData(T paramT, Object paramObject) {}
}
