package com.facebook.react.uimanager.c;

import android.view.View;
import android.view.animation.Animation;
import android.view.animation.ScaleAnimation;
import com.facebook.react.uimanager.f;

abstract class c extends a {
  Animation a(View paramView, int paramInt1, int paramInt2, int paramInt3, int paramInt4) {
    if (this.a != null) {
      float f1;
      StringBuilder stringBuilder;
      paramInt1 = null.a[this.a.ordinal()];
      float f2 = 0.0F;
      switch (paramInt1) {
        default:
          stringBuilder = new StringBuilder();
          stringBuilder.append("Missing animation for property : ");
          stringBuilder.append(this.a);
          throw new f(stringBuilder.toString());
        case 4:
          if (c()) {
            f1 = 1.0F;
          } else {
            f1 = 0.0F;
          } 
          if (c()) {
            f2 = 0.0F;
          } else {
            f2 = 1.0F;
          } 
          return new ScaleAnimation(1.0F, 1.0F, f1, f2, 1, 0.0F, 1, 0.5F);
        case 3:
          if (c()) {
            f1 = 1.0F;
          } else {
            f1 = 0.0F;
          } 
          if (c()) {
            f2 = 0.0F;
          } else {
            f2 = 1.0F;
          } 
          return new ScaleAnimation(f1, f2, 1.0F, 1.0F, 1, 0.5F, 1, 0.0F);
        case 2:
          if (c()) {
            f1 = 1.0F;
          } else {
            f1 = 0.0F;
          } 
          if (c()) {
            f2 = 0.0F;
          } else {
            f2 = 1.0F;
          } 
          return new ScaleAnimation(f1, f2, f1, f2, 1, 0.5F, 1, 0.5F);
        case 1:
          break;
      } 
      if (c()) {
        f1 = stringBuilder.getAlpha();
      } else {
        f1 = 0.0F;
      } 
      if (!c())
        f2 = stringBuilder.getAlpha(); 
      return new l(stringBuilder, f1, f2);
    } 
    throw new f("Missing animated property from animation config");
  }
  
  boolean a() { return (this.b > 0 && this.a != null); }
  
  abstract boolean c();
}
