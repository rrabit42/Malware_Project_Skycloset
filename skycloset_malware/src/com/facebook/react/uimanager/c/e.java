package com.facebook.react.uimanager.c;

import android.util.SparseArray;
import android.view.View;
import android.view.ViewGroup;
import android.view.animation.Animation;
import com.facebook.react.bridge.ReadableMap;
import com.facebook.react.bridge.UiThreadUtil;

public class e {
  private final a a = new h();
  
  private final a b = new k();
  
  private final a c = new i();
  
  private final SparseArray<j> d = new SparseArray(0);
  
  private boolean e;
  
  private void b(View paramView) {
    byte b1 = 0;
    paramView.setClickable(false);
    if (paramView instanceof ViewGroup) {
      ViewGroup viewGroup = (ViewGroup)paramView;
      while (b1 < viewGroup.getChildCount()) {
        b(viewGroup.getChildAt(b1));
        b1++;
      } 
    } 
  }
  
  public void a() {
    this.a.b();
    this.b.b();
    this.c.b();
    this.e = false;
  }
  
  public void a(View paramView, int paramInt1, int paramInt2, int paramInt3, int paramInt4) {
    UiThreadUtil.assertOnUiThread();
    int i = paramView.getId();
    a a1 = (j)this.d.get(i);
    if (a1 != null) {
      a1.a(paramInt1, paramInt2, paramInt3, paramInt4);
      return;
    } 
    if (paramView.getWidth() == 0 || paramView.getHeight() == 0) {
      a a2 = this.a;
    } else {
      a1 = this.b;
    } 
    Animation animation = a1.b(paramView, paramInt1, paramInt2, paramInt3, paramInt4);
    if (animation instanceof j) {
      animation.setAnimationListener(new Object(this, i));
    } else {
      paramView.layout(paramInt1, paramInt2, paramInt3 + paramInt1, paramInt4 + paramInt2);
    } 
    if (animation != null)
      paramView.startAnimation(animation); 
  }
  
  public void a(View paramView, f paramf) {
    UiThreadUtil.assertOnUiThread();
    Animation animation = this.c.b(paramView, paramView.getLeft(), paramView.getTop(), paramView.getWidth(), paramView.getHeight());
    if (animation != null) {
      b(paramView);
      animation.setAnimationListener(new Object(this, paramf));
      paramView.startAnimation(animation);
      return;
    } 
    paramf.a();
  }
  
  public void a(ReadableMap paramReadableMap) {
    if (paramReadableMap == null) {
      a();
      return;
    } 
    int i = 0;
    this.e = false;
    if (paramReadableMap.hasKey("duration"))
      i = paramReadableMap.getInt("duration"); 
    if (paramReadableMap.hasKey(g.a(g.a))) {
      this.a.a(paramReadableMap.getMap(g.a(g.a)), i);
      this.e = true;
    } 
    if (paramReadableMap.hasKey(g.a(g.b))) {
      this.b.a(paramReadableMap.getMap(g.a(g.b)), i);
      this.e = true;
    } 
    if (paramReadableMap.hasKey(g.a(g.c))) {
      this.c.a(paramReadableMap.getMap(g.a(g.c)), i);
      this.e = true;
    } 
  }
  
  public boolean a(View paramView) { return ((this.e && paramView.getParent() != null) || this.d.get(paramView.getId()) != null); }
}
