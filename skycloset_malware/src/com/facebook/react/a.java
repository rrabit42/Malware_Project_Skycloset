package com.facebook.react;

import com.facebook.react.bridge.NativeModule;
import com.facebook.react.bridge.ReactApplicationContext;
import com.facebook.react.bridge.ReactMarker;
import com.facebook.react.bridge.ReactMarkerConstants;
import com.facebook.react.module.a.a;
import com.facebook.react.module.model.ReactModuleInfo;
import com.facebook.react.module.model.a;
import com.facebook.react.modules.core.DeviceEventManagerModule;
import com.facebook.react.modules.core.ExceptionsManagerModule;
import com.facebook.react.modules.core.HeadlessJsTaskSupportModule;
import com.facebook.react.modules.core.Timing;
import com.facebook.react.modules.core.b;
import com.facebook.react.modules.debug.SourceCodeModule;
import com.facebook.react.modules.deviceinfo.DeviceInfoModule;
import com.facebook.react.modules.systeminfo.AndroidInfoModule;
import com.facebook.react.uimanager.UIManagerModule;
import com.facebook.react.uimanager.ak;
import com.facebook.systrace.a;
import java.util.HashMap;

class a extends s implements q {
  private final k a;
  
  private final b b;
  
  private final boolean c;
  
  private final int d;
  
  a(k paramk, b paramb, ak paramak, boolean paramBoolean, int paramInt) {
    this.a = paramk;
    this.b = paramb;
    this.c = paramBoolean;
    this.d = paramInt;
  }
  
  private UIManagerModule e(ReactApplicationContext paramReactApplicationContext) {
    ReactMarker.logMarker(ReactMarkerConstants.CREATE_UI_MANAGER_MODULE_START);
    a.a(0L, "createUIManagerModule");
    try {
      if (this.c)
        return new UIManagerModule(paramReactApplicationContext, new Object(this), this.d); 
      return new UIManagerModule(null, this.a.a(null), this.d);
    } finally {
      a.b(0L);
      ReactMarker.logMarker(ReactMarkerConstants.CREATE_UI_MANAGER_MODULE_END);
    } 
  }
  
  public NativeModule a(String paramString, ReactApplicationContext paramReactApplicationContext) {
    byte b1;
    StringBuilder stringBuilder;
    switch (paramString.hashCode()) {
      default:
        b1 = -1;
        break;
      case 1861242489:
        if (paramString.equals("UIManager")) {
          b1 = 6;
          break;
        } 
      case 1256514152:
        if (paramString.equals("HeadlessJsTaskSupport")) {
          b1 = 3;
          break;
        } 
      case 881516744:
        if (paramString.equals("SourceCode")) {
          b1 = 4;
          break;
        } 
      case 512434409:
        if (paramString.equals("ExceptionsManager")) {
          b1 = 2;
          break;
        } 
      case -790603268:
        if (paramString.equals("PlatformConstants")) {
          b1 = 0;
          break;
        } 
      case -1037217463:
        if (paramString.equals("DeviceEventManager")) {
          b1 = 1;
          break;
        } 
      case -1520650172:
        if (paramString.equals("DeviceInfo")) {
          b1 = 7;
          break;
        } 
      case -1789797270:
        if (paramString.equals("Timing")) {
          b1 = 5;
          break;
        } 
    } 
    switch (b1) {
      default:
        stringBuilder = new StringBuilder();
        stringBuilder.append("In CoreModulesPackage, could not find Native module for ");
        stringBuilder.append(paramString);
        throw new IllegalArgumentException(stringBuilder.toString());
      case 7:
        return new DeviceInfoModule(stringBuilder);
      case 6:
        return e(stringBuilder);
      case 5:
        return new Timing(stringBuilder, this.a.b());
      case 4:
        return new SourceCodeModule(stringBuilder);
      case 3:
        return new HeadlessJsTaskSupportModule(stringBuilder);
      case 2:
        return new ExceptionsManagerModule(this.a.b());
      case 1:
        return new DeviceEventManagerModule(stringBuilder, this.b);
      case 0:
        break;
    } 
    return new AndroidInfoModule(stringBuilder);
  }
  
  public a a() {
    try {
      return (a)Class.forName("com.facebook.react.CoreModulesPackage$$ReactModuleInfoProvider").newInstance();
    } catch (ClassNotFoundException classNotFoundException) {
      Class[] arrayOfClass = new Class[8];
      byte b1 = 0;
      arrayOfClass[0] = AndroidInfoModule.class;
      arrayOfClass[1] = DeviceEventManagerModule.class;
      arrayOfClass[2] = DeviceInfoModule.class;
      arrayOfClass[3] = ExceptionsManagerModule.class;
      arrayOfClass[4] = HeadlessJsTaskSupportModule.class;
      arrayOfClass[5] = SourceCodeModule.class;
      arrayOfClass[6] = Timing.class;
      arrayOfClass[7] = UIManagerModule.class;
      HashMap hashMap = new HashMap();
      int i = arrayOfClass.length;
      while (b1 < i) {
        Class clazz = arrayOfClass[b1];
        a a1 = (a)clazz.getAnnotation(a.class);
        hashMap.put(a1.a(), new ReactModuleInfo(a1.a(), clazz.getName(), a1.b(), a1.c(), a1.d(), a1.e(), false));
        b1++;
      } 
      return new Object(this, hashMap);
    } catch (InstantiationException instantiationException) {
      throw new RuntimeException("No ReactModuleInfoProvider for CoreModulesPackage$$ReactModuleInfoProvider", instantiationException);
    } catch (IllegalAccessException illegalAccessException) {
      throw new RuntimeException("No ReactModuleInfoProvider for CoreModulesPackage$$ReactModuleInfoProvider", illegalAccessException);
    } 
  }
  
  public void b() { ReactMarker.logMarker(ReactMarkerConstants.PROCESS_CORE_REACT_PACKAGE_START); }
  
  public void c() { ReactMarker.logMarker(ReactMarkerConstants.PROCESS_CORE_REACT_PACKAGE_END); }
}
