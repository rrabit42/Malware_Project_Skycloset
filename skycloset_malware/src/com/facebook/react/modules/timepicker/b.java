package com.facebook.react.modules.timepicker;

import android.app.Dialog;
import android.app.TimePickerDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.os.Build;
import android.os.Bundle;
import android.support.v4.app.e;
import android.text.format.DateFormat;
import java.util.Calendar;
import java.util.Locale;

public class b extends e {
  private TimePickerDialog.OnTimeSetListener ag;
  
  private DialogInterface.OnDismissListener ah;
  
  static Dialog a(Bundle paramBundle, Context paramContext, TimePickerDialog.OnTimeSetListener paramOnTimeSetListener) {
    Calendar calendar = Calendar.getInstance();
    int i = calendar.get(11);
    int j = calendar.get(12);
    boolean bool = DateFormat.is24HourFormat(paramContext);
    c c2 = c.c;
    c c1 = c2;
    if (paramBundle != null) {
      c1 = c2;
      if (paramBundle.getString("mode", null) != null)
        c1 = c.valueOf(paramBundle.getString("mode").toUpperCase(Locale.US)); 
    } 
    if (paramBundle != null) {
      i = paramBundle.getInt("hour", calendar.get(11));
      j = paramBundle.getInt("minute", calendar.get(12));
      bool = paramBundle.getBoolean("is24Hour", DateFormat.is24HourFormat(paramContext));
    } 
    if (Build.VERSION.SDK_INT >= 21) {
      if (c1 == c.a)
        return new a(paramContext, paramContext.getResources().getIdentifier("ClockTimePickerDialog", "style", paramContext.getPackageName()), paramOnTimeSetListener, i, j, bool); 
      if (c1 == c.b)
        return new a(paramContext, paramContext.getResources().getIdentifier("SpinnerTimePickerDialog", "style", paramContext.getPackageName()), paramOnTimeSetListener, i, j, bool); 
    } 
    return new a(paramContext, paramOnTimeSetListener, i, j, bool);
  }
  
  public void a(TimePickerDialog.OnTimeSetListener paramOnTimeSetListener) { this.ag = paramOnTimeSetListener; }
  
  public void a(DialogInterface.OnDismissListener paramOnDismissListener) { this.ah = paramOnDismissListener; }
  
  public Dialog c(Bundle paramBundle) { return a(j(), n(), this.ag); }
  
  public void onDismiss(DialogInterface paramDialogInterface) {
    super.onDismiss(paramDialogInterface);
    DialogInterface.OnDismissListener onDismissListener = this.ah;
    if (onDismissListener != null)
      onDismissListener.onDismiss(paramDialogInterface); 
  }
}
