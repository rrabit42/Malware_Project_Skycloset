package com.facebook.react.modules.datepicker;

import android.os.Bundle;
import android.support.v4.app.e;
import android.support.v4.app.g;
import android.support.v4.app.k;
import com.facebook.react.bridge.Promise;
import com.facebook.react.bridge.ReactApplicationContext;
import com.facebook.react.bridge.ReactContextBaseJavaModule;
import com.facebook.react.bridge.ReactMethod;
import com.facebook.react.bridge.ReadableMap;
import com.facebook.react.module.a.a;

@a(a = "DatePickerAndroid")
public class DatePickerDialogModule extends ReactContextBaseJavaModule {
  static final String ACTION_DATE_SET = "dateSetAction";
  
  static final String ACTION_DISMISSED = "dismissedAction";
  
  static final String ARG_DATE = "date";
  
  static final String ARG_MAXDATE = "maxDate";
  
  static final String ARG_MINDATE = "minDate";
  
  static final String ARG_MODE = "mode";
  
  private static final String ERROR_NO_ACTIVITY = "E_NO_ACTIVITY";
  
  public static final String FRAGMENT_TAG = "DatePickerAndroid";
  
  public DatePickerDialogModule(ReactApplicationContext paramReactApplicationContext) { super(paramReactApplicationContext); }
  
  private Bundle createFragmentArguments(ReadableMap paramReadableMap) {
    Bundle bundle = new Bundle();
    if (paramReadableMap.hasKey("date") && !paramReadableMap.isNull("date"))
      bundle.putLong("date", (long)paramReadableMap.getDouble("date")); 
    if (paramReadableMap.hasKey("minDate") && !paramReadableMap.isNull("minDate"))
      bundle.putLong("minDate", (long)paramReadableMap.getDouble("minDate")); 
    if (paramReadableMap.hasKey("maxDate") && !paramReadableMap.isNull("maxDate"))
      bundle.putLong("maxDate", (long)paramReadableMap.getDouble("maxDate")); 
    if (paramReadableMap.hasKey("mode") && !paramReadableMap.isNull("mode"))
      bundle.putString("mode", paramReadableMap.getString("mode")); 
    return bundle;
  }
  
  public String getName() { return "DatePickerAndroid"; }
  
  @ReactMethod
  public void open(ReadableMap paramReadableMap, Promise paramPromise) {
    g g = (g)getCurrentActivity();
    if (g == null) {
      paramPromise.reject("E_NO_ACTIVITY", "Tried to open a DatePicker dialog while not attached to an Activity");
      return;
    } 
    k k = g.f();
    e e = (e)k.a("DatePickerAndroid");
    if (e != null)
      e.c(); 
    a a1 = new a();
    if (paramReadableMap != null)
      a1.g(createFragmentArguments(paramReadableMap)); 
    a a = new a(this, paramPromise);
    a1.a(a);
    a1.a(a);
    a1.a(k, "DatePickerAndroid");
  }
}
