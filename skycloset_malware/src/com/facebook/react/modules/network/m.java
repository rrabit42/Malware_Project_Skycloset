package com.facebook.react.modules.network;

import android.content.Context;
import android.net.Uri;
import b.f;
import com.facebook.common.e.a;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.nio.channels.Channels;
import java.nio.channels.ReadableByteChannel;
import java.util.zip.GZIPOutputStream;
import okhttp3.MediaType;
import okhttp3.RequestBody;

class m {
  public static i a(RequestBody paramRequestBody, h paramh) { return new i(paramRequestBody, paramh); }
  
  private static InputStream a(Context paramContext, Uri paramUri) {
    file = File.createTempFile("RequestBodyUtil", "temp", paramContext.getApplicationContext().getCacheDir());
    file.deleteOnExit();
    inputStream = (new URL(paramUri.toString())).openStream();
    try {
      readableByteChannel = Channels.newChannel(inputStream);
    } finally {
      inputStream.close();
    } 
  }
  
  public static InputStream a(Context paramContext, String paramString) {
    try {
      Uri uri = Uri.parse(paramString);
      return uri.getScheme().startsWith("http") ? a(paramContext, uri) : paramContext.getContentResolver().openInputStream(uri);
    } catch (Exception paramContext) {
      StringBuilder stringBuilder = new StringBuilder();
      stringBuilder.append("Could not retrieve file for contentUri ");
      stringBuilder.append(paramString);
      a.c("ReactNative", stringBuilder.toString(), paramContext);
      return null;
    } 
  }
  
  public static RequestBody a(MediaType paramMediaType, InputStream paramInputStream) { return new Object(paramMediaType, paramInputStream); }
  
  public static RequestBody a(MediaType paramMediaType, String paramString) {
    ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
    try {
      GZIPOutputStream gZIPOutputStream = new GZIPOutputStream(byteArrayOutputStream);
      gZIPOutputStream.write(paramString.getBytes());
      gZIPOutputStream.close();
      return RequestBody.create(paramMediaType, byteArrayOutputStream.toByteArray());
    } catch (IOException paramMediaType) {
      return null;
    } 
  }
  
  public static boolean a(String paramString) { return "gzip".equalsIgnoreCase(paramString); }
  
  public static RequestBody b(String paramString) { return (paramString.equals("POST") || paramString.equals("PUT") || paramString.equals("PATCH")) ? RequestBody.create(null, f.b) : null; }
}
