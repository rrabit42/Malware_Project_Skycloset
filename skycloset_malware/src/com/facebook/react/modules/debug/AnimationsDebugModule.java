package com.facebook.react.modules.debug;

import android.widget.Toast;
import com.facebook.common.e.a;
import com.facebook.react.bridge.JSApplicationCausedNativeException;
import com.facebook.react.bridge.ReactApplicationContext;
import com.facebook.react.bridge.ReactContextBaseJavaModule;
import com.facebook.react.bridge.ReactMethod;
import com.facebook.react.module.a.a;
import com.facebook.react.modules.debug.a.a;
import java.util.Locale;

@a(a = "AnimationsDebugModule")
public class AnimationsDebugModule extends ReactContextBaseJavaModule {
  protected static final String NAME = "AnimationsDebugModule";
  
  private final a mCatalystSettings;
  
  private b mFrameCallback;
  
  public AnimationsDebugModule(ReactApplicationContext paramReactApplicationContext, a parama) {
    super(paramReactApplicationContext);
    this.mCatalystSettings = parama;
  }
  
  public String getName() { return "AnimationsDebugModule"; }
  
  public void onCatalystInstanceDestroy() {
    b b1 = this.mFrameCallback;
    if (b1 != null) {
      b1.d();
      this.mFrameCallback = null;
    } 
  }
  
  @ReactMethod
  public void startRecordingFps() {
    a a1 = this.mCatalystSettings;
    if (a1 != null) {
      if (!a1.a())
        return; 
      if (this.mFrameCallback == null) {
        this.mFrameCallback = new b(getReactApplicationContext());
        this.mFrameCallback.c();
        return;
      } 
      throw new JSApplicationCausedNativeException("Already recording FPS!");
    } 
  }
  
  @ReactMethod
  public void stopRecordingFps(double paramDouble) {
    b b1 = this.mFrameCallback;
    if (b1 == null)
      return; 
    b1.d();
    b.a a1 = this.mFrameCallback.a((long)paramDouble);
    if (a1 == null) {
      Toast.makeText(getReactApplicationContext(), "Unable to get FPS info", 1);
    } else {
      String str2;
      String str3 = (str2 = String.format(Locale.US, "FPS: %.2f, %d frames (%d expected)", new Object[] { Double.valueOf(a1.e), Integer.valueOf(a1.a), Integer.valueOf(a1.c) })).format(Locale.US, "JS FPS: %.2f, %d frames (%d expected)", new Object[] { Double.valueOf(a1.f), Integer.valueOf(a1.b), Integer.valueOf(a1.c) });
      StringBuilder stringBuilder = new StringBuilder();
      stringBuilder.append(str2);
      stringBuilder.append("\n");
      stringBuilder.append(str3);
      stringBuilder.append("\nTotal Time MS: ");
      stringBuilder.append(String.format(Locale.US, "%d", new Object[] { Integer.valueOf(a1.g) }));
      String str1 = stringBuilder.toString();
      a.a("ReactNative", str1);
      Toast.makeText(getReactApplicationContext(), str1, 1).show();
    } 
    this.mFrameCallback = null;
  }
}
