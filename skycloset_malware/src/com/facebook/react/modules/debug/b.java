package com.facebook.react.modules.debug;

import com.facebook.i.a.a;
import com.facebook.react.bridge.ReactContext;
import com.facebook.react.bridge.UiThreadUtil;
import com.facebook.react.modules.core.a;
import com.facebook.react.uimanager.UIManagerModule;
import java.util.Map;
import java.util.TreeMap;

public class b extends a.a {
  private a a;
  
  private final ReactContext b;
  
  private final UIManagerModule c;
  
  private final a d;
  
  private boolean e = false;
  
  private long f = -1L;
  
  private long g = -1L;
  
  private int h = 0;
  
  private int i = 0;
  
  private int j = 0;
  
  private int k = 0;
  
  private boolean l = false;
  
  private TreeMap<Long, a> m;
  
  public b(ReactContext paramReactContext) {
    this.b = paramReactContext;
    this.c = (UIManagerModule)paramReactContext.getNativeModule(UIManagerModule.class);
    this.d = new a();
  }
  
  public a a(long paramLong) {
    a.a(this.m, "FPS was not recorded at each frame!");
    Map.Entry entry = this.m.floorEntry(Long.valueOf(paramLong));
    return (entry == null) ? null : (a)entry.getValue();
  }
  
  public void b() {
    this.e = false;
    this.b.getCatalystInstance().addBridgeIdleDebugListener(this.d);
    this.c.setViewHierarchyUpdateDebugListener(this.d);
    UiThreadUtil.runOnUiThread(new Object(this, this));
  }
  
  public void b(long paramLong) {
    if (this.e)
      return; 
    if (this.f == -1L)
      this.f = paramLong; 
    long l1 = this.g;
    this.g = paramLong;
    if (this.d.a(l1, paramLong))
      this.k++; 
    this.h++;
    int n = i();
    if (n - this.i - 1 >= 4)
      this.j++; 
    if (this.l) {
      a.a(this.m);
      a a2 = new a(g(), h(), n, this.j, e(), f(), j());
      this.m.put(Long.valueOf(System.currentTimeMillis()), a2);
    } 
    this.i = n;
    a a1 = this.a;
    if (a1 != null)
      a1.a(this); 
  }
  
  public void c() {
    this.m = new TreeMap();
    this.l = true;
    b();
  }
  
  public void d() {
    this.e = true;
    this.b.getCatalystInstance().removeBridgeIdleDebugListener(this.d);
    this.c.setViewHierarchyUpdateDebugListener(null);
  }
  
  public double e() { return (this.g == this.f) ? 0.0D : (g() * 1.0E9D / (this.g - this.f)); }
  
  public double f() { return (this.g == this.f) ? 0.0D : (h() * 1.0E9D / (this.g - this.f)); }
  
  public int g() { return this.h - 1; }
  
  public int h() { return this.k - 1; }
  
  public int i() { return (int)(j() / 16.9D + 1.0D); }
  
  public int j() { return (int)(this.g - this.f) / 1000000; }
}
