package com.facebook.react.modules.systeminfo;

import android.annotation.SuppressLint;
import android.app.UiModeManager;
import android.os.Build;
import android.provider.Settings;
import com.facebook.react.bridge.ReactApplicationContext;
import com.facebook.react.bridge.ReactContextBaseJavaModule;
import com.facebook.react.bridge.ReactMethod;
import com.facebook.react.module.a.a;
import java.util.HashMap;
import java.util.Map;

@a(a = "PlatformConstants")
@SuppressLint({"HardwareIds"})
public class AndroidInfoModule extends ReactContextBaseJavaModule {
  private static final String IS_TESTING = "IS_TESTING";
  
  public static final String NAME = "PlatformConstants";
  
  public AndroidInfoModule(ReactApplicationContext paramReactApplicationContext) { super(paramReactApplicationContext); }
  
  private String uiMode() {
    int i = ((UiModeManager)getReactApplicationContext().getSystemService("uimode")).getCurrentModeType();
    if (i != 6) {
      switch (i) {
        default:
          return "unknown";
        case 4:
          return "tv";
        case 3:
          return "car";
        case 2:
          return "desk";
        case 1:
          break;
      } 
      return "normal";
    } 
    return "watch";
  }
  
  @ReactMethod(isBlockingSynchronousMethod = true)
  public String getAndroidID() { return Settings.Secure.getString(getReactApplicationContext().getContentResolver(), "android_id"); }
  
  public Map<String, Object> getConstants() {
    HashMap hashMap = new HashMap();
    hashMap.put("Version", Integer.valueOf(Build.VERSION.SDK_INT));
    hashMap.put("Release", Build.VERSION.RELEASE);
    hashMap.put("Serial", Build.SERIAL);
    hashMap.put("Fingerprint", Build.FINGERPRINT);
    hashMap.put("Model", Build.MODEL);
    hashMap.put("isTesting", Boolean.valueOf("true".equals(System.getProperty("IS_TESTING"))));
    hashMap.put("reactNativeVersion", b.a);
    hashMap.put("uiMode", uiMode());
    return hashMap;
  }
  
  public String getName() { return "PlatformConstants"; }
}
