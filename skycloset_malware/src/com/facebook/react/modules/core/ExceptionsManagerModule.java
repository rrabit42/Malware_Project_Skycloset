package com.facebook.react.modules.core;

import com.facebook.common.e.a;
import com.facebook.react.bridge.BaseJavaModule;
import com.facebook.react.bridge.ReactMethod;
import com.facebook.react.bridge.ReadableArray;
import com.facebook.react.common.c;
import com.facebook.react.devsupport.a.b;
import com.facebook.react.g.a;
import com.facebook.react.module.a.a;

@a(a = "ExceptionsManager")
public class ExceptionsManagerModule extends BaseJavaModule {
  public static final String NAME = "ExceptionsManager";
  
  private final b mDevSupportManager;
  
  public ExceptionsManagerModule(b paramb) { this.mDevSupportManager = paramb; }
  
  private void showOrThrowError(String paramString, ReadableArray paramReadableArray, int paramInt) {
    if (this.mDevSupportManager.d()) {
      this.mDevSupportManager.a(paramString, paramReadableArray, paramInt);
      return;
    } 
    throw new c(a.a(paramString, paramReadableArray));
  }
  
  @ReactMethod
  public void dismissRedbox() {
    if (this.mDevSupportManager.d())
      this.mDevSupportManager.a(); 
  }
  
  public String getName() { return "ExceptionsManager"; }
  
  @ReactMethod
  public void reportFatalException(String paramString, ReadableArray paramReadableArray, int paramInt) { showOrThrowError(paramString, paramReadableArray, paramInt); }
  
  @ReactMethod
  public void reportSoftException(String paramString, ReadableArray paramReadableArray, int paramInt) {
    if (this.mDevSupportManager.d()) {
      this.mDevSupportManager.a(paramString, paramReadableArray, paramInt);
      return;
    } 
    a.d("ReactNative", a.a(paramString, paramReadableArray));
  }
  
  @ReactMethod
  public void updateExceptionMessage(String paramString, ReadableArray paramReadableArray, int paramInt) {
    if (this.mDevSupportManager.d())
      this.mDevSupportManager.b(paramString, paramReadableArray, paramInt); 
  }
}
