package com.facebook.react.modules.fresco;

import com.facebook.common.e.a;
import com.facebook.f.a.a.c;
import com.facebook.imagepipeline.b.a.a;
import com.facebook.imagepipeline.f.h;
import com.facebook.react.bridge.LifecycleEventListener;
import com.facebook.react.bridge.ReactApplicationContext;
import com.facebook.react.bridge.ReactContext;
import com.facebook.react.bridge.ReactContextBaseJavaModule;
import com.facebook.react.module.a.a;
import com.facebook.react.modules.network.a;
import com.facebook.react.modules.network.c;
import com.facebook.react.modules.network.g;
import java.util.HashSet;
import okhttp3.JavaNetCookieJar;
import okhttp3.OkHttpClient;

@a(a = "FrescoModule", c = true)
public class FrescoModule extends ReactContextBaseJavaModule implements LifecycleEventListener {
  public static final String NAME = "FrescoModule";
  
  private static boolean sHasBeenInitialized;
  
  private final boolean mClearOnDestroy;
  
  private h mConfig;
  
  static  {
  
  }
  
  public FrescoModule(ReactApplicationContext paramReactApplicationContext) { this(paramReactApplicationContext, true, null); }
  
  public FrescoModule(ReactApplicationContext paramReactApplicationContext, boolean paramBoolean) { this(paramReactApplicationContext, paramBoolean, null); }
  
  public FrescoModule(ReactApplicationContext paramReactApplicationContext, boolean paramBoolean, h paramh) {
    super(paramReactApplicationContext);
    this.mClearOnDestroy = paramBoolean;
    this.mConfig = paramh;
  }
  
  private static h getDefaultConfig(ReactContext paramReactContext) { return getDefaultConfigBuilder(paramReactContext).a(); }
  
  public static h.a getDefaultConfigBuilder(ReactContext paramReactContext) {
    HashSet hashSet = new HashSet();
    hashSet.add(new c());
    OkHttpClient okHttpClient = g.a();
    ((a)okHttpClient.cookieJar()).a(new JavaNetCookieJar(new c(paramReactContext)));
    return a.a(paramReactContext.getApplicationContext(), okHttpClient).a(new b(okHttpClient)).a(false).a(hashSet);
  }
  
  public static boolean hasBeenInitialized() { return sHasBeenInitialized; }
  
  public void clearSensitiveData() { c.c().c(); }
  
  public String getName() { return "FrescoModule"; }
  
  public void initialize() {
    super.initialize();
    getReactApplicationContext().addLifecycleEventListener(this);
    if (!hasBeenInitialized()) {
      if (this.mConfig == null)
        this.mConfig = getDefaultConfig(getReactApplicationContext()); 
      c.a(getReactApplicationContext().getApplicationContext(), this.mConfig);
      sHasBeenInitialized = true;
    } else if (this.mConfig != null) {
      a.c("ReactNative", "Fresco has already been initialized with a different config. The new Fresco configuration will be ignored!");
    } 
    this.mConfig = null;
  }
  
  public void onHostDestroy() {
    if (hasBeenInitialized() && this.mClearOnDestroy)
      c.c().a(); 
  }
  
  public void onHostPause() {}
  
  public void onHostResume() {}
}
