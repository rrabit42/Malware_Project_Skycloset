package com.facebook.soloader;

import android.content.Context;
import android.os.StrictMode;
import android.util.Log;
import java.io.File;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.HashMap;
import java.util.Map;

public abstract class m extends c {
  private String[] c;
  
  private final Map<String, Object> d = new HashMap();
  
  protected final Context e;
  
  protected String f;
  
  protected m(Context paramContext, String paramString) {
    super(a(paramContext, paramString), 1);
    this.e = paramContext;
  }
  
  public static File a(Context paramContext, String paramString) {
    StringBuilder stringBuilder = new StringBuilder();
    stringBuilder.append((paramContext.getApplicationInfo()).dataDir);
    stringBuilder.append("/");
    stringBuilder.append(paramString);
    return new File(stringBuilder.toString());
  }
  
  private void a(byte paramByte, b paramb, d paramd) { // Byte code:
    //   0: new java/lang/StringBuilder
    //   3: dup
    //   4: invokespecial <init> : ()V
    //   7: astore #6
    //   9: aload #6
    //   11: ldc 'regenerating DSO store '
    //   13: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   16: pop
    //   17: aload #6
    //   19: aload_0
    //   20: invokevirtual getClass : ()Ljava/lang/Class;
    //   23: invokevirtual getName : ()Ljava/lang/String;
    //   26: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   29: pop
    //   30: ldc 'fb-UnpackingSoSource'
    //   32: aload #6
    //   34: invokevirtual toString : ()Ljava/lang/String;
    //   37: invokestatic v : (Ljava/lang/String;Ljava/lang/String;)I
    //   40: pop
    //   41: new java/io/RandomAccessFile
    //   44: dup
    //   45: new java/io/File
    //   48: dup
    //   49: aload_0
    //   50: getfield a : Ljava/io/File;
    //   53: ldc 'dso_manifest'
    //   55: invokespecial <init> : (Ljava/io/File;Ljava/lang/String;)V
    //   58: ldc 'rw'
    //   60: invokespecial <init> : (Ljava/io/File;Ljava/lang/String;)V
    //   63: astore #9
    //   65: aconst_null
    //   66: astore #8
    //   68: iload_1
    //   69: iconst_1
    //   70: if_icmpne -> 432
    //   73: aload #8
    //   75: astore #6
    //   77: aload #9
    //   79: invokestatic a : (Ljava/io/DataInput;)Lcom/facebook/soloader/m$b;
    //   82: astore #7
    //   84: aload #7
    //   86: astore #6
    //   88: goto -> 118
    //   91: astore_2
    //   92: goto -> 402
    //   95: astore_2
    //   96: goto -> 397
    //   99: astore #7
    //   101: aload #8
    //   103: astore #6
    //   105: ldc 'fb-UnpackingSoSource'
    //   107: ldc 'error reading existing DSO manifest'
    //   109: aload #7
    //   111: invokestatic i : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    //   114: pop
    //   115: goto -> 432
    //   118: aload #6
    //   120: astore #7
    //   122: aload #6
    //   124: ifnonnull -> 144
    //   127: aload #8
    //   129: astore #6
    //   131: new com/facebook/soloader/m$b
    //   134: dup
    //   135: iconst_0
    //   136: anewarray com/facebook/soloader/m$a
    //   139: invokespecial <init> : ([Lcom/facebook/soloader/m$a;)V
    //   142: astore #7
    //   144: aload #8
    //   146: astore #6
    //   148: aload_0
    //   149: aload_2
    //   150: getfield a : [Lcom/facebook/soloader/m$a;
    //   153: invokespecial a : ([Lcom/facebook/soloader/m$a;)V
    //   156: aload #8
    //   158: astore #6
    //   160: ldc 32768
    //   162: newarray byte
    //   164: astore_2
    //   165: aload #8
    //   167: astore #6
    //   169: aload_3
    //   170: invokevirtual a : ()Z
    //   173: ifeq -> 354
    //   176: aload #8
    //   178: astore #6
    //   180: aload_3
    //   181: invokevirtual b : ()Lcom/facebook/soloader/m$c;
    //   184: astore #10
    //   186: iconst_1
    //   187: istore #4
    //   189: iconst_0
    //   190: istore_1
    //   191: iload #4
    //   193: ifeq -> 268
    //   196: iload_1
    //   197: aload #7
    //   199: getfield a : [Lcom/facebook/soloader/m$a;
    //   202: arraylength
    //   203: if_icmpge -> 268
    //   206: iload #4
    //   208: istore #5
    //   210: aload #7
    //   212: getfield a : [Lcom/facebook/soloader/m$a;
    //   215: iload_1
    //   216: aaload
    //   217: getfield c : Ljava/lang/String;
    //   220: aload #10
    //   222: getfield a : Lcom/facebook/soloader/m$a;
    //   225: getfield c : Ljava/lang/String;
    //   228: invokevirtual equals : (Ljava/lang/Object;)Z
    //   231: ifeq -> 438
    //   234: iload #4
    //   236: istore #5
    //   238: aload #7
    //   240: getfield a : [Lcom/facebook/soloader/m$a;
    //   243: iload_1
    //   244: aaload
    //   245: getfield d : Ljava/lang/String;
    //   248: aload #10
    //   250: getfield a : Lcom/facebook/soloader/m$a;
    //   253: getfield d : Ljava/lang/String;
    //   256: invokevirtual equals : (Ljava/lang/Object;)Z
    //   259: ifeq -> 438
    //   262: iconst_0
    //   263: istore #5
    //   265: goto -> 438
    //   268: iload #4
    //   270: ifeq -> 337
    //   273: aload_0
    //   274: aload #10
    //   276: aload_2
    //   277: invokespecial a : (Lcom/facebook/soloader/m$c;[B)V
    //   280: goto -> 337
    //   283: aload_3
    //   284: athrow
    //   285: astore_2
    //   286: aload #10
    //   288: ifnull -> 331
    //   291: aload_3
    //   292: ifnull -> 322
    //   295: aload #8
    //   297: astore #6
    //   299: aload #10
    //   301: invokevirtual close : ()V
    //   304: goto -> 331
    //   307: astore #7
    //   309: aload #8
    //   311: astore #6
    //   313: aload_3
    //   314: aload #7
    //   316: invokevirtual addSuppressed : (Ljava/lang/Throwable;)V
    //   319: goto -> 331
    //   322: aload #8
    //   324: astore #6
    //   326: aload #10
    //   328: invokevirtual close : ()V
    //   331: aload #8
    //   333: astore #6
    //   335: aload_2
    //   336: athrow
    //   337: aload #10
    //   339: ifnull -> 165
    //   342: aload #8
    //   344: astore #6
    //   346: aload #10
    //   348: invokevirtual close : ()V
    //   351: goto -> 165
    //   354: aload #9
    //   356: invokevirtual close : ()V
    //   359: new java/lang/StringBuilder
    //   362: dup
    //   363: invokespecial <init> : ()V
    //   366: astore_2
    //   367: aload_2
    //   368: ldc 'Finished regenerating DSO store '
    //   370: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   373: pop
    //   374: aload_2
    //   375: aload_0
    //   376: invokevirtual getClass : ()Ljava/lang/Class;
    //   379: invokevirtual getName : ()Ljava/lang/String;
    //   382: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   385: pop
    //   386: ldc 'fb-UnpackingSoSource'
    //   388: aload_2
    //   389: invokevirtual toString : ()Ljava/lang/String;
    //   392: invokestatic v : (Ljava/lang/String;Ljava/lang/String;)I
    //   395: pop
    //   396: return
    //   397: aload_2
    //   398: astore #6
    //   400: aload_2
    //   401: athrow
    //   402: aload #6
    //   404: ifnull -> 425
    //   407: aload #9
    //   409: invokevirtual close : ()V
    //   412: goto -> 430
    //   415: astore_3
    //   416: aload #6
    //   418: aload_3
    //   419: invokevirtual addSuppressed : (Ljava/lang/Throwable;)V
    //   422: goto -> 430
    //   425: aload #9
    //   427: invokevirtual close : ()V
    //   430: aload_2
    //   431: athrow
    //   432: aconst_null
    //   433: astore #6
    //   435: goto -> 118
    //   438: iload_1
    //   439: iconst_1
    //   440: iadd
    //   441: istore_1
    //   442: iload #5
    //   444: istore #4
    //   446: goto -> 191
    //   449: astore_2
    //   450: aconst_null
    //   451: astore_3
    //   452: goto -> 286
    //   455: astore_3
    //   456: goto -> 283
    // Exception table:
    //   from	to	target	type
    //   77	84	99	java/lang/Exception
    //   77	84	95	java/lang/Throwable
    //   77	84	91	finally
    //   105	115	95	java/lang/Throwable
    //   105	115	91	finally
    //   131	144	95	java/lang/Throwable
    //   131	144	91	finally
    //   148	156	95	java/lang/Throwable
    //   148	156	91	finally
    //   160	165	95	java/lang/Throwable
    //   160	165	91	finally
    //   169	176	95	java/lang/Throwable
    //   169	176	91	finally
    //   180	186	95	java/lang/Throwable
    //   180	186	91	finally
    //   196	206	455	java/lang/Throwable
    //   196	206	449	finally
    //   210	234	455	java/lang/Throwable
    //   210	234	449	finally
    //   238	262	455	java/lang/Throwable
    //   238	262	449	finally
    //   273	280	455	java/lang/Throwable
    //   273	280	449	finally
    //   283	285	285	finally
    //   299	304	307	java/lang/Throwable
    //   299	304	91	finally
    //   313	319	95	java/lang/Throwable
    //   313	319	91	finally
    //   326	331	95	java/lang/Throwable
    //   326	331	91	finally
    //   335	337	95	java/lang/Throwable
    //   335	337	91	finally
    //   346	351	95	java/lang/Throwable
    //   346	351	91	finally
    //   400	402	91	finally
    //   407	412	415	java/lang/Throwable }
  
  private void a(c paramc, byte[] paramArrayOfByte) {
    stringBuilder2 = new StringBuilder();
    stringBuilder2.append("extracting DSO ");
    stringBuilder2.append(paramc.a.c);
    Log.i("fb-UnpackingSoSource", stringBuilder2.toString());
    if (this.a.setWritable(true, true)) {
      RandomAccessFile randomAccessFile;
      File file = new File(this.a, paramc.a.c);
      try {
        randomAccessFile = new RandomAccessFile(file, "rw");
      } catch (IOException stringBuilder2) {
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("error overwriting ");
        stringBuilder.append(file);
        stringBuilder.append(" trying to delete and start over");
        Log.w("fb-UnpackingSoSource", stringBuilder.toString(), stringBuilder2);
        SysUtil.a(file);
        randomAccessFile = new RandomAccessFile(file, "rw");
      } 
      try {
        int i = paramc.b.available();
        if (i > 1)
          SysUtil.a(randomAccessFile.getFD(), i); 
        SysUtil.a(randomAccessFile, paramc.b, 2147483647, paramArrayOfByte);
        randomAccessFile.setLength(randomAccessFile.getFilePointer());
        boolean bool = file.setExecutable(true, false);
        if (bool) {
          randomAccessFile.close();
          return;
        } 
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("cannot make file executable: ");
        stringBuilder.append(file);
        throw new IOException(stringBuilder.toString());
      } catch (IOException paramc) {
        SysUtil.a(file);
        throw paramc;
      } finally {}
      randomAccessFile.close();
      throw paramc;
    } 
    StringBuilder stringBuilder1 = new StringBuilder();
    stringBuilder1.append("cannot make directory writable for us: ");
    stringBuilder1.append(this.a);
    throw new IOException(stringBuilder1.toString());
  }
  
  private void a(a[] paramArrayOfa) {
    String[] arrayOfString = this.a.list();
    if (arrayOfString != null) {
      for (byte b = 0; b < arrayOfString.length; b++) {
        String str = arrayOfString[b];
        if (!str.equals("dso_state") && !str.equals("dso_lock") && !str.equals("dso_deps") && !str.equals("dso_manifest")) {
          boolean bool = false;
          for (byte b1 = bool; !bool && b1 < paramArrayOfa.length; b1++) {
            if ((paramArrayOfa[b1]).c.equals(str))
              bool = true; 
          } 
          if (!bool) {
            File file = new File(this.a, str);
            StringBuilder stringBuilder1 = new StringBuilder();
            stringBuilder1.append("deleting unaccounted-for file ");
            stringBuilder1.append(file);
            Log.v("fb-UnpackingSoSource", stringBuilder1.toString());
            SysUtil.a(file);
          } 
        } 
      } 
      return;
    } 
    StringBuilder stringBuilder = new StringBuilder();
    stringBuilder.append("unable to list directory ");
    stringBuilder.append(this.a);
    throw new IOException(stringBuilder.toString());
  }
  
  private boolean a(g paramg, int paramInt, byte[] paramArrayOfByte) { // Byte code:
    //   0: new java/io/File
    //   3: dup
    //   4: aload_0
    //   5: getfield a : Ljava/io/File;
    //   8: ldc 'dso_state'
    //   10: invokespecial <init> : (Ljava/io/File;Ljava/lang/String;)V
    //   13: astore #11
    //   15: new java/io/RandomAccessFile
    //   18: dup
    //   19: aload #11
    //   21: ldc 'rw'
    //   23: invokespecial <init> : (Ljava/io/File;Ljava/lang/String;)V
    //   26: astore #9
    //   28: aconst_null
    //   29: astore #7
    //   31: aconst_null
    //   32: astore #8
    //   34: aload #8
    //   36: astore #6
    //   38: aload #9
    //   40: invokevirtual readByte : ()B
    //   43: istore #5
    //   45: iload #5
    //   47: istore #4
    //   49: iload #5
    //   51: iconst_1
    //   52: if_icmpeq -> 167
    //   55: aload #8
    //   57: astore #6
    //   59: new java/lang/StringBuilder
    //   62: dup
    //   63: invokespecial <init> : ()V
    //   66: astore #10
    //   68: aload #8
    //   70: astore #6
    //   72: aload #10
    //   74: ldc 'dso store '
    //   76: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   79: pop
    //   80: aload #8
    //   82: astore #6
    //   84: aload #10
    //   86: aload_0
    //   87: getfield a : Ljava/io/File;
    //   90: invokevirtual append : (Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   93: pop
    //   94: aload #8
    //   96: astore #6
    //   98: aload #10
    //   100: ldc ' regeneration interrupted: wiping clean'
    //   102: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   105: pop
    //   106: aload #8
    //   108: astore #6
    //   110: ldc 'fb-UnpackingSoSource'
    //   112: aload #10
    //   114: invokevirtual toString : ()Ljava/lang/String;
    //   117: invokestatic v : (Ljava/lang/String;Ljava/lang/String;)I
    //   120: pop
    //   121: iconst_0
    //   122: istore #4
    //   124: goto -> 167
    //   127: astore_1
    //   128: goto -> 137
    //   131: astore_1
    //   132: aload_1
    //   133: astore #6
    //   135: aload_1
    //   136: athrow
    //   137: aload #6
    //   139: ifnull -> 160
    //   142: aload #9
    //   144: invokevirtual close : ()V
    //   147: goto -> 165
    //   150: astore_3
    //   151: aload #6
    //   153: aload_3
    //   154: invokevirtual addSuppressed : (Ljava/lang/Throwable;)V
    //   157: goto -> 165
    //   160: aload #9
    //   162: invokevirtual close : ()V
    //   165: aload_1
    //   166: athrow
    //   167: aload #9
    //   169: invokevirtual close : ()V
    //   172: new java/io/File
    //   175: dup
    //   176: aload_0
    //   177: getfield a : Ljava/io/File;
    //   180: ldc 'dso_deps'
    //   182: invokespecial <init> : (Ljava/io/File;Ljava/lang/String;)V
    //   185: astore #12
    //   187: new java/io/RandomAccessFile
    //   190: dup
    //   191: aload #12
    //   193: ldc 'rw'
    //   195: invokespecial <init> : (Ljava/io/File;Ljava/lang/String;)V
    //   198: astore #9
    //   200: aload #7
    //   202: astore #6
    //   204: aload #9
    //   206: invokevirtual length : ()J
    //   209: l2i
    //   210: newarray byte
    //   212: astore #8
    //   214: aload #7
    //   216: astore #6
    //   218: aload #9
    //   220: aload #8
    //   222: invokevirtual read : ([B)I
    //   225: aload #8
    //   227: arraylength
    //   228: if_icmpeq -> 247
    //   231: aload #7
    //   233: astore #6
    //   235: ldc 'fb-UnpackingSoSource'
    //   237: ldc_w 'short read of so store deps file: marking unclean'
    //   240: invokestatic v : (Ljava/lang/String;Ljava/lang/String;)I
    //   243: pop
    //   244: iconst_0
    //   245: istore #4
    //   247: aload #7
    //   249: astore #6
    //   251: aload #8
    //   253: aload_3
    //   254: invokestatic equals : ([B[B)Z
    //   257: ifne -> 607
    //   260: aload #7
    //   262: astore #6
    //   264: ldc 'fb-UnpackingSoSource'
    //   266: ldc_w 'deps mismatch on deps store: regenerating'
    //   269: invokestatic v : (Ljava/lang/String;Ljava/lang/String;)I
    //   272: pop
    //   273: iconst_0
    //   274: istore #4
    //   276: goto -> 607
    //   279: aload #7
    //   281: astore #6
    //   283: ldc 'fb-UnpackingSoSource'
    //   285: ldc_w 'so store dirty: regenerating'
    //   288: invokestatic v : (Ljava/lang/String;Ljava/lang/String;)I
    //   291: pop
    //   292: aload #7
    //   294: astore #6
    //   296: aload #11
    //   298: iconst_0
    //   299: invokestatic b : (Ljava/io/File;B)V
    //   302: aload #7
    //   304: astore #6
    //   306: aload_0
    //   307: invokevirtual a : ()Lcom/facebook/soloader/m$e;
    //   310: astore #10
    //   312: aload #10
    //   314: invokevirtual a : ()Lcom/facebook/soloader/m$b;
    //   317: astore #8
    //   319: aload #10
    //   321: invokevirtual b : ()Lcom/facebook/soloader/m$d;
    //   324: astore #6
    //   326: aload_0
    //   327: iload #4
    //   329: aload #8
    //   331: aload #6
    //   333: invokespecial a : (BLcom/facebook/soloader/m$b;Lcom/facebook/soloader/m$d;)V
    //   336: aload #6
    //   338: ifnull -> 346
    //   341: aload #6
    //   343: invokevirtual close : ()V
    //   346: aload #8
    //   348: astore #6
    //   350: aload #10
    //   352: ifnull -> 368
    //   355: aload #7
    //   357: astore #6
    //   359: aload #10
    //   361: invokevirtual close : ()V
    //   364: aload #8
    //   366: astore #6
    //   368: aload #9
    //   370: invokevirtual close : ()V
    //   373: aload #6
    //   375: ifnonnull -> 380
    //   378: iconst_0
    //   379: ireturn
    //   380: new com/facebook/soloader/m$1
    //   383: dup
    //   384: aload_0
    //   385: aload #12
    //   387: aload_3
    //   388: aload #6
    //   390: aload #11
    //   392: aload_1
    //   393: invokespecial <init> : (Lcom/facebook/soloader/m;Ljava/io/File;[BLcom/facebook/soloader/m$b;Ljava/io/File;Lcom/facebook/soloader/g;)V
    //   396: astore_1
    //   397: iload_2
    //   398: iconst_1
    //   399: iand
    //   400: ifeq -> 448
    //   403: new java/lang/StringBuilder
    //   406: dup
    //   407: invokespecial <init> : ()V
    //   410: astore_3
    //   411: aload_3
    //   412: ldc_w 'SoSync:'
    //   415: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   418: pop
    //   419: aload_3
    //   420: aload_0
    //   421: getfield a : Ljava/io/File;
    //   424: invokevirtual getName : ()Ljava/lang/String;
    //   427: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   430: pop
    //   431: new java/lang/Thread
    //   434: dup
    //   435: aload_1
    //   436: aload_3
    //   437: invokevirtual toString : ()Ljava/lang/String;
    //   440: invokespecial <init> : (Ljava/lang/Runnable;Ljava/lang/String;)V
    //   443: invokevirtual start : ()V
    //   446: iconst_1
    //   447: ireturn
    //   448: aload_1
    //   449: invokeinterface run : ()V
    //   454: iconst_1
    //   455: ireturn
    //   456: astore_1
    //   457: aconst_null
    //   458: astore_3
    //   459: goto -> 466
    //   462: astore_3
    //   463: aload_3
    //   464: athrow
    //   465: astore_1
    //   466: aload #6
    //   468: ifnull -> 499
    //   471: aload_3
    //   472: ifnull -> 494
    //   475: aload #6
    //   477: invokevirtual close : ()V
    //   480: goto -> 499
    //   483: astore #6
    //   485: aload_3
    //   486: aload #6
    //   488: invokevirtual addSuppressed : (Ljava/lang/Throwable;)V
    //   491: goto -> 499
    //   494: aload #6
    //   496: invokevirtual close : ()V
    //   499: aload_1
    //   500: athrow
    //   501: astore_1
    //   502: aconst_null
    //   503: astore_3
    //   504: goto -> 511
    //   507: astore_3
    //   508: aload_3
    //   509: athrow
    //   510: astore_1
    //   511: aload #10
    //   513: ifnull -> 556
    //   516: aload_3
    //   517: ifnull -> 547
    //   520: aload #7
    //   522: astore #6
    //   524: aload #10
    //   526: invokevirtual close : ()V
    //   529: goto -> 556
    //   532: astore #8
    //   534: aload #7
    //   536: astore #6
    //   538: aload_3
    //   539: aload #8
    //   541: invokevirtual addSuppressed : (Ljava/lang/Throwable;)V
    //   544: goto -> 556
    //   547: aload #7
    //   549: astore #6
    //   551: aload #10
    //   553: invokevirtual close : ()V
    //   556: aload #7
    //   558: astore #6
    //   560: aload_1
    //   561: athrow
    //   562: astore_1
    //   563: goto -> 572
    //   566: astore_1
    //   567: aload_1
    //   568: astore #6
    //   570: aload_1
    //   571: athrow
    //   572: aload #6
    //   574: ifnull -> 595
    //   577: aload #9
    //   579: invokevirtual close : ()V
    //   582: goto -> 600
    //   585: astore_3
    //   586: aload #6
    //   588: aload_3
    //   589: invokevirtual addSuppressed : (Ljava/lang/Throwable;)V
    //   592: goto -> 600
    //   595: aload #9
    //   597: invokevirtual close : ()V
    //   600: aload_1
    //   601: athrow
    //   602: astore #6
    //   604: goto -> 121
    //   607: iload #4
    //   609: ifeq -> 279
    //   612: iload_2
    //   613: iconst_2
    //   614: iand
    //   615: ifeq -> 621
    //   618: goto -> 279
    //   621: aconst_null
    //   622: astore #6
    //   624: goto -> 368
    // Exception table:
    //   from	to	target	type
    //   38	45	602	java/io/EOFException
    //   38	45	131	java/lang/Throwable
    //   38	45	127	finally
    //   59	68	602	java/io/EOFException
    //   59	68	131	java/lang/Throwable
    //   59	68	127	finally
    //   72	80	602	java/io/EOFException
    //   72	80	131	java/lang/Throwable
    //   72	80	127	finally
    //   84	94	602	java/io/EOFException
    //   84	94	131	java/lang/Throwable
    //   84	94	127	finally
    //   98	106	602	java/io/EOFException
    //   98	106	131	java/lang/Throwable
    //   98	106	127	finally
    //   110	121	602	java/io/EOFException
    //   110	121	131	java/lang/Throwable
    //   110	121	127	finally
    //   135	137	127	finally
    //   142	147	150	java/lang/Throwable
    //   204	214	566	java/lang/Throwable
    //   204	214	562	finally
    //   218	231	566	java/lang/Throwable
    //   218	231	562	finally
    //   235	244	566	java/lang/Throwable
    //   235	244	562	finally
    //   251	260	566	java/lang/Throwable
    //   251	260	562	finally
    //   264	273	566	java/lang/Throwable
    //   264	273	562	finally
    //   283	292	566	java/lang/Throwable
    //   283	292	562	finally
    //   296	302	566	java/lang/Throwable
    //   296	302	562	finally
    //   306	312	566	java/lang/Throwable
    //   306	312	562	finally
    //   312	326	507	java/lang/Throwable
    //   312	326	501	finally
    //   326	336	462	java/lang/Throwable
    //   326	336	456	finally
    //   341	346	507	java/lang/Throwable
    //   341	346	501	finally
    //   359	364	566	java/lang/Throwable
    //   359	364	562	finally
    //   463	465	465	finally
    //   475	480	483	java/lang/Throwable
    //   475	480	501	finally
    //   485	491	507	java/lang/Throwable
    //   485	491	501	finally
    //   494	499	507	java/lang/Throwable
    //   494	499	501	finally
    //   499	501	507	java/lang/Throwable
    //   499	501	501	finally
    //   508	510	510	finally
    //   524	529	532	java/lang/Throwable
    //   524	529	562	finally
    //   538	544	566	java/lang/Throwable
    //   538	544	562	finally
    //   551	556	566	java/lang/Throwable
    //   551	556	562	finally
    //   560	562	566	java/lang/Throwable
    //   560	562	562	finally
    //   570	572	562	finally
    //   577	582	585	java/lang/Throwable }
  
  private static void b(File paramFile, byte paramByte) {
    randomAccessFile = new RandomAccessFile(paramFile, "rw");
    file = null;
    paramFile = file;
    try {
      randomAccessFile.seek(0L);
      paramFile = file;
      randomAccessFile.write(paramByte);
      paramFile = file;
      randomAccessFile.setLength(randomAccessFile.getFilePointer());
      paramFile = file;
      randomAccessFile.getFD().sync();
      randomAccessFile.close();
      return;
    } catch (Throwable file) {
      paramFile = file;
      throw file;
    } finally {}
    if (paramFile != null) {
      try {
        randomAccessFile.close();
      } catch (Throwable randomAccessFile) {
        paramFile.addSuppressed(randomAccessFile);
      } 
    } else {
      randomAccessFile.close();
    } 
    throw file;
  }
  
  private Object c(String paramString) {
    synchronized (this.d) {
      Object object2 = this.d.get(paramString);
      Object object1 = object2;
      if (object2 == null) {
        object1 = new Object();
        this.d.put(paramString, object1);
      } 
      return object1;
    } 
  }
  
  public int a(String paramString, int paramInt, StrictMode.ThreadPolicy paramThreadPolicy) {
    synchronized (c(paramString)) {
      return a(paramString, paramInt, this.a, paramThreadPolicy);
    } 
  }
  
  protected abstract e a();
  
  protected void a(int paramInt) {
    SysUtil.b(this.a);
    stringBuilder = g.a(new File(this.a, "dso_lock"));
    try {
      StringBuilder stringBuilder1 = new StringBuilder();
      stringBuilder1.append("locked dso store ");
      stringBuilder1.append(this.a);
      Log.v("fb-UnpackingSoSource", stringBuilder1.toString());
      if (a(stringBuilder, paramInt, b())) {
        stringBuilder = null;
      } else {
        stringBuilder1 = new StringBuilder();
        stringBuilder1.append("dso store is up-to-date: ");
        stringBuilder1.append(this.a);
        Log.i("fb-UnpackingSoSource", stringBuilder1.toString());
      } 
      if (stringBuilder != null) {
        stringBuilder1 = new StringBuilder();
        stringBuilder1.append("releasing dso store lock for ");
        stringBuilder1.append(this.a);
        Log.v("fb-UnpackingSoSource", stringBuilder1.toString());
        return;
      } 
      stringBuilder = new StringBuilder();
      stringBuilder.append("not releasing dso store lock for ");
      stringBuilder.append(this.a);
      stringBuilder.append(" (syncer thread started)");
      return;
    } finally {
      if (stringBuilder != null) {
        StringBuilder stringBuilder1 = new StringBuilder();
        stringBuilder1.append("releasing dso store lock for ");
        stringBuilder1.append(this.a);
        Log.v("fb-UnpackingSoSource", stringBuilder1.toString());
        stringBuilder.close();
      } else {
        stringBuilder = new StringBuilder();
        stringBuilder.append("not releasing dso store lock for ");
        stringBuilder.append(this.a);
        stringBuilder.append(" (syncer thread started)");
        Log.v("fb-UnpackingSoSource", stringBuilder.toString());
      } 
    } 
  }
  
  public void a(String[] paramArrayOfString) { this.c = paramArrayOfString; }
  
  protected void b(String paramString) { // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: aload_1
    //   4: invokespecial c : (Ljava/lang/String;)Ljava/lang/Object;
    //   7: astore_2
    //   8: aload_2
    //   9: monitorenter
    //   10: aload_0
    //   11: aload_1
    //   12: putfield f : Ljava/lang/String;
    //   15: aload_0
    //   16: iconst_2
    //   17: invokevirtual a : (I)V
    //   20: aload_2
    //   21: monitorexit
    //   22: aload_0
    //   23: monitorexit
    //   24: return
    //   25: astore_1
    //   26: aload_2
    //   27: monitorexit
    //   28: aload_1
    //   29: athrow
    //   30: astore_1
    //   31: aload_0
    //   32: monitorexit
    //   33: aload_1
    //   34: athrow
    // Exception table:
    //   from	to	target	type
    //   2	10	30	finally
    //   10	22	25	finally
    //   26	28	25	finally
    //   28	30	30	finally }
  
  protected byte[] b() { // Byte code:
    //   0: invokestatic obtain : ()Landroid/os/Parcel;
    //   3: astore #5
    //   5: aload_0
    //   6: invokevirtual a : ()Lcom/facebook/soloader/m$e;
    //   9: astore #4
    //   11: aconst_null
    //   12: astore_3
    //   13: aload_3
    //   14: astore_2
    //   15: aload #4
    //   17: invokevirtual a : ()Lcom/facebook/soloader/m$b;
    //   20: getfield a : [Lcom/facebook/soloader/m$a;
    //   23: astore #6
    //   25: aload_3
    //   26: astore_2
    //   27: aload #5
    //   29: iconst_1
    //   30: invokevirtual writeByte : (B)V
    //   33: aload_3
    //   34: astore_2
    //   35: aload #5
    //   37: aload #6
    //   39: arraylength
    //   40: invokevirtual writeInt : (I)V
    //   43: iconst_0
    //   44: istore_1
    //   45: aload_3
    //   46: astore_2
    //   47: iload_1
    //   48: aload #6
    //   50: arraylength
    //   51: if_icmpge -> 89
    //   54: aload_3
    //   55: astore_2
    //   56: aload #5
    //   58: aload #6
    //   60: iload_1
    //   61: aaload
    //   62: getfield c : Ljava/lang/String;
    //   65: invokevirtual writeString : (Ljava/lang/String;)V
    //   68: aload_3
    //   69: astore_2
    //   70: aload #5
    //   72: aload #6
    //   74: iload_1
    //   75: aaload
    //   76: getfield d : Ljava/lang/String;
    //   79: invokevirtual writeString : (Ljava/lang/String;)V
    //   82: iload_1
    //   83: iconst_1
    //   84: iadd
    //   85: istore_1
    //   86: goto -> 45
    //   89: aload #4
    //   91: ifnull -> 99
    //   94: aload #4
    //   96: invokevirtual close : ()V
    //   99: aload #5
    //   101: invokevirtual marshall : ()[B
    //   104: astore_2
    //   105: aload #5
    //   107: invokevirtual recycle : ()V
    //   110: aload_2
    //   111: areturn
    //   112: astore_3
    //   113: goto -> 121
    //   116: astore_3
    //   117: aload_3
    //   118: astore_2
    //   119: aload_3
    //   120: athrow
    //   121: aload #4
    //   123: ifnull -> 154
    //   126: aload_2
    //   127: ifnull -> 149
    //   130: aload #4
    //   132: invokevirtual close : ()V
    //   135: goto -> 154
    //   138: astore #4
    //   140: aload_2
    //   141: aload #4
    //   143: invokevirtual addSuppressed : (Ljava/lang/Throwable;)V
    //   146: goto -> 154
    //   149: aload #4
    //   151: invokevirtual close : ()V
    //   154: aload_3
    //   155: athrow
    // Exception table:
    //   from	to	target	type
    //   15	25	116	java/lang/Throwable
    //   15	25	112	finally
    //   27	33	116	java/lang/Throwable
    //   27	33	112	finally
    //   35	43	116	java/lang/Throwable
    //   35	43	112	finally
    //   47	54	116	java/lang/Throwable
    //   47	54	112	finally
    //   56	68	116	java/lang/Throwable
    //   56	68	112	finally
    //   70	82	116	java/lang/Throwable
    //   70	82	112	finally
    //   119	121	112	finally
    //   130	135	138	java/lang/Throwable }
}
