package com.facebook.f.d;

import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Matrix;
import android.graphics.Paint;
import android.graphics.Rect;
import android.graphics.RectF;
import android.graphics.drawable.Drawable;
import com.facebook.f.d.a.b;
import com.facebook.f.e.q;

public class a extends Drawable implements b {
  private String a;
  
  private String b;
  
  private int c;
  
  private int d;
  
  private int e;
  
  private String f;
  
  private q.b g;
  
  private int h;
  
  private int i;
  
  private int j = 80;
  
  private final Paint k = new Paint(1);
  
  private final Matrix l = new Matrix();
  
  private final Rect m = new Rect();
  
  private final RectF n = new RectF();
  
  private int o;
  
  private int p;
  
  private int q;
  
  private int r;
  
  private int s;
  
  private long t;
  
  public a() { a(); }
  
  private void a(Canvas paramCanvas, String paramString, Object... paramVarArgs) {
    if (paramVarArgs != null)
      paramString = String.format(paramString, paramVarArgs); 
    paramCanvas.drawText(paramString, this.r, this.s, this.k);
    this.s += this.q;
  }
  
  private void a(Rect paramRect, int paramInt1, int paramInt2) {
    paramInt1 = Math.min(40, Math.max(12, Math.min(paramRect.width() / paramInt2, paramRect.height() / paramInt1)));
    this.k.setTextSize(paramInt1);
    this.q = paramInt1 + 8;
    if (this.j == 80)
      this.q *= -1; 
    this.o = paramRect.left + 10;
    if (this.j == 80) {
      paramInt1 = paramRect.bottom - 10;
    } else {
      paramInt1 = paramRect.top + 10 + 12;
    } 
    this.p = paramInt1;
  }
  
  int a(int paramInt1, int paramInt2, q.b paramb) {
    int i2 = getBounds().width();
    int i1 = getBounds().height();
    if (i2 > 0 && i1 > 0 && paramInt1 > 0) {
      if (paramInt2 <= 0)
        return 1727284022; 
      int i4 = i2;
      int i3 = i1;
      if (paramb != null) {
        Rect rect = this.m;
        rect.top = 0;
        rect.left = 0;
        rect.right = i2;
        rect.bottom = i1;
        this.l.reset();
        paramb.a(this.l, this.m, paramInt1, paramInt2, 0.0F, 0.0F);
        RectF rectF = this.n;
        rectF.top = 0.0F;
        rectF.left = 0.0F;
        rectF.right = paramInt1;
        rectF.bottom = paramInt2;
        this.l.mapRect(rectF);
        i4 = (int)this.n.width();
        i3 = (int)this.n.height();
        i4 = Math.min(i2, i4);
        i3 = Math.min(i1, i3);
      } 
      float f1 = i4;
      float f2 = i3;
      paramInt1 = Math.abs(paramInt1 - i4);
      paramInt2 = Math.abs(paramInt2 - i3);
      float f3 = paramInt1;
      if (f3 < f1 * 0.1F && paramInt2 < 0.1F * f2)
        return 1716301648; 
      if (f3 < f1 * 0.5F && paramInt2 < f2 * 0.5F)
        return 1728026624; 
    } 
    return 1727284022;
  }
  
  public void a() {
    this.c = -1;
    this.d = -1;
    this.e = -1;
    this.h = -1;
    this.i = -1;
    this.f = null;
    a(null);
    this.t = -1L;
    invalidateSelf();
  }
  
  public void a(int paramInt) { this.e = paramInt; }
  
  public void a(int paramInt1, int paramInt2) {
    this.c = paramInt1;
    this.d = paramInt2;
    invalidateSelf();
  }
  
  public void a(long paramLong) {
    this.t = paramLong;
    invalidateSelf();
  }
  
  public void a(q.b paramb) { this.g = paramb; }
  
  public void a(String paramString) {
    if (paramString == null)
      paramString = "none"; 
    this.a = paramString;
    invalidateSelf();
  }
  
  public void draw(Canvas paramCanvas) {
    Rect rect = getBounds();
    this.k.setStyle(Paint.Style.STROKE);
    this.k.setStrokeWidth(2.0F);
    this.k.setColor(-26624);
    paramCanvas.drawRect(rect.left, rect.top, rect.right, rect.bottom, this.k);
    this.k.setStyle(Paint.Style.FILL);
    this.k.setColor(a(this.c, this.d, this.g));
    paramCanvas.drawRect(rect.left, rect.top, rect.right, rect.bottom, this.k);
    this.k.setStyle(Paint.Style.FILL);
    this.k.setStrokeWidth(0.0F);
    this.k.setColor(-1);
    this.r = this.o;
    this.s = this.p;
    String str2 = this.b;
    if (str2 != null) {
      a(paramCanvas, "IDs: %s, %s", new Object[] { this.a, str2 });
    } else {
      a(paramCanvas, "ID: %s", new Object[] { this.a });
    } 
    a(paramCanvas, "D: %dx%d", new Object[] { Integer.valueOf(rect.width()), Integer.valueOf(rect.height()) });
    a(paramCanvas, "I: %dx%d", new Object[] { Integer.valueOf(this.c), Integer.valueOf(this.d) });
    a(paramCanvas, "I: %d KiB", new Object[] { Integer.valueOf(this.e / 1024) });
    String str1 = this.f;
    if (str1 != null)
      a(paramCanvas, "i format: %s", new Object[] { str1 }); 
    int i1 = this.h;
    if (i1 > 0)
      a(paramCanvas, "anim: f %d, l %d", new Object[] { Integer.valueOf(i1), Integer.valueOf(this.i) }); 
    q.b b1 = this.g;
    if (b1 != null)
      a(paramCanvas, "scale: %s", new Object[] { b1 }); 
    long l1 = this.t;
    if (l1 >= 0L)
      a(paramCanvas, "t: %d ms", new Object[] { Long.valueOf(l1) }); 
  }
  
  public int getOpacity() { return -3; }
  
  protected void onBoundsChange(Rect paramRect) {
    super.onBoundsChange(paramRect);
    a(paramRect, 7, 7);
  }
  
  public void setAlpha(int paramInt) {}
  
  public void setColorFilter(ColorFilter paramColorFilter) {}
}
