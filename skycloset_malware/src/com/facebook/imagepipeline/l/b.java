package com.facebook.imagepipeline.l;

import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Rect;
import android.os.Build;
import com.facebook.common.d.i;
import com.facebook.common.d.n;
import com.facebook.common.g.g;
import com.facebook.common.h.a;
import com.facebook.h.a;
import com.facebook.imagepipeline.e.g;
import com.facebook.imagepipeline.j.d;
import com.facebook.imagepipeline.memory.b;
import com.facebook.imagepipeline.memory.c;
import com.facebook.imagepipeline.nativecode.Bitmaps;
import java.util.Locale;

abstract class b implements e {
  protected static final byte[] a = { -1, -39 };
  
  private final b b = c.a();
  
  private static BitmapFactory.Options a(int paramInt, Bitmap.Config paramConfig) {
    BitmapFactory.Options options = new BitmapFactory.Options();
    options.inDither = true;
    options.inPreferredConfig = paramConfig;
    options.inPurgeable = true;
    options.inInputShareable = true;
    options.inSampleSize = paramInt;
    if (Build.VERSION.SDK_INT >= 11)
      options.inMutable = true; 
    return options;
  }
  
  protected static boolean a(a<g> parama, int paramInt) {
    g g = (g)parama.a();
    return (paramInt >= 2 && g.a(paramInt - 2) == -1 && g.a(paramInt - 1) == -39);
  }
  
  abstract Bitmap a(a<g> parama, int paramInt, BitmapFactory.Options paramOptions);
  
  abstract Bitmap a(a<g> parama, BitmapFactory.Options paramOptions);
  
  public a<Bitmap> a(Bitmap paramBitmap) {
    try {
      Bitmaps.a(paramBitmap);
      if (this.b.a(paramBitmap))
        return a.a(paramBitmap, this.b.e()); 
      int i = a.a(paramBitmap);
      paramBitmap.recycle();
      throw new g(String.format(Locale.US, "Attempted to pin a bitmap of size %d bytes. The current pool count is %d, the current pool size is %d bytes. The current pool max count is %d, the current pool max size is %d bytes.", new Object[] { Integer.valueOf(i), Integer.valueOf(this.b.a()), Long.valueOf(this.b.b()), Integer.valueOf(this.b.c()), Integer.valueOf(this.b.d()) }));
    } catch (Exception exception) {
      paramBitmap.recycle();
      throw n.b(exception);
    } 
  }
  
  public a<Bitmap> a(d paramd, Bitmap.Config paramConfig, Rect paramRect) {
    null = a(paramd.j(), paramConfig);
    a1 = paramd.c();
    i.a(a1);
    try {
      return a2;
    } finally {
      a.c(a1);
    } 
  }
  
  public a<Bitmap> a(d paramd, Bitmap.Config paramConfig, Rect paramRect, int paramInt) {
    null = a(paramd.j(), paramConfig);
    a1 = paramd.c();
    i.a(a1);
    try {
      return a2;
    } finally {
      a.c(a1);
    } 
  }
}
