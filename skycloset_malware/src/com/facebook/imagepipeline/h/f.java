package com.facebook.imagepipeline.h;

import com.facebook.common.d.b;
import com.facebook.common.d.i;
import com.facebook.common.d.n;
import com.facebook.common.g.a;
import com.facebook.common.g.f;
import com.facebook.common.k.d;
import com.facebook.imagepipeline.j.d;
import java.io.IOException;
import java.io.InputStream;

public class f {
  private int a;
  
  private int b;
  
  private int c;
  
  private int d;
  
  private int e;
  
  private int f;
  
  private boolean g;
  
  private final a h;
  
  public f(a parama) {
    this.h = (a)i.a(parama);
    this.c = 0;
    this.b = 0;
    this.d = 0;
    this.f = 0;
    this.e = 0;
    this.a = 0;
  }
  
  private static boolean a(int paramInt) { return (paramInt == 1) ? false : ((paramInt >= 208 && paramInt <= 215) ? false : ((paramInt != 217 && paramInt != 216))); }
  
  private boolean a(InputStream paramInputStream) { // Byte code:
    //   0: aload_0
    //   1: getfield e : I
    //   4: istore_2
    //   5: aload_0
    //   6: getfield a : I
    //   9: bipush #6
    //   11: if_icmpeq -> 251
    //   14: aload_1
    //   15: invokevirtual read : ()I
    //   18: istore_3
    //   19: iload_3
    //   20: iconst_m1
    //   21: if_icmpeq -> 251
    //   24: aload_0
    //   25: aload_0
    //   26: getfield c : I
    //   29: iconst_1
    //   30: iadd
    //   31: putfield c : I
    //   34: aload_0
    //   35: getfield g : Z
    //   38: ifeq -> 54
    //   41: aload_0
    //   42: bipush #6
    //   44: putfield a : I
    //   47: aload_0
    //   48: iconst_0
    //   49: putfield g : Z
    //   52: iconst_0
    //   53: ireturn
    //   54: aload_0
    //   55: getfield a : I
    //   58: tableswitch default -> 272, 0 -> 225, 1 -> 302, 2 -> 292, 3 -> 275, 4 -> 143, 5 -> 103
    //   96: iconst_0
    //   97: invokestatic b : (Z)V
    //   100: goto -> 237
    //   103: aload_0
    //   104: getfield b : I
    //   107: bipush #8
    //   109: ishl
    //   110: iload_3
    //   111: iadd
    //   112: iconst_2
    //   113: isub
    //   114: istore #4
    //   116: aload_1
    //   117: iload #4
    //   119: i2l
    //   120: invokestatic a : (Ljava/io/InputStream;J)J
    //   123: pop2
    //   124: aload_0
    //   125: aload_0
    //   126: getfield c : I
    //   129: iload #4
    //   131: iadd
    //   132: putfield c : I
    //   135: aload_0
    //   136: iconst_2
    //   137: putfield a : I
    //   140: goto -> 237
    //   143: aload_0
    //   144: iconst_5
    //   145: putfield a : I
    //   148: goto -> 237
    //   151: aload_0
    //   152: iconst_3
    //   153: putfield a : I
    //   156: goto -> 237
    //   159: iload_3
    //   160: sipush #217
    //   163: if_icmpne -> 184
    //   166: aload_0
    //   167: iconst_1
    //   168: putfield g : Z
    //   171: aload_0
    //   172: aload_0
    //   173: getfield c : I
    //   176: iconst_2
    //   177: isub
    //   178: invokespecial b : (I)V
    //   181: goto -> 135
    //   184: iload_3
    //   185: sipush #218
    //   188: if_icmpne -> 201
    //   191: aload_0
    //   192: aload_0
    //   193: getfield c : I
    //   196: iconst_2
    //   197: isub
    //   198: invokespecial b : (I)V
    //   201: iload_3
    //   202: invokestatic a : (I)Z
    //   205: ifeq -> 135
    //   208: aload_0
    //   209: iconst_4
    //   210: putfield a : I
    //   213: goto -> 237
    //   216: aload_0
    //   217: bipush #6
    //   219: putfield a : I
    //   222: goto -> 237
    //   225: iload_3
    //   226: sipush #255
    //   229: if_icmpne -> 216
    //   232: aload_0
    //   233: iconst_1
    //   234: putfield a : I
    //   237: aload_0
    //   238: iload_3
    //   239: putfield b : I
    //   242: goto -> 5
    //   245: astore_1
    //   246: aload_1
    //   247: invokestatic b : (Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
    //   250: pop
    //   251: aload_0
    //   252: getfield a : I
    //   255: bipush #6
    //   257: if_icmpeq -> 270
    //   260: aload_0
    //   261: getfield e : I
    //   264: iload_2
    //   265: if_icmpeq -> 270
    //   268: iconst_1
    //   269: ireturn
    //   270: iconst_0
    //   271: ireturn
    //   272: goto -> 96
    //   275: iload_3
    //   276: sipush #255
    //   279: if_icmpne -> 285
    //   282: goto -> 151
    //   285: iload_3
    //   286: ifne -> 159
    //   289: goto -> 135
    //   292: iload_3
    //   293: sipush #255
    //   296: if_icmpne -> 237
    //   299: goto -> 151
    //   302: iload_3
    //   303: sipush #216
    //   306: if_icmpne -> 216
    //   309: goto -> 135
    // Exception table:
    //   from	to	target	type
    //   5	19	245	java/io/IOException
    //   24	52	245	java/io/IOException
    //   54	96	245	java/io/IOException
    //   96	100	245	java/io/IOException
    //   103	135	245	java/io/IOException
    //   135	140	245	java/io/IOException
    //   143	148	245	java/io/IOException
    //   151	156	245	java/io/IOException
    //   166	181	245	java/io/IOException
    //   191	201	245	java/io/IOException
    //   201	213	245	java/io/IOException
    //   216	222	245	java/io/IOException
    //   232	237	245	java/io/IOException
    //   237	242	245	java/io/IOException }
  
  private void b(int paramInt) {
    if (this.d > 0)
      this.f = paramInt; 
    paramInt = this.d;
    this.d = paramInt + 1;
    this.e = paramInt;
  }
  
  public int a() { return this.f; }
  
  public boolean a(d paramd) {
    d d1;
    if (this.a == 6)
      return false; 
    if (paramd.l() <= this.c)
      return false; 
    f f1 = new f(paramd.d(), (byte[])this.h.a(16384), this.h);
    try {
      d.a(f1, this.c);
      boolean bool = a(f1);
      b.a(f1);
      return bool;
    } catch (IOException null) {
      n.b(d1);
      b.a(f1);
      return false;
    } finally {}
    b.a(f1);
    throw d1;
  }
  
  public int b() { return this.e; }
  
  public boolean c() { return this.g; }
}
