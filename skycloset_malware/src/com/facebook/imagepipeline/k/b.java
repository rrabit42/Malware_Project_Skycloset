package com.facebook.imagepipeline.k;

import com.facebook.common.e.a;
import com.facebook.imagepipeline.o.b;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Set;

public class b implements c {
  private final List<c> a;
  
  public b(Set<c> paramSet) {
    this.a = new ArrayList(paramSet.size());
    for (c c1 : paramSet) {
      if (c1 != null)
        this.a.add(c1); 
    } 
  }
  
  public b(c... paramVarArgs) {
    this.a = new ArrayList(paramVarArgs.length);
    int i = paramVarArgs.length;
    for (byte b1 = 0; b1 < i; b1++) {
      c c1 = paramVarArgs[b1];
      if (c1 != null)
        this.a.add(c1); 
    } 
  }
  
  private void a(String paramString, Throwable paramThrowable) { a.c("ForwardingRequestListener", paramString, paramThrowable); }
  
  public void a(c paramc) { this.a.add(paramc); }
  
  public void a(b paramb, Object paramObject, String paramString, boolean paramBoolean) {
    int i = this.a.size();
    byte b1;
    for (b1 = 0; b1 < i; b1++) {
      c1 = (c)this.a.get(b1);
      try {
        c1.a(paramb, paramObject, paramString, paramBoolean);
      } catch (Exception c1) {
        a("InternalListener exception in onRequestStart", c1);
      } 
    } 
  }
  
  public void a(b paramb, String paramString, Throwable paramThrowable, boolean paramBoolean) {
    int i = this.a.size();
    byte b1;
    for (b1 = 0; b1 < i; b1++) {
      c1 = (c)this.a.get(b1);
      try {
        c1.a(paramb, paramString, paramThrowable, paramBoolean);
      } catch (Exception c1) {
        a("InternalListener exception in onRequestFailure", c1);
      } 
    } 
  }
  
  public void a(b paramb, String paramString, boolean paramBoolean) {
    int i = this.a.size();
    byte b1;
    for (b1 = 0; b1 < i; b1++) {
      c1 = (c)this.a.get(b1);
      try {
        c1.a(paramb, paramString, paramBoolean);
      } catch (Exception c1) {
        a("InternalListener exception in onRequestSuccess", c1);
      } 
    } 
  }
  
  public void a(String paramString1, String paramString2) {
    int i = this.a.size();
    for (byte b1 = 0; b1 < i; b1++) {
      c1 = (c)this.a.get(b1);
      try {
        c1.a(paramString1, paramString2);
      } catch (Exception c1) {
        a("InternalListener exception in onProducerStart", c1);
      } 
    } 
  }
  
  public void a(String paramString1, String paramString2, String paramString3) {
    int i = this.a.size();
    byte b1;
    for (b1 = 0; b1 < i; b1++) {
      c1 = (c)this.a.get(b1);
      try {
        c1.a(paramString1, paramString2, paramString3);
      } catch (Exception c1) {
        a("InternalListener exception in onIntermediateChunkStart", c1);
      } 
    } 
  }
  
  public void a(String paramString1, String paramString2, Throwable paramThrowable, Map<String, String> paramMap) {
    int i = this.a.size();
    byte b1;
    for (b1 = 0; b1 < i; b1++) {
      c1 = (c)this.a.get(b1);
      try {
        c1.a(paramString1, paramString2, paramThrowable, paramMap);
      } catch (Exception c1) {
        a("InternalListener exception in onProducerFinishWithFailure", c1);
      } 
    } 
  }
  
  public void a(String paramString1, String paramString2, Map<String, String> paramMap) {
    int i = this.a.size();
    byte b1;
    for (b1 = 0; b1 < i; b1++) {
      c1 = (c)this.a.get(b1);
      try {
        c1.a(paramString1, paramString2, paramMap);
      } catch (Exception c1) {
        a("InternalListener exception in onProducerFinishWithSuccess", c1);
      } 
    } 
  }
  
  public void a(String paramString1, String paramString2, boolean paramBoolean) {
    int i = this.a.size();
    byte b1;
    for (b1 = 0; b1 < i; b1++) {
      c1 = (c)this.a.get(b1);
      try {
        c1.a(paramString1, paramString2, paramBoolean);
      } catch (Exception c1) {
        a("InternalListener exception in onProducerFinishWithSuccess", c1);
      } 
    } 
  }
  
  public void a_(String paramString) {
    int i = this.a.size();
    for (byte b1 = 0; b1 < i; b1++) {
      c1 = (c)this.a.get(b1);
      try {
        c1.a_(paramString);
      } catch (Exception c1) {
        a("InternalListener exception in onRequestCancellation", c1);
      } 
    } 
  }
  
  public void b(String paramString1, String paramString2, Map<String, String> paramMap) {
    int i = this.a.size();
    byte b1;
    for (b1 = 0; b1 < i; b1++) {
      c1 = (c)this.a.get(b1);
      try {
        c1.b(paramString1, paramString2, paramMap);
      } catch (Exception c1) {
        a("InternalListener exception in onProducerFinishWithCancellation", c1);
      } 
    } 
  }
  
  public boolean b(String paramString) {
    int i = this.a.size();
    for (byte b1 = 0; b1 < i; b1++) {
      if (((c)this.a.get(b1)).b(paramString))
        return true; 
    } 
    return false;
  }
}
