package com.facebook.imagepipeline.f;

import android.net.Uri;
import com.facebook.b.a.d;
import com.facebook.c.c;
import com.facebook.c.d;
import com.facebook.common.d.j;
import com.facebook.common.d.l;
import com.facebook.common.g.g;
import com.facebook.common.h.a;
import com.facebook.common.k.f;
import com.facebook.imagepipeline.d.e;
import com.facebook.imagepipeline.d.f;
import com.facebook.imagepipeline.d.p;
import com.facebook.imagepipeline.e.d;
import com.facebook.imagepipeline.g.b;
import com.facebook.imagepipeline.g.c;
import com.facebook.imagepipeline.j.b;
import com.facebook.imagepipeline.k.b;
import com.facebook.imagepipeline.k.c;
import com.facebook.imagepipeline.n.ak;
import com.facebook.imagepipeline.n.aq;
import com.facebook.imagepipeline.n.au;
import com.facebook.imagepipeline.o.b;
import com.facebook.imagepipeline.o.c;
import java.util.Set;
import java.util.concurrent.CancellationException;
import java.util.concurrent.atomic.AtomicLong;

public class g {
  private static final CancellationException a = new CancellationException("Prefetching is not enabled");
  
  private final m b;
  
  private final c c;
  
  private final l<Boolean> d;
  
  private final p<d, b> e;
  
  private final p<d, g> f;
  
  private final e g;
  
  private final e h;
  
  private final f i;
  
  private final au j;
  
  private final l<Boolean> k;
  
  private AtomicLong l = new AtomicLong();
  
  private final l<Boolean> m;
  
  public g(m paramm, Set<c> paramSet, l<Boolean> paraml1, p<d, b> paramp1, p<d, g> paramp2, e parame1, e parame2, f paramf, au paramau, l<Boolean> paraml2, l<Boolean> paraml3) {
    this.b = paramm;
    this.c = new b(paramSet);
    this.d = paraml1;
    this.e = paramp1;
    this.f = paramp2;
    this.g = parame1;
    this.h = parame2;
    this.i = paramf;
    this.j = paramau;
    this.k = paraml2;
    this.m = paraml3;
  }
  
  private c<Void> a(ak<Void> paramak, b paramb, b.b paramb1, Object paramObject, d paramd) {
    c c1 = a(paramb, null);
    try {
      paramb1 = b.b.a(paramb.m(), paramb1);
      return c.a(paramak, new aq(paramb, f(), c1, paramObject, paramb1, true, false, paramd), c1);
    } catch (Exception paramak) {
      return d.a(paramak);
    } 
  }
  
  private <T> c<a<T>> a(ak<a<T>> paramak, b paramb, b.b paramb1, Object paramObject, c paramc) {
    String str;
    paramc = a(paramb, paramc);
    try {
      paramb1 = b.b.a(paramb.m(), paramb1);
      str = f();
      if (paramb.j() || !f.b(paramb.b())) {
        boolean bool1 = true;
        return b.a(paramak, new aq(paramb, str, paramc, paramObject, paramb1, false, bool1, paramb.l()), paramc);
      } 
    } catch (Exception paramak) {
      return d.a(paramak);
    } 
    boolean bool = false;
    return b.a(paramak, new aq(paramb, str, paramc, paramObject, paramb1, false, bool, paramb.l()), paramc);
  }
  
  private c a(b paramb, c paramc) { return (paramc == null) ? ((paramb.r() == null) ? this.c : new b(new c[] { this.c, paramb.r() })) : ((paramb.r() == null) ? new b(new c[] { this.c, paramc }) : new b(new c[] { this.c, paramc, paramb.r() })); }
  
  private j<d> c(Uri paramUri) { return new Object(this, paramUri); }
  
  private String f() { return String.valueOf(this.l.getAndIncrement()); }
  
  public c<a<b>> a(b paramb, Object paramObject) { return a(paramb, paramObject, b.b.a); }
  
  public c<Void> a(b paramb, Object paramObject, d paramd) {
    if (!((Boolean)this.d.b()).booleanValue())
      return d.a(a); 
    try {
      return a(this.b.a(paramb), paramb, b.b.a, paramObject, paramd);
    } catch (Exception paramb) {
      return d.a(paramb);
    } 
  }
  
  public c<a<b>> a(b paramb, Object paramObject, b.b paramb1) { return a(paramb, paramObject, paramb1, null); }
  
  public c<a<b>> a(b paramb, Object paramObject, b.b paramb1, c paramc) {
    try {
      return a(this.b.b(paramb), paramb, paramb1, paramObject, paramc);
    } catch (Exception paramb) {
      return d.a(paramb);
    } 
  }
  
  public void a() {
    Object object = new Object(this);
    this.e.a(object);
    this.f.a(object);
  }
  
  public boolean a(Uri paramUri) {
    if (paramUri == null)
      return false; 
    j j1 = c(paramUri);
    return this.e.b(j1);
  }
  
  public boolean a(Uri paramUri, b.a parama) { return a(c.a(paramUri).a(parama).o()); }
  
  public boolean a(b paramb) {
    d d1 = this.i.c(paramb, null);
    b.a a1 = paramb.a();
    switch (null.a[a1.ordinal()]) {
      default:
        return false;
      case 2:
        e1 = this.h;
        return e1.b(d1);
      case 1:
        break;
    } 
    e e1 = this.g;
    return e1.b(d1);
  }
  
  public c<Void> b(b paramb, Object paramObject) { return a(paramb, paramObject, d.b); }
  
  public void b() {
    this.g.a();
    this.h.a();
  }
  
  public boolean b(Uri paramUri) { return (a(paramUri, b.a.a) || a(paramUri, b.a.b)); }
  
  public void c() {
    a();
    b();
  }
  
  public p<d, b> d() { return this.e; }
  
  public f e() { return this.i; }
}
