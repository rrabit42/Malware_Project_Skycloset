package com.facebook.imagepipeline.f;

import android.content.ContentResolver;
import android.net.Uri;
import com.facebook.common.d.i;
import com.facebook.common.f.a;
import com.facebook.common.h.a;
import com.facebook.imagepipeline.j.b;
import com.facebook.imagepipeline.j.d;
import com.facebook.imagepipeline.n.a;
import com.facebook.imagepipeline.n.ag;
import com.facebook.imagepipeline.n.ah;
import com.facebook.imagepipeline.n.ak;
import com.facebook.imagepipeline.n.ap;
import com.facebook.imagepipeline.n.at;
import com.facebook.imagepipeline.n.au;
import com.facebook.imagepipeline.n.av;
import com.facebook.imagepipeline.n.aw;
import com.facebook.imagepipeline.n.ax;
import com.facebook.imagepipeline.n.g;
import com.facebook.imagepipeline.n.h;
import com.facebook.imagepipeline.n.p;
import com.facebook.imagepipeline.o.b;
import java.util.HashMap;
import java.util.Map;

public class m {
  ak<a<b>> a;
  
  ak<d> b;
  
  ak<d> c;
  
  ak<Void> d;
  
  ak<Void> e;
  
  ak<a<b>> f;
  
  ak<a<b>> g;
  
  ak<a<b>> h;
  
  ak<a<b>> i;
  
  ak<a<b>> j;
  
  ak<a<b>> k;
  
  ak<a<b>> l;
  
  Map<ak<a<b>>, ak<a<b>>> m;
  
  Map<ak<a<b>>, ak<Void>> n;
  
  Map<ak<a<b>>, ak<a<b>>> o;
  
  private final ContentResolver p;
  
  private final l q;
  
  private final ag r;
  
  private final boolean s;
  
  private final boolean t;
  
  private final boolean u;
  
  private final au v;
  
  private final boolean w;
  
  private final boolean x;
  
  private final boolean y;
  
  private ak<d> z;
  
  public m(ContentResolver paramContentResolver, l paraml, ag paramag, boolean paramBoolean1, boolean paramBoolean2, au paramau, boolean paramBoolean3, boolean paramBoolean4, boolean paramBoolean5, boolean paramBoolean6) {
    this.p = paramContentResolver;
    this.q = paraml;
    this.r = paramag;
    this.s = paramBoolean1;
    this.t = paramBoolean2;
    this.m = new HashMap();
    this.n = new HashMap();
    this.o = new HashMap();
    this.v = paramau;
    this.w = paramBoolean3;
    this.x = paramBoolean4;
    this.u = paramBoolean5;
    this.y = paramBoolean6;
  }
  
  private ak<a<b>> a() { // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: getfield a : Lcom/facebook/imagepipeline/n/ak;
    //   6: ifnonnull -> 21
    //   9: aload_0
    //   10: aload_0
    //   11: aload_0
    //   12: invokespecial d : ()Lcom/facebook/imagepipeline/n/ak;
    //   15: invokespecial b : (Lcom/facebook/imagepipeline/n/ak;)Lcom/facebook/imagepipeline/n/ak;
    //   18: putfield a : Lcom/facebook/imagepipeline/n/ak;
    //   21: aload_0
    //   22: getfield a : Lcom/facebook/imagepipeline/n/ak;
    //   25: astore_1
    //   26: aload_0
    //   27: monitorexit
    //   28: aload_1
    //   29: areturn
    //   30: astore_1
    //   31: aload_0
    //   32: monitorexit
    //   33: aload_1
    //   34: athrow
    // Exception table:
    //   from	to	target	type
    //   2	21	30	finally
    //   21	26	30	finally }
  
  private ak<a<b>> a(ak<d> paramak) { return a(paramak, new ax[] { this.q.e() }); }
  
  private ak<a<b>> a(ak<d> paramak, ax<d>[] paramArrayOfax) { return b(b(c(paramak), paramArrayOfax)); }
  
  private ak<d> a(ax<d>[] paramArrayOfax) {
    aw aw = this.q.a(paramArrayOfax);
    return this.q.a(aw, true, this.w);
  }
  
  private static String a(Uri paramUri) {
    String str2 = String.valueOf(paramUri);
    String str1 = str2;
    if (str2.length() > 30) {
      StringBuilder stringBuilder = new StringBuilder();
      stringBuilder.append(str2.substring(0, 30));
      stringBuilder.append("...");
      str1 = stringBuilder.toString();
    } 
    return str1;
  }
  
  private ak<d> b() { // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: getfield c : Lcom/facebook/imagepipeline/n/ak;
    //   6: ifnonnull -> 28
    //   9: aload_0
    //   10: aload_0
    //   11: getfield q : Lcom/facebook/imagepipeline/f/l;
    //   14: aload_0
    //   15: invokespecial d : ()Lcom/facebook/imagepipeline/n/ak;
    //   18: aload_0
    //   19: getfield v : Lcom/facebook/imagepipeline/n/au;
    //   22: invokevirtual a : (Lcom/facebook/imagepipeline/n/ak;Lcom/facebook/imagepipeline/n/au;)Lcom/facebook/imagepipeline/n/at;
    //   25: putfield c : Lcom/facebook/imagepipeline/n/ak;
    //   28: aload_0
    //   29: getfield c : Lcom/facebook/imagepipeline/n/ak;
    //   32: astore_1
    //   33: aload_0
    //   34: monitorexit
    //   35: aload_1
    //   36: areturn
    //   37: astore_1
    //   38: aload_0
    //   39: monitorexit
    //   40: aload_1
    //   41: athrow
    // Exception table:
    //   from	to	target	type
    //   2	28	37	finally
    //   28	33	37	finally }
  
  private ak<a<b>> b(ak<d> paramak) { return e(this.q.e(paramak)); }
  
  private ak<d> b(ak<d> paramak, ax<d>[] paramArrayOfax) {
    a a1 = l.a(paramak);
    ap ap = this.q.a(a1, true, this.w);
    av av = this.q.n(ap);
    l l1;
    return (l1 = this.q).a(a(paramArrayOfax), av);
  }
  
  private ak<Void> c() { // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: getfield e : Lcom/facebook/imagepipeline/n/ak;
    //   6: ifnonnull -> 20
    //   9: aload_0
    //   10: aload_0
    //   11: invokespecial b : ()Lcom/facebook/imagepipeline/n/ak;
    //   14: invokestatic m : (Lcom/facebook/imagepipeline/n/ak;)Lcom/facebook/imagepipeline/n/as;
    //   17: putfield e : Lcom/facebook/imagepipeline/n/ak;
    //   20: aload_0
    //   21: getfield e : Lcom/facebook/imagepipeline/n/ak;
    //   24: astore_1
    //   25: aload_0
    //   26: monitorexit
    //   27: aload_1
    //   28: areturn
    //   29: astore_1
    //   30: aload_0
    //   31: monitorexit
    //   32: aload_1
    //   33: athrow
    // Exception table:
    //   from	to	target	type
    //   2	20	29	finally
    //   20	25	29	finally }
  
  private ak<d> c(ak<d> paramak) { // Byte code:
    //   0: aload_1
    //   1: astore_2
    //   2: getstatic com/facebook/common/l/c.a : Z
    //   5: ifeq -> 32
    //   8: aload_0
    //   9: getfield t : Z
    //   12: ifeq -> 23
    //   15: aload_1
    //   16: astore_2
    //   17: getstatic com/facebook/common/l/c.d : Lcom/facebook/common/l/b;
    //   20: ifnonnull -> 32
    //   23: aload_0
    //   24: getfield q : Lcom/facebook/imagepipeline/f/l;
    //   27: aload_1
    //   28: invokevirtual o : (Lcom/facebook/imagepipeline/n/ak;)Lcom/facebook/imagepipeline/n/az;
    //   31: astore_2
    //   32: aload_2
    //   33: astore_1
    //   34: aload_0
    //   35: getfield y : Z
    //   38: ifeq -> 47
    //   41: aload_0
    //   42: aload_2
    //   43: invokespecial d : (Lcom/facebook/imagepipeline/n/ak;)Lcom/facebook/imagepipeline/n/ak;
    //   46: astore_1
    //   47: aload_0
    //   48: getfield q : Lcom/facebook/imagepipeline/f/l;
    //   51: aload_1
    //   52: invokevirtual j : (Lcom/facebook/imagepipeline/n/ak;)Lcom/facebook/imagepipeline/n/s;
    //   55: astore_1
    //   56: aload_0
    //   57: getfield q : Lcom/facebook/imagepipeline/f/l;
    //   60: aload_1
    //   61: invokevirtual i : (Lcom/facebook/imagepipeline/n/ak;)Lcom/facebook/imagepipeline/n/r;
    //   64: areturn }
  
  private static void c(b paramb) {
    boolean bool;
    i.a(paramb);
    if (paramb.m().a() <= b.b.c.a()) {
      bool = true;
    } else {
      bool = false;
    } 
    i.a(bool);
  }
  
  private ak<d> d() { // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: getfield z : Lcom/facebook/imagepipeline/n/ak;
    //   6: ifnonnull -> 54
    //   9: aload_0
    //   10: aload_0
    //   11: aload_0
    //   12: getfield q : Lcom/facebook/imagepipeline/f/l;
    //   15: aload_0
    //   16: getfield r : Lcom/facebook/imagepipeline/n/ag;
    //   19: invokevirtual a : (Lcom/facebook/imagepipeline/n/ag;)Lcom/facebook/imagepipeline/n/af;
    //   22: invokespecial c : (Lcom/facebook/imagepipeline/n/ak;)Lcom/facebook/imagepipeline/n/ak;
    //   25: invokestatic a : (Lcom/facebook/imagepipeline/n/ak;)Lcom/facebook/imagepipeline/n/a;
    //   28: putfield z : Lcom/facebook/imagepipeline/n/ak;
    //   31: aload_0
    //   32: aload_0
    //   33: getfield q : Lcom/facebook/imagepipeline/f/l;
    //   36: aload_0
    //   37: getfield z : Lcom/facebook/imagepipeline/n/ak;
    //   40: aload_0
    //   41: getfield s : Z
    //   44: aload_0
    //   45: getfield w : Z
    //   48: invokevirtual a : (Lcom/facebook/imagepipeline/n/ak;ZZ)Lcom/facebook/imagepipeline/n/ap;
    //   51: putfield z : Lcom/facebook/imagepipeline/n/ak;
    //   54: aload_0
    //   55: getfield z : Lcom/facebook/imagepipeline/n/ak;
    //   58: astore_1
    //   59: aload_0
    //   60: monitorexit
    //   61: aload_1
    //   62: areturn
    //   63: astore_1
    //   64: aload_0
    //   65: monitorexit
    //   66: aload_1
    //   67: athrow
    // Exception table:
    //   from	to	target	type
    //   2	54	63	finally
    //   54	59	63	finally }
  
  private ak<d> d(ak<d> paramak) {
    ah ah = paramak;
    if (this.u)
      ah = this.q.h(paramak); 
    p p1 = this.q.g(ah);
    return this.q.f(p1);
  }
  
  private ak<a<b>> d(b paramb) {
    i.a(paramb);
    Uri uri = paramb.b();
    i.a(uri, "Uri is null.");
    int i1 = paramb.c();
    if (i1 != 0) {
      StringBuilder stringBuilder;
      switch (i1) {
        default:
          stringBuilder = new StringBuilder();
          stringBuilder.append("Unsupported uri scheme! Uri is: ");
          stringBuilder.append(a(uri));
          throw new IllegalArgumentException(stringBuilder.toString());
        case 8:
          return j();
        case 7:
          return m();
        case 6:
          return k();
        case 5:
          return l();
        case 4:
          return a.a(this.p.getType(uri)) ? h() : i();
        case 3:
          return g();
        case 2:
          break;
      } 
      return h();
    } 
    return a();
  }
  
  private ak<Void> e() { // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: getfield d : Lcom/facebook/imagepipeline/n/ak;
    //   6: ifnonnull -> 20
    //   9: aload_0
    //   10: aload_0
    //   11: invokespecial f : ()Lcom/facebook/imagepipeline/n/ak;
    //   14: invokestatic m : (Lcom/facebook/imagepipeline/n/ak;)Lcom/facebook/imagepipeline/n/as;
    //   17: putfield d : Lcom/facebook/imagepipeline/n/ak;
    //   20: aload_0
    //   21: getfield d : Lcom/facebook/imagepipeline/n/ak;
    //   24: astore_1
    //   25: aload_0
    //   26: monitorexit
    //   27: aload_1
    //   28: areturn
    //   29: astore_1
    //   30: aload_0
    //   31: monitorexit
    //   32: aload_1
    //   33: athrow
    // Exception table:
    //   from	to	target	type
    //   2	20	29	finally
    //   20	25	29	finally }
  
  private ak<a<b>> e(ak<a<b>> paramak) {
    h h1 = this.q.d(paramak);
    g g1 = this.q.c(h1);
    at at = this.q.a(g1, this.v);
    return this.q.b(at);
  }
  
  private ak<d> f() { // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: getfield b : Lcom/facebook/imagepipeline/n/ak;
    //   6: ifnonnull -> 37
    //   9: aload_0
    //   10: aload_0
    //   11: getfield q : Lcom/facebook/imagepipeline/f/l;
    //   14: invokevirtual f : ()Lcom/facebook/imagepipeline/n/ab;
    //   17: invokespecial c : (Lcom/facebook/imagepipeline/n/ak;)Lcom/facebook/imagepipeline/n/ak;
    //   20: astore_1
    //   21: aload_0
    //   22: aload_0
    //   23: getfield q : Lcom/facebook/imagepipeline/f/l;
    //   26: aload_1
    //   27: aload_0
    //   28: getfield v : Lcom/facebook/imagepipeline/n/au;
    //   31: invokevirtual a : (Lcom/facebook/imagepipeline/n/ak;Lcom/facebook/imagepipeline/n/au;)Lcom/facebook/imagepipeline/n/at;
    //   34: putfield b : Lcom/facebook/imagepipeline/n/ak;
    //   37: aload_0
    //   38: getfield b : Lcom/facebook/imagepipeline/n/ak;
    //   41: astore_1
    //   42: aload_0
    //   43: monitorexit
    //   44: aload_1
    //   45: areturn
    //   46: astore_1
    //   47: aload_0
    //   48: monitorexit
    //   49: aload_1
    //   50: athrow
    // Exception table:
    //   from	to	target	type
    //   2	37	46	finally
    //   37	42	46	finally }
  
  private ak<a<b>> f(ak<a<b>> paramak) { // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: getfield m : Ljava/util/Map;
    //   6: aload_1
    //   7: invokeinterface containsKey : (Ljava/lang/Object;)Z
    //   12: ifne -> 45
    //   15: aload_0
    //   16: getfield q : Lcom/facebook/imagepipeline/f/l;
    //   19: aload_1
    //   20: invokevirtual l : (Lcom/facebook/imagepipeline/n/ak;)Lcom/facebook/imagepipeline/n/aj;
    //   23: astore_2
    //   24: aload_0
    //   25: getfield q : Lcom/facebook/imagepipeline/f/l;
    //   28: aload_2
    //   29: invokevirtual k : (Lcom/facebook/imagepipeline/n/ak;)Lcom/facebook/imagepipeline/n/ai;
    //   32: astore_2
    //   33: aload_0
    //   34: getfield m : Ljava/util/Map;
    //   37: aload_1
    //   38: aload_2
    //   39: invokeinterface put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   44: pop
    //   45: aload_0
    //   46: getfield m : Ljava/util/Map;
    //   49: aload_1
    //   50: invokeinterface get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   55: checkcast com/facebook/imagepipeline/n/ak
    //   58: astore_1
    //   59: aload_0
    //   60: monitorexit
    //   61: aload_1
    //   62: areturn
    //   63: astore_1
    //   64: aload_0
    //   65: monitorexit
    //   66: aload_1
    //   67: athrow
    // Exception table:
    //   from	to	target	type
    //   2	45	63	finally
    //   45	59	63	finally }
  
  private ak<a<b>> g() { // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: getfield f : Lcom/facebook/imagepipeline/n/ak;
    //   6: ifnonnull -> 24
    //   9: aload_0
    //   10: aload_0
    //   11: aload_0
    //   12: getfield q : Lcom/facebook/imagepipeline/f/l;
    //   15: invokevirtual f : ()Lcom/facebook/imagepipeline/n/ab;
    //   18: invokespecial a : (Lcom/facebook/imagepipeline/n/ak;)Lcom/facebook/imagepipeline/n/ak;
    //   21: putfield f : Lcom/facebook/imagepipeline/n/ak;
    //   24: aload_0
    //   25: getfield f : Lcom/facebook/imagepipeline/n/ak;
    //   28: astore_1
    //   29: aload_0
    //   30: monitorexit
    //   31: aload_1
    //   32: areturn
    //   33: astore_1
    //   34: aload_0
    //   35: monitorexit
    //   36: aload_1
    //   37: athrow
    // Exception table:
    //   from	to	target	type
    //   2	24	33	finally
    //   24	29	33	finally }
  
  private ak<a<b>> g(ak<a<b>> paramak) { // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: getfield o : Ljava/util/Map;
    //   6: aload_1
    //   7: invokeinterface get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   12: checkcast com/facebook/imagepipeline/n/ak
    //   15: astore_3
    //   16: aload_3
    //   17: astore_2
    //   18: aload_3
    //   19: ifnonnull -> 43
    //   22: aload_0
    //   23: getfield q : Lcom/facebook/imagepipeline/f/l;
    //   26: aload_1
    //   27: invokevirtual p : (Lcom/facebook/imagepipeline/n/ak;)Lcom/facebook/imagepipeline/n/i;
    //   30: astore_2
    //   31: aload_0
    //   32: getfield o : Ljava/util/Map;
    //   35: aload_1
    //   36: aload_2
    //   37: invokeinterface put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   42: pop
    //   43: aload_0
    //   44: monitorexit
    //   45: aload_2
    //   46: areturn
    //   47: astore_1
    //   48: aload_0
    //   49: monitorexit
    //   50: aload_1
    //   51: athrow
    // Exception table:
    //   from	to	target	type
    //   2	16	47	finally
    //   22	43	47	finally }
  
  private ak<a<b>> h() { // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: getfield g : Lcom/facebook/imagepipeline/n/ak;
    //   6: ifnonnull -> 24
    //   9: aload_0
    //   10: aload_0
    //   11: aload_0
    //   12: getfield q : Lcom/facebook/imagepipeline/f/l;
    //   15: invokevirtual i : ()Lcom/facebook/imagepipeline/n/ad;
    //   18: invokespecial e : (Lcom/facebook/imagepipeline/n/ak;)Lcom/facebook/imagepipeline/n/ak;
    //   21: putfield g : Lcom/facebook/imagepipeline/n/ak;
    //   24: aload_0
    //   25: getfield g : Lcom/facebook/imagepipeline/n/ak;
    //   28: astore_1
    //   29: aload_0
    //   30: monitorexit
    //   31: aload_1
    //   32: areturn
    //   33: astore_1
    //   34: aload_0
    //   35: monitorexit
    //   36: aload_1
    //   37: athrow
    // Exception table:
    //   from	to	target	type
    //   2	24	33	finally
    //   24	29	33	finally }
  
  private ak<a<b>> i() { // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: getfield h : Lcom/facebook/imagepipeline/n/ak;
    //   6: ifnonnull -> 48
    //   9: aload_0
    //   10: aload_0
    //   11: aload_0
    //   12: getfield q : Lcom/facebook/imagepipeline/f/l;
    //   15: invokevirtual c : ()Lcom/facebook/imagepipeline/n/x;
    //   18: iconst_2
    //   19: anewarray com/facebook/imagepipeline/n/ax
    //   22: dup
    //   23: iconst_0
    //   24: aload_0
    //   25: getfield q : Lcom/facebook/imagepipeline/f/l;
    //   28: invokevirtual d : ()Lcom/facebook/imagepipeline/n/y;
    //   31: aastore
    //   32: dup
    //   33: iconst_1
    //   34: aload_0
    //   35: getfield q : Lcom/facebook/imagepipeline/f/l;
    //   38: invokevirtual e : ()Lcom/facebook/imagepipeline/n/z;
    //   41: aastore
    //   42: invokespecial a : (Lcom/facebook/imagepipeline/n/ak;[Lcom/facebook/imagepipeline/n/ax;)Lcom/facebook/imagepipeline/n/ak;
    //   45: putfield h : Lcom/facebook/imagepipeline/n/ak;
    //   48: aload_0
    //   49: getfield h : Lcom/facebook/imagepipeline/n/ak;
    //   52: astore_1
    //   53: aload_0
    //   54: monitorexit
    //   55: aload_1
    //   56: areturn
    //   57: astore_1
    //   58: aload_0
    //   59: monitorexit
    //   60: aload_1
    //   61: athrow
    // Exception table:
    //   from	to	target	type
    //   2	48	57	finally
    //   48	53	57	finally }
  
  private ak<a<b>> j() { // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: getfield l : Lcom/facebook/imagepipeline/n/ak;
    //   6: ifnonnull -> 24
    //   9: aload_0
    //   10: aload_0
    //   11: aload_0
    //   12: getfield q : Lcom/facebook/imagepipeline/f/l;
    //   15: invokevirtual g : ()Lcom/facebook/imagepipeline/n/ao;
    //   18: invokespecial a : (Lcom/facebook/imagepipeline/n/ak;)Lcom/facebook/imagepipeline/n/ak;
    //   21: putfield l : Lcom/facebook/imagepipeline/n/ak;
    //   24: aload_0
    //   25: getfield l : Lcom/facebook/imagepipeline/n/ak;
    //   28: astore_1
    //   29: aload_0
    //   30: monitorexit
    //   31: aload_1
    //   32: areturn
    //   33: astore_1
    //   34: aload_0
    //   35: monitorexit
    //   36: aload_1
    //   37: athrow
    // Exception table:
    //   from	to	target	type
    //   2	24	33	finally
    //   24	29	33	finally }
  
  private ak<a<b>> k() { // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: getfield i : Lcom/facebook/imagepipeline/n/ak;
    //   6: ifnonnull -> 24
    //   9: aload_0
    //   10: aload_0
    //   11: aload_0
    //   12: getfield q : Lcom/facebook/imagepipeline/f/l;
    //   15: invokevirtual h : ()Lcom/facebook/imagepipeline/n/ac;
    //   18: invokespecial a : (Lcom/facebook/imagepipeline/n/ak;)Lcom/facebook/imagepipeline/n/ak;
    //   21: putfield i : Lcom/facebook/imagepipeline/n/ak;
    //   24: aload_0
    //   25: getfield i : Lcom/facebook/imagepipeline/n/ak;
    //   28: astore_1
    //   29: aload_0
    //   30: monitorexit
    //   31: aload_1
    //   32: areturn
    //   33: astore_1
    //   34: aload_0
    //   35: monitorexit
    //   36: aload_1
    //   37: athrow
    // Exception table:
    //   from	to	target	type
    //   2	24	33	finally
    //   24	29	33	finally }
  
  private ak<a<b>> l() { // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: getfield j : Lcom/facebook/imagepipeline/n/ak;
    //   6: ifnonnull -> 24
    //   9: aload_0
    //   10: aload_0
    //   11: aload_0
    //   12: getfield q : Lcom/facebook/imagepipeline/f/l;
    //   15: invokevirtual b : ()Lcom/facebook/imagepipeline/n/w;
    //   18: invokespecial a : (Lcom/facebook/imagepipeline/n/ak;)Lcom/facebook/imagepipeline/n/ak;
    //   21: putfield j : Lcom/facebook/imagepipeline/n/ak;
    //   24: aload_0
    //   25: getfield j : Lcom/facebook/imagepipeline/n/ak;
    //   28: astore_1
    //   29: aload_0
    //   30: monitorexit
    //   31: aload_1
    //   32: areturn
    //   33: astore_1
    //   34: aload_0
    //   35: monitorexit
    //   36: aload_1
    //   37: athrow
    // Exception table:
    //   from	to	target	type
    //   2	24	33	finally
    //   24	29	33	finally }
  
  private ak<a<b>> m() { // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: getfield k : Lcom/facebook/imagepipeline/n/ak;
    //   6: ifnonnull -> 80
    //   9: aload_0
    //   10: getfield q : Lcom/facebook/imagepipeline/f/l;
    //   13: invokevirtual a : ()Lcom/facebook/imagepipeline/n/l;
    //   16: astore_2
    //   17: aload_2
    //   18: astore_1
    //   19: getstatic com/facebook/common/l/c.a : Z
    //   22: ifeq -> 49
    //   25: aload_0
    //   26: getfield t : Z
    //   29: ifeq -> 40
    //   32: aload_2
    //   33: astore_1
    //   34: getstatic com/facebook/common/l/c.d : Lcom/facebook/common/l/b;
    //   37: ifnonnull -> 49
    //   40: aload_0
    //   41: getfield q : Lcom/facebook/imagepipeline/f/l;
    //   44: aload_2
    //   45: invokevirtual o : (Lcom/facebook/imagepipeline/n/ak;)Lcom/facebook/imagepipeline/n/az;
    //   48: astore_1
    //   49: aload_0
    //   50: getfield q : Lcom/facebook/imagepipeline/f/l;
    //   53: astore_2
    //   54: aload_1
    //   55: invokestatic a : (Lcom/facebook/imagepipeline/n/ak;)Lcom/facebook/imagepipeline/n/a;
    //   58: astore_1
    //   59: aload_0
    //   60: aload_0
    //   61: aload_0
    //   62: getfield q : Lcom/facebook/imagepipeline/f/l;
    //   65: aload_1
    //   66: iconst_1
    //   67: aload_0
    //   68: getfield w : Z
    //   71: invokevirtual a : (Lcom/facebook/imagepipeline/n/ak;ZZ)Lcom/facebook/imagepipeline/n/ap;
    //   74: invokespecial b : (Lcom/facebook/imagepipeline/n/ak;)Lcom/facebook/imagepipeline/n/ak;
    //   77: putfield k : Lcom/facebook/imagepipeline/n/ak;
    //   80: aload_0
    //   81: getfield k : Lcom/facebook/imagepipeline/n/ak;
    //   84: astore_1
    //   85: aload_0
    //   86: monitorexit
    //   87: aload_1
    //   88: areturn
    //   89: astore_1
    //   90: aload_0
    //   91: monitorexit
    //   92: aload_1
    //   93: athrow
    // Exception table:
    //   from	to	target	type
    //   2	17	89	finally
    //   19	32	89	finally
    //   34	40	89	finally
    //   40	49	89	finally
    //   49	80	89	finally
    //   80	85	89	finally }
  
  public ak<Void> a(b paramb) {
    c(paramb);
    int i1 = paramb.c();
    if (i1 != 0) {
      StringBuilder stringBuilder;
      Uri uri;
      switch (i1) {
        default:
          uri = paramb.b();
          stringBuilder = new StringBuilder();
          stringBuilder.append("Unsupported uri scheme for encoded image fetch! Uri is: ");
          stringBuilder.append(a(uri));
          throw new IllegalArgumentException(stringBuilder.toString());
        case 2:
        case 3:
          break;
      } 
      return e();
    } 
    return c();
  }
  
  public ak<a<b>> b(b paramb) {
    ak ak3 = d(paramb);
    ak ak2 = ak3;
    if (paramb.q() != null)
      ak2 = f(ak3); 
    ak ak1 = ak2;
    if (this.x)
      ak1 = g(ak2); 
    return ak1;
  }
}
