package com.facebook.imagepipeline.n;

import android.content.ContentResolver;
import android.media.ExifInterface;
import android.net.Uri;
import android.util.Pair;
import com.facebook.common.e.a;
import com.facebook.common.g.g;
import com.facebook.common.g.h;
import com.facebook.common.g.i;
import com.facebook.common.h.a;
import com.facebook.common.k.f;
import com.facebook.g.b;
import com.facebook.h.a;
import com.facebook.h.b;
import com.facebook.imagepipeline.e.e;
import com.facebook.imagepipeline.j.d;
import java.io.File;
import java.io.IOException;
import java.util.concurrent.Executor;

public class z extends Object implements ax<d> {
  private final Executor a;
  
  private final h b;
  
  private final ContentResolver c;
  
  public z(Executor paramExecutor, h paramh, ContentResolver paramContentResolver) {
    this.a = paramExecutor;
    this.b = paramh;
    this.c = paramContentResolver;
  }
  
  private int a(ExifInterface paramExifInterface) { return b.a(Integer.parseInt(paramExifInterface.getAttribute("Orientation"))); }
  
  private d a(g paramg, ExifInterface paramExifInterface) {
    byte b1;
    Pair pair = a.a(new i(paramg));
    int j = a(paramExifInterface);
    i = -1;
    if (pair != null) {
      b1 = ((Integer)pair.first).intValue();
    } else {
      b1 = -1;
    } 
    if (pair != null)
      i = ((Integer)pair.second).intValue(); 
    a a1 = a.a(paramg);
    try {
      d = new d(a1);
      a.c(a1);
      d.a(b.a);
      d.c(j);
      d.b(b1);
      return d;
    } finally {
      a.c(a1);
    } 
  }
  
  ExifInterface a(Uri paramUri) {
    str = f.a(this.c, paramUri);
    try {
      if (a(str))
        return new ExifInterface(str); 
    } catch (IOException str) {
    
    } catch (StackOverflowError str) {
      a.c(z.class, "StackOverflowError in ExifInterface constructor");
    } 
    return null;
  }
  
  public void a(k<d> paramk, al paramal) {
    Object object = new Object(this, paramk, paramal.c(), "LocalExifThumbnailProducer", paramal.b(), paramal.a());
    paramal.a(new Object(this, object));
    this.a.execute(object);
  }
  
  public boolean a(e parame) { return ay.a(512, 512, parame); }
  
  boolean a(String paramString) {
    byte b1 = 0;
    if (paramString == null)
      return false; 
    File file = new File(paramString);
    int i = b1;
    if (file.exists()) {
      i = b1;
      if (file.canRead())
        i = 1; 
    } 
    return i;
  }
}
