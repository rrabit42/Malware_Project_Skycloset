package com.facebook.imagepipeline.n;

import android.content.ContentResolver;
import android.database.Cursor;
import android.net.Uri;
import android.provider.ContactsContract;
import com.facebook.common.g.h;
import com.facebook.common.k.f;
import com.facebook.imagepipeline.j.d;
import com.facebook.imagepipeline.o.b;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.concurrent.Executor;

public class x extends aa {
  private static final String[] a = { "_id", "_data" };
  
  private final ContentResolver b;
  
  public x(Executor paramExecutor, h paramh, ContentResolver paramContentResolver) {
    super(paramExecutor, paramh);
    this.b = paramContentResolver;
  }
  
  private static int a(String paramString) { return (paramString == null) ? -1 : (int)(new File(paramString)).length(); }
  
  private d a(Uri paramUri) {
    cursor = this.b.query(paramUri, a, null, null, null);
    if (cursor == null)
      return null; 
    try {
      int i = cursor.getCount();
      if (i == 0)
        return null; 
      cursor.moveToFirst();
      String str = cursor.getString(cursor.getColumnIndex("_data"));
      if (str != null)
        return b(new FileInputStream(str), a(str)); 
      return null;
    } finally {
      cursor.close();
    } 
  }
  
  protected d a(b paramb) {
    Uri uri = paramb.b();
    if (f.e(uri)) {
      StringBuilder stringBuilder;
      if (uri.toString().endsWith("/photo")) {
        stringBuilder = this.b.openInputStream(uri);
      } else {
        if (uri.toString().endsWith("/display_photo"))
          try {
            FileInputStream fileInputStream = this.b.openAssetFileDescriptor(uri, "r").createInputStream();
            return b(fileInputStream, -1);
          } catch (IOException paramb) {
            StringBuilder stringBuilder1 = new StringBuilder();
            stringBuilder1.append("Contact photo does not exist: ");
            stringBuilder1.append(uri);
            throw new IOException(stringBuilder1.toString());
          }  
        stringBuilder = ContactsContract.Contacts.openContactPhotoInputStream(this.b, uri);
        if (stringBuilder == null) {
          stringBuilder = new StringBuilder();
          stringBuilder.append("Contact photo does not exist: ");
          stringBuilder.append(uri);
          throw new IOException(stringBuilder.toString());
        } 
      } 
      return b(stringBuilder, -1);
    } 
    if (f.f(uri)) {
      d d = a(uri);
      if (d != null)
        return d; 
    } 
    return b(this.b.openInputStream(uri), -1);
  }
  
  protected String a() { return "LocalContentUriFetchProducer"; }
}
