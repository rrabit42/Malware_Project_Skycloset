package com.facebook.common.k;

import android.content.ContentResolver;
import android.database.Cursor;
import android.net.Uri;
import android.provider.ContactsContract;
import android.provider.MediaStore;
import java.net.MalformedURLException;
import java.net.URL;

public class f {
  private static final Uri a = Uri.withAppendedPath(ContactsContract.AUTHORITY_URI, "display_photo");
  
  public static Uri a(int paramInt) { return (new Uri.Builder()).scheme("res").path(String.valueOf(paramInt)).build(); }
  
  public static String a(ContentResolver paramContentResolver, Uri paramUri) {
    boolean bool = d(paramUri);
    ContentResolver contentResolver = null;
    String str = null;
    if (bool) {
      try {
        contentResolver1 = paramContentResolver.query(paramUri, null, null, null, null);
        paramContentResolver = str;
        if (contentResolver1 != null) {
          paramContentResolver = str;
          try {
            if (contentResolver1.moveToFirst()) {
              int i = contentResolver1.getColumnIndex("_data");
              paramContentResolver = str;
              if (i != -1)
                cursor1 = contentResolver1.getString(i); 
            } 
          } finally {
            str = null;
            cursor1 = contentResolver1;
          } 
        } 
      } finally {
        paramContentResolver = null;
        if (paramContentResolver != null)
          paramContentResolver.close(); 
      } 
    } else {
      str = contentResolver;
      if (c(paramUri))
        str = paramUri.getPath(); 
    } 
    return str;
  }
  
  public static URL a(Uri paramUri) {
    if (paramUri == null)
      return null; 
    try {
      return new URL(paramUri.toString());
    } catch (MalformedURLException paramUri) {
      throw new RuntimeException(paramUri);
    } 
  }
  
  public static boolean b(Uri paramUri) {
    String str = k(paramUri);
    return ("https".equals(str) || "http".equals(str));
  }
  
  public static boolean c(Uri paramUri) { return "file".equals(k(paramUri)); }
  
  public static boolean d(Uri paramUri) { return "content".equals(k(paramUri)); }
  
  public static boolean e(Uri paramUri) { return (d(paramUri) && "com.android.contacts".equals(paramUri.getAuthority()) && !paramUri.getPath().startsWith(a.getPath())); }
  
  public static boolean f(Uri paramUri) {
    String str = paramUri.toString();
    return (str.startsWith(MediaStore.Images.Media.EXTERNAL_CONTENT_URI.toString()) || str.startsWith(MediaStore.Images.Media.INTERNAL_CONTENT_URI.toString()));
  }
  
  public static boolean g(Uri paramUri) { return "asset".equals(k(paramUri)); }
  
  public static boolean h(Uri paramUri) { return "res".equals(k(paramUri)); }
  
  public static boolean i(Uri paramUri) { return "android.resource".equals(k(paramUri)); }
  
  public static boolean j(Uri paramUri) { return "data".equals(k(paramUri)); }
  
  public static String k(Uri paramUri) { return (paramUri == null) ? null : paramUri.getScheme(); }
}
