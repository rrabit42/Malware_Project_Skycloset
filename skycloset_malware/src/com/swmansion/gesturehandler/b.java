package com.swmansion.gesturehandler;

import android.view.MotionEvent;
import android.view.View;
import java.util.Arrays;

public class b<T extends b> extends Object {
  private static int d = 11;
  
  private static MotionEvent.PointerProperties[] e;
  
  private static MotionEvent.PointerCoords[] f;
  
  int a;
  
  boolean b;
  
  boolean c;
  
  private final int[] g = new int[d];
  
  private int h = 0;
  
  private int i;
  
  private View j;
  
  private int k = 0;
  
  private float l;
  
  private float m;
  
  private boolean n;
  
  private boolean o = true;
  
  private float[] p;
  
  private float q;
  
  private float r;
  
  private float s;
  
  private float t;
  
  private boolean u;
  
  private int v = 0;
  
  private d w;
  
  private i<T> x;
  
  private c y;
  
  static  {
  
  }
  
  private static void a(int paramInt) {
    int i1 = paramInt;
    if (e == null) {
      i1 = d;
      e = new MotionEvent.PointerProperties[i1];
      f = new MotionEvent.PointerCoords[i1];
      i1 = paramInt;
    } 
    while (i1 > 0) {
      MotionEvent.PointerProperties[] arrayOfPointerProperties = e;
      paramInt = i1 - 1;
      if (arrayOfPointerProperties[paramInt] == null) {
        arrayOfPointerProperties[paramInt] = new MotionEvent.PointerProperties();
        f[paramInt] = new MotionEvent.PointerCoords();
        i1--;
      } 
    } 
  }
  
  private static boolean a(float paramFloat) { return Float.isNaN(paramFloat) ^ true; }
  
  private void b(int paramInt) {
    int i1 = this.k;
    if (i1 == paramInt)
      return; 
    this.k = paramInt;
    this.w.a(this, paramInt, i1);
    b(paramInt, i1);
  }
  
  private boolean d(MotionEvent paramMotionEvent) {
    if (paramMotionEvent.getPointerCount() != this.h)
      return true; 
    byte b1 = 0;
    while (true) {
      int[] arrayOfInt = this.g;
      if (b1 < arrayOfInt.length) {
        if (arrayOfInt[b1] != -1 && arrayOfInt[b1] != b1)
          return true; 
        b1++;
        continue;
      } 
      break;
    } 
    return false;
  }
  
  private MotionEvent e(MotionEvent paramMotionEvent) { // Byte code:
    //   0: aload_0
    //   1: aload_1
    //   2: invokespecial d : (Landroid/view/MotionEvent;)Z
    //   5: ifne -> 10
    //   8: aload_1
    //   9: areturn
    //   10: aload_1
    //   11: invokevirtual getActionMasked : ()I
    //   14: istore #4
    //   16: iconst_2
    //   17: istore #5
    //   19: iconst_5
    //   20: istore #7
    //   22: iconst_0
    //   23: istore #8
    //   25: iload #4
    //   27: ifeq -> 136
    //   30: iload #4
    //   32: iconst_5
    //   33: if_icmpne -> 39
    //   36: goto -> 136
    //   39: bipush #6
    //   41: istore #7
    //   43: iload #4
    //   45: iconst_1
    //   46: if_icmpeq -> 69
    //   49: iload #4
    //   51: bipush #6
    //   53: if_icmpne -> 59
    //   56: goto -> 69
    //   59: iload #4
    //   61: istore #5
    //   63: iconst_m1
    //   64: istore #4
    //   66: goto -> 191
    //   69: aload_1
    //   70: invokevirtual getActionIndex : ()I
    //   73: istore #6
    //   75: aload_1
    //   76: iload #6
    //   78: invokevirtual getPointerId : (I)I
    //   81: istore #9
    //   83: iload #6
    //   85: istore #4
    //   87: aload_0
    //   88: getfield g : [I
    //   91: iload #9
    //   93: iaload
    //   94: iconst_m1
    //   95: if_icmpeq -> 191
    //   98: iload #6
    //   100: istore #5
    //   102: iload #7
    //   104: istore #4
    //   106: aload_0
    //   107: getfield h : I
    //   110: iconst_1
    //   111: if_icmpne -> 121
    //   114: iconst_1
    //   115: istore #4
    //   117: iload #6
    //   119: istore #5
    //   121: iload #4
    //   123: istore #6
    //   125: iload #5
    //   127: istore #4
    //   129: iload #6
    //   131: istore #5
    //   133: goto -> 191
    //   136: aload_1
    //   137: invokevirtual getActionIndex : ()I
    //   140: istore #6
    //   142: aload_1
    //   143: iload #6
    //   145: invokevirtual getPointerId : (I)I
    //   148: istore #9
    //   150: iload #6
    //   152: istore #4
    //   154: aload_0
    //   155: getfield g : [I
    //   158: iload #9
    //   160: iaload
    //   161: iconst_m1
    //   162: if_icmpeq -> 191
    //   165: iload #6
    //   167: istore #5
    //   169: iload #7
    //   171: istore #4
    //   173: aload_0
    //   174: getfield h : I
    //   177: iconst_1
    //   178: if_icmpne -> 121
    //   181: iconst_0
    //   182: istore #4
    //   184: iload #6
    //   186: istore #5
    //   188: goto -> 121
    //   191: aload_0
    //   192: getfield h : I
    //   195: invokestatic a : (I)V
    //   198: aload_1
    //   199: invokevirtual getX : ()F
    //   202: fstore_2
    //   203: aload_1
    //   204: invokevirtual getY : ()F
    //   207: fstore_3
    //   208: aload_1
    //   209: aload_1
    //   210: invokevirtual getRawX : ()F
    //   213: aload_1
    //   214: invokevirtual getRawY : ()F
    //   217: invokevirtual setLocation : (FF)V
    //   220: aload_1
    //   221: invokevirtual getPointerCount : ()I
    //   224: istore #10
    //   226: iconst_0
    //   227: istore #7
    //   229: iload #8
    //   231: iload #10
    //   233: if_icmpge -> 347
    //   236: aload_1
    //   237: iload #8
    //   239: invokevirtual getPointerId : (I)I
    //   242: istore #11
    //   244: iload #5
    //   246: istore #6
    //   248: iload #7
    //   250: istore #9
    //   252: aload_0
    //   253: getfield g : [I
    //   256: iload #11
    //   258: iaload
    //   259: iconst_m1
    //   260: if_icmpeq -> 330
    //   263: aload_1
    //   264: iload #8
    //   266: getstatic com/swmansion/gesturehandler/b.e : [Landroid/view/MotionEvent$PointerProperties;
    //   269: iload #7
    //   271: aaload
    //   272: invokevirtual getPointerProperties : (ILandroid/view/MotionEvent$PointerProperties;)V
    //   275: getstatic com/swmansion/gesturehandler/b.e : [Landroid/view/MotionEvent$PointerProperties;
    //   278: iload #7
    //   280: aaload
    //   281: aload_0
    //   282: getfield g : [I
    //   285: iload #11
    //   287: iaload
    //   288: putfield id : I
    //   291: aload_1
    //   292: iload #8
    //   294: getstatic com/swmansion/gesturehandler/b.f : [Landroid/view/MotionEvent$PointerCoords;
    //   297: iload #7
    //   299: aaload
    //   300: invokevirtual getPointerCoords : (ILandroid/view/MotionEvent$PointerCoords;)V
    //   303: iload #5
    //   305: istore #6
    //   307: iload #8
    //   309: iload #4
    //   311: if_icmpne -> 324
    //   314: iload #5
    //   316: iload #7
    //   318: bipush #8
    //   320: ishl
    //   321: ior
    //   322: istore #6
    //   324: iload #7
    //   326: iconst_1
    //   327: iadd
    //   328: istore #9
    //   330: iload #8
    //   332: iconst_1
    //   333: iadd
    //   334: istore #8
    //   336: iload #6
    //   338: istore #5
    //   340: iload #9
    //   342: istore #7
    //   344: goto -> 229
    //   347: aload_1
    //   348: invokevirtual getDownTime : ()J
    //   351: aload_1
    //   352: invokevirtual getEventTime : ()J
    //   355: iload #5
    //   357: iload #7
    //   359: getstatic com/swmansion/gesturehandler/b.e : [Landroid/view/MotionEvent$PointerProperties;
    //   362: getstatic com/swmansion/gesturehandler/b.f : [Landroid/view/MotionEvent$PointerCoords;
    //   365: aload_1
    //   366: invokevirtual getMetaState : ()I
    //   369: aload_1
    //   370: invokevirtual getButtonState : ()I
    //   373: aload_1
    //   374: invokevirtual getXPrecision : ()F
    //   377: aload_1
    //   378: invokevirtual getYPrecision : ()F
    //   381: aload_1
    //   382: invokevirtual getDeviceId : ()I
    //   385: aload_1
    //   386: invokevirtual getEdgeFlags : ()I
    //   389: aload_1
    //   390: invokevirtual getSource : ()I
    //   393: aload_1
    //   394: invokevirtual getFlags : ()I
    //   397: invokestatic obtain : (JJII[Landroid/view/MotionEvent$PointerProperties;[Landroid/view/MotionEvent$PointerCoords;IIFFIIII)Landroid/view/MotionEvent;
    //   400: astore #12
    //   402: aload_1
    //   403: fload_2
    //   404: fload_3
    //   405: invokevirtual setLocation : (FF)V
    //   408: aload #12
    //   410: fload_2
    //   411: fload_3
    //   412: invokevirtual setLocation : (FF)V
    //   415: aload #12
    //   417: areturn }
  
  private int t() {
    byte b1;
    for (b1 = 0; b1 < this.h; b1++) {
      byte b2;
      for (b2 = 0;; b2++) {
        int[] arrayOfInt = this.g;
        if (b2 >= arrayOfInt.length || arrayOfInt[b2] == b1)
          break; 
      } 
      if (b2 == this.g.length)
        return b1; 
    } 
    return b1;
  }
  
  public T a(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4, float paramFloat5, float paramFloat6) {
    if (this.p == null)
      this.p = new float[6]; 
    float[] arrayOfFloat = this.p;
    arrayOfFloat[0] = paramFloat1;
    arrayOfFloat[1] = paramFloat2;
    arrayOfFloat[2] = paramFloat3;
    arrayOfFloat[3] = paramFloat4;
    arrayOfFloat[4] = paramFloat5;
    arrayOfFloat[5] = paramFloat6;
    if (!a(paramFloat5) || !a(paramFloat1) || !a(paramFloat3)) {
      if (!a(paramFloat5) || a(paramFloat1) || a(paramFloat3)) {
        if (!a(paramFloat6) || !a(paramFloat4) || !a(paramFloat2)) {
          if (a(paramFloat6) && !a(paramFloat4)) {
            if (a(paramFloat2))
              return (T)this; 
            throw new IllegalArgumentException("When height is set one of top or bottom pads need to be defined");
          } 
          return (T)this;
        } 
        throw new IllegalArgumentException("Cannot have all of top, bottom and height defined");
      } 
      throw new IllegalArgumentException("When width is set one of left or right pads need to be defined");
    } 
    throw new IllegalArgumentException("Cannot have all of left, right and width defined");
  }
  
  public T a(c paramc) {
    this.y = paramc;
    return (T)this;
  }
  
  public b a(i<T> parami) {
    this.x = parami;
    return this;
  }
  
  public T a(boolean paramBoolean) {
    this.u = paramBoolean;
    return (T)this;
  }
  
  protected void a() {}
  
  void a(int paramInt1, int paramInt2) {
    i i1 = this.x;
    if (i1 != null)
      i1.a(this, paramInt1, paramInt2); 
  }
  
  protected void a(MotionEvent paramMotionEvent) { b(1); }
  
  public final void a(View paramView, d paramd) {
    if (this.j == null && this.w == null) {
      Arrays.fill(this.g, -1);
      this.h = 0;
      this.k = 0;
      this.j = paramView;
      this.w = paramd;
      return;
    } 
    throw new IllegalStateException("Already prepared or hasn't been reset");
  }
  
  public boolean a(View paramView, float paramFloat1, float paramFloat2) {
    float f7;
    float f6;
    float f2;
    float f3 = paramView.getWidth();
    float f4 = paramView.getHeight();
    float[] arrayOfFloat = this.p;
    float f5 = 0.0F;
    float f1 = 0.0F;
    if (arrayOfFloat != null) {
      f6 = arrayOfFloat[0];
      f5 = arrayOfFloat[1];
      f7 = arrayOfFloat[2];
      float f8 = arrayOfFloat[3];
      if (a(f6)) {
        f2 = 0.0F - f6;
      } else {
        f2 = 0.0F;
      } 
      if (a(f5))
        f1 = 0.0F - f8; 
      f5 = f3;
      if (a(f7))
        f5 = f3 + f7; 
      f3 = f4;
      if (a(f8))
        f3 = f4 + f8; 
      arrayOfFloat = this.p;
      float f10 = arrayOfFloat[4];
      float f9 = arrayOfFloat[5];
      f4 = f5;
      f8 = f2;
      if (a(f10))
        if (!a(f6)) {
          f8 = f5 - f10;
          f4 = f5;
        } else {
          f4 = f5;
          f8 = f2;
          if (!a(f7)) {
            f4 = f10 + f2;
            f8 = f2;
          } 
        }  
      f7 = f4;
      f5 = f1;
      f6 = f8;
      f2 = f3;
      if (a(f9))
        if (!a(f1)) {
          f5 = f3 - f9;
          f7 = f4;
          f6 = f8;
          f2 = f3;
        } else {
          f7 = f4;
          f5 = f1;
          f6 = f8;
          f2 = f3;
          if (!a(f3)) {
            f2 = f1 + f9;
            f7 = f4;
            f5 = f1;
            f6 = f8;
          } 
        }  
    } else {
      f6 = 0.0F;
      f2 = f4;
      f7 = f3;
    } 
    return (paramFloat1 >= f6 && paramFloat1 <= f7 && paramFloat2 >= f5 && paramFloat2 <= f2);
  }
  
  public boolean a(b paramb) {
    byte b1 = 0;
    while (true) {
      int[] arrayOfInt = this.g;
      if (b1 < arrayOfInt.length) {
        if (arrayOfInt[b1] != -1 && paramb.g[b1] != -1)
          return true; 
        b1++;
        continue;
      } 
      break;
    } 
    return false;
  }
  
  public T b(boolean paramBoolean) {
    if (this.j != null)
      j(); 
    this.o = paramBoolean;
    return (T)this;
  }
  
  protected void b() {}
  
  protected void b(int paramInt1, int paramInt2) {}
  
  void b(MotionEvent paramMotionEvent) {
    i i1 = this.x;
    if (i1 != null)
      i1.a(this, paramMotionEvent); 
  }
  
  public boolean b(b paramb) {
    if (paramb != this) {
      c c1 = this.y;
      if (c1 != null)
        return c1.b(this, paramb); 
    } 
    return false;
  }
  
  public void c(int paramInt) { this.i = paramInt; }
  
  public final void c(MotionEvent paramMotionEvent) {
    if (this.o) {
      int i1 = this.k;
      if (i1 != 3 && i1 != 1 && i1 != 5) {
        if (this.h < 1)
          return; 
        MotionEvent motionEvent = e(paramMotionEvent);
        this.l = motionEvent.getX();
        this.m = motionEvent.getY();
        this.v = motionEvent.getPointerCount();
        this.n = a(this.j, this.l, this.m);
        if (this.u && !this.n) {
          i1 = this.k;
          if (i1 == 4) {
            j();
            return;
          } 
          if (i1 == 2)
            k(); 
          return;
        } 
        this.q = f.a(motionEvent, true);
        this.r = f.b(motionEvent, true);
        this.s = motionEvent.getRawX() - motionEvent.getX();
        this.t = motionEvent.getRawY() - motionEvent.getY();
        a(motionEvent);
        if (motionEvent != paramMotionEvent)
          motionEvent.recycle(); 
      } 
    } 
  }
  
  public boolean c() { return this.o; }
  
  public boolean c(b paramb) {
    if (paramb != this) {
      c c1 = this.y;
      if (c1 != null)
        return c1.a(this, paramb); 
    } 
    return false;
  }
  
  public int d() { return this.i; }
  
  public void d(int paramInt) {
    int[] arrayOfInt = this.g;
    if (arrayOfInt[paramInt] == -1) {
      arrayOfInt[paramInt] = t();
      this.h++;
    } 
  }
  
  public boolean d(b paramb) {
    if (paramb == this)
      return true; 
    c c1 = this.y;
    return (c1 != null) ? c1.c(this, paramb) : 0;
  }
  
  public View e() { return this.j; }
  
  public void e(int paramInt) {
    int[] arrayOfInt = this.g;
    if (arrayOfInt[paramInt] != -1) {
      arrayOfInt[paramInt] = -1;
      this.h--;
    } 
  }
  
  public boolean e(b paramb) {
    if (paramb == this)
      return false; 
    c c1 = this.y;
    return (c1 != null) ? c1.d(this, paramb) : 0;
  }
  
  public int f() { return this.v; }
  
  public boolean g() { return this.n; }
  
  public boolean h() {
    if (this.o) {
      int i1 = this.k;
      if (i1 != 1 && i1 != 3 && i1 != 5 && this.h > 0)
        return true; 
    } 
    return false;
  }
  
  public int i() { return this.k; }
  
  public final void j() {
    int i1 = this.k;
    if (i1 == 4 || i1 == 0 || i1 == 2) {
      a();
      b(3);
    } 
  }
  
  public final void k() {
    int i1 = this.k;
    if (i1 == 4 || i1 == 0 || i1 == 2)
      b(1); 
  }
  
  public final void l() {
    int i1 = this.k;
    if (i1 == 0 || i1 == 2)
      b(4); 
  }
  
  public final void m() {
    if (this.k == 0)
      b(2); 
  }
  
  public final void n() {
    int i1 = this.k;
    if (i1 == 2 || i1 == 4)
      b(5); 
  }
  
  public final void o() {
    this.j = null;
    this.w = null;
    Arrays.fill(this.g, -1);
    this.h = 0;
    b();
  }
  
  public float p() { return this.q; }
  
  public float q() { return this.r; }
  
  public float r() { return this.q - this.s; }
  
  public float s() { return this.r - this.t; }
  
  public String toString() {
    String str = this.j;
    if (str == null) {
      str = null;
    } else {
      str = str.getClass().getSimpleName();
    } 
    StringBuilder stringBuilder = new StringBuilder();
    stringBuilder.append(getClass().getSimpleName());
    stringBuilder.append("@[");
    stringBuilder.append(this.i);
    stringBuilder.append("]:");
    stringBuilder.append(str);
    return stringBuilder.toString();
  }
}
