package com.swmansion.gesturehandler;

import android.graphics.Matrix;
import android.graphics.PointF;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewParent;
import java.util.Arrays;
import java.util.Comparator;

public class d {
  private static final PointF a = new PointF();
  
  private static final float[] b = new float[2];
  
  private static final Matrix c = new Matrix();
  
  private static final float[] d = new float[2];
  
  private static final Comparator<b> e = new Object();
  
  private final ViewGroup f;
  
  private final e g;
  
  private final p h;
  
  private final b[] i = new b[20];
  
  private final b[] j = new b[20];
  
  private final b[] k = new b[20];
  
  private final b[] l = new b[20];
  
  private int m = 0;
  
  private int n = 0;
  
  private boolean o = false;
  
  private int p = 0;
  
  private boolean q = false;
  
  private int r = 0;
  
  private float s = 0.0F;
  
  public d(ViewGroup paramViewGroup, e parame, p paramp) {
    this.f = paramViewGroup;
    this.g = parame;
    this.h = paramp;
  }
  
  private void a() {
    if (this.o || this.p != 0) {
      this.q = true;
      return;
    } 
    b();
  }
  
  private static void a(float paramFloat1, float paramFloat2, ViewGroup paramViewGroup, View paramView, PointF paramPointF) {
    float f1 = paramFloat1 + paramViewGroup.getScrollX() - paramView.getLeft();
    float f2 = paramFloat2 + paramViewGroup.getScrollY() - paramView.getTop();
    Matrix matrix = paramView.getMatrix();
    paramFloat2 = f1;
    paramFloat1 = f2;
    if (!matrix.isIdentity()) {
      float[] arrayOfFloat = b;
      arrayOfFloat[0] = f1;
      arrayOfFloat[1] = f2;
      Matrix matrix1 = c;
      matrix.invert(matrix1);
      matrix1.mapPoints(arrayOfFloat);
      paramFloat2 = arrayOfFloat[0];
      paramFloat1 = arrayOfFloat[1];
    } 
    paramPointF.set(paramFloat2, paramFloat1);
  }
  
  private void a(View paramView, MotionEvent paramMotionEvent, float[] paramArrayOfFloat) {
    if (paramView == this.f) {
      paramArrayOfFloat[0] = paramMotionEvent.getX();
      paramArrayOfFloat[1] = paramMotionEvent.getY();
      return;
    } 
    if (paramView != null && paramView.getParent() instanceof ViewGroup) {
      ViewGroup viewGroup = (ViewGroup)paramView.getParent();
      a(viewGroup, paramMotionEvent, paramArrayOfFloat);
      PointF pointF = a;
      a(paramArrayOfFloat[0], paramArrayOfFloat[1], viewGroup, paramView, pointF);
      paramArrayOfFloat[0] = pointF.x;
      paramArrayOfFloat[1] = pointF.y;
      return;
    } 
    throw new IllegalArgumentException("Parent is null? View is no longer in the tree");
  }
  
  private void a(b paramb, MotionEvent paramMotionEvent) {
    if (!a(paramb.e())) {
      paramb.j();
      return;
    } 
    if (!paramb.h())
      return; 
    int i1 = paramMotionEvent.getActionMasked();
    if (paramb.c && i1 == 2)
      return; 
    float[] arrayOfFloat = d;
    a(paramb.e(), paramMotionEvent, arrayOfFloat);
    float f1 = paramMotionEvent.getX();
    float f2 = paramMotionEvent.getY();
    paramMotionEvent.setLocation(arrayOfFloat[0], arrayOfFloat[1]);
    paramb.c(paramMotionEvent);
    if (paramb.b)
      paramb.b(paramMotionEvent); 
    paramMotionEvent.setLocation(f1, f2);
    if (i1 == 1 || i1 == 6)
      paramb.e(paramMotionEvent.getPointerId(paramMotionEvent.getActionIndex())); 
  }
  
  private void a(b paramb, View paramView) {
    int i1;
    byte b1 = 0;
    while (true) {
      i1 = this.m;
      if (b1 < i1) {
        if (this.i[b1] == paramb)
          return; 
        b1++;
        continue;
      } 
      break;
    } 
    b[] arrayOfb = this.i;
    if (i1 < arrayOfb.length) {
      this.m = i1 + 1;
      arrayOfb[i1] = paramb;
      paramb.b = false;
      paramb.c = false;
      paramb.a = Integer.MAX_VALUE;
      paramb.a(paramView, this);
      return;
    } 
    throw new IllegalStateException("Too many recognizers");
  }
  
  private static boolean a(float paramFloat1, float paramFloat2, View paramView) { return (paramFloat1 >= 0.0F && paramFloat1 <= paramView.getWidth() && paramFloat2 >= 0.0F && paramFloat2 < paramView.getHeight()); }
  
  private static boolean a(int paramInt) {
    byte b1 = 1;
    int i1 = b1;
    if (paramInt != 3) {
      i1 = b1;
      if (paramInt != 1) {
        if (paramInt == 5)
          return true; 
        i1 = 0;
      } 
    } 
    return i1;
  }
  
  private boolean a(View paramView) {
    boolean bool = false;
    if (paramView == null)
      return false; 
    if (paramView == this.f)
      return true; 
    ViewParent viewParent;
    for (viewParent = paramView.getParent(); viewParent != null && viewParent != this.f; viewParent = viewParent.getParent());
    if (viewParent == this.f)
      bool = true; 
    return bool;
  }
  
  private static boolean a(View paramView, float[] paramArrayOfFloat) {
    boolean bool1;
    boolean bool = paramView instanceof ViewGroup;
    boolean bool2 = false;
    if (!bool || paramView.getBackground() != null) {
      bool1 = true;
    } else {
      bool1 = false;
    } 
    bool = bool2;
    if (bool1) {
      bool = bool2;
      if (a(paramArrayOfFloat[0], paramArrayOfFloat[1], paramView))
        bool = true; 
    } 
    return bool;
  }
  
  private boolean a(View paramView, float[] paramArrayOfFloat, int paramInt) { throw new RuntimeException("d2j fail translate: java.lang.RuntimeException: can not merge I and Z\n\tat com.googlecode.dex2jar.ir.TypeClass.merge(TypeClass.java:100)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeRef.updateTypeClass(TypeTransformer.java:174)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.copyTypes(TypeTransformer.java:296)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.fixTypes(TypeTransformer.java:226)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.analyze(TypeTransformer.java:207)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer.transform(TypeTransformer.java:44)\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:162)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\n"); }
  
  private boolean a(ViewGroup paramViewGroup, float[] paramArrayOfFloat, int paramInt) {
    int i1;
    for (i1 = paramViewGroup.getChildCount() - 1; i1 >= 0; i1--) {
      View view = this.h.a(paramViewGroup, i1);
      if (b(view)) {
        boolean bool;
        PointF pointF = a;
        a(paramArrayOfFloat[0], paramArrayOfFloat[1], paramViewGroup, view, pointF);
        float f1 = paramArrayOfFloat[0];
        float f2 = paramArrayOfFloat[1];
        paramArrayOfFloat[0] = pointF.x;
        paramArrayOfFloat[1] = pointF.y;
        if (!c(view) || a(paramArrayOfFloat[0], paramArrayOfFloat[1], view)) {
          bool = b(view, paramArrayOfFloat, paramInt);
        } else {
          bool = false;
        } 
        paramArrayOfFloat[0] = f1;
        paramArrayOfFloat[1] = f2;
        if (bool)
          return true; 
      } 
    } 
    return false;
  }
  
  private boolean a(b paramb) {
    for (byte b1 = 0; b1 < this.m; b1++) {
      b b2 = this.i[b1];
      if (!a(b2.i()) && a(paramb, b2))
        return true; 
    } 
    return false;
  }
  
  private static boolean a(b paramb1, b paramb2) { return (paramb1 != paramb2 && (paramb1.c(paramb2) || paramb2.b(paramb1))); }
  
  private void b() {
    int i1 = this.m - 1;
    int i2;
    for (i2 = 0; i1 >= 0; i2 = b1) {
      b b2 = this.i[i1];
      byte b1 = i2;
      if (a(b2.i())) {
        b1 = i2;
        if (!b2.c) {
          this.i[i1] = null;
          b2.o();
          b2.b = false;
          b2.c = false;
          b2.a = Integer.MAX_VALUE;
          b1 = 1;
        } 
      } 
      i1--;
    } 
    if (i2 != 0) {
      i1 = 0;
      for (i2 = i1; i1 < this.m; i2 = i3) {
        b[] arrayOfb = this.i;
        int i3 = i2;
        if (arrayOfb[i1] != null) {
          arrayOfb[i2] = arrayOfb[i1];
          i3 = i2 + 1;
        } 
        i1++;
      } 
      this.m = i2;
    } 
    this.q = false;
  }
  
  private void b(b paramb) {
    if (a(paramb)) {
      d(paramb);
      return;
    } 
    c(paramb);
    paramb.c = false;
  }
  
  private boolean b(View paramView) { return (paramView.getVisibility() == 0 && paramView.getAlpha() >= this.s); }
  
  private boolean b(View paramView, float[] paramArrayOfFloat, int paramInt) {
    l l1 = this.h.a(paramView);
    l l2 = l.a;
    boolean bool = false;
    null = false;
    if (l1 == l2)
      return false; 
    if (l1 == l.c) {
      if (a(paramView, paramArrayOfFloat, paramInt) || a(paramView, paramArrayOfFloat))
        null = true; 
      return null;
    } 
    if (l1 == l.b)
      return (paramView instanceof ViewGroup) ? a((ViewGroup)paramView, paramArrayOfFloat, paramInt) : 0; 
    if (l1 == l.d) {
      if (paramView instanceof ViewGroup) {
        null = a((ViewGroup)paramView, paramArrayOfFloat, paramInt);
      } else {
        null = false;
      } 
      if (!a(paramView, paramArrayOfFloat, paramInt) && !null) {
        null = bool;
        return a(paramView, paramArrayOfFloat) ? true : null;
      } 
    } else {
      StringBuilder stringBuilder = new StringBuilder();
      stringBuilder.append("Unknown pointer event type: ");
      stringBuilder.append(l1.toString());
      throw new IllegalArgumentException(stringBuilder.toString());
    } 
    return true;
  }
  
  private static boolean b(b paramb1, b paramb2) { return (paramb1 == paramb2 || paramb1.d(paramb2) || paramb2.d(paramb1)); }
  
  private void c() {
    byte b1 = 0;
    byte b2;
    for (b2 = 0; b1 < this.n; b2 = b3) {
      byte b3 = b2;
      if ((this.j[b1]).c) {
        b[] arrayOfb = this.j;
        arrayOfb[b2] = arrayOfb[b1];
        b3 = b2 + true;
      } 
      b1++;
    } 
    this.n = b2;
  }
  
  private void c(MotionEvent paramMotionEvent) {
    int i1 = paramMotionEvent.getActionIndex();
    int i2 = paramMotionEvent.getPointerId(i1);
    d[0] = paramMotionEvent.getX(i1);
    d[1] = paramMotionEvent.getY(i1);
    b(this.f, d, i2);
    a(this.f, d, i2);
  }
  
  private void c(b paramb) {
    int i3 = paramb.i();
    paramb.c = false;
    paramb.b = true;
    int i1 = this.r;
    this.r = i1 + 1;
    paramb.a = i1;
    i1 = 0;
    int i2;
    for (i2 = i1; i1 < this.m; i2 = i4) {
      b b1 = this.i[i1];
      int i4 = i2;
      if (c(b1, paramb)) {
        this.l[i2] = b1;
        i4 = i2 + 1;
      } 
      i1++;
    } 
    for (i1 = i2 - 1; i1 >= 0; i1--)
      this.l[i1].j(); 
    for (i1 = this.n - 1; i1 >= 0; i1--) {
      b b1 = this.j[i1];
      if (c(b1, paramb)) {
        b1.j();
        b1.c = false;
      } 
    } 
    c();
    paramb.a(4, 2);
    if (i3 != 4) {
      paramb.a(5, 4);
      if (i3 != 5)
        paramb.a(0, 5); 
    } 
  }
  
  private boolean c(View paramView) { return (!(paramView instanceof ViewGroup) || this.h.a((ViewGroup)paramView)); }
  
  private static boolean c(b paramb1, b paramb2) { return !paramb1.a(paramb2) ? false : (b(paramb1, paramb2) ? false : ((paramb1 != paramb2 && (paramb1.c || paramb1.i() == 4)) ? paramb1.e(paramb2) : 1)); }
  
  private void d() {
    int i1;
    for (i1 = this.n - 1; i1 >= 0; i1--)
      this.j[i1].j(); 
    int i2 = this.m;
    for (i1 = 0; i1 < i2; i1++)
      this.k[i1] = this.i[i1]; 
    for (i1 = i2 - 1; i1 >= 0; i1--)
      this.k[i1].j(); 
  }
  
  private void d(b paramb) {
    int i2;
    int i1 = 0;
    while (true) {
      i2 = this.n;
      if (i1 < i2) {
        if (this.j[i1] == paramb)
          return; 
        i1++;
        continue;
      } 
      break;
    } 
    b[] arrayOfb = this.j;
    if (i2 < arrayOfb.length) {
      this.n = i2 + 1;
      arrayOfb[i2] = paramb;
      paramb.c = true;
      i1 = this.r;
      this.r = i1 + 1;
      paramb.a = i1;
      return;
    } 
    throw new IllegalStateException("Too many recognizers");
  }
  
  public void a(float paramFloat) { this.s = paramFloat; }
  
  void a(b paramb, int paramInt1, int paramInt2) {
    this.p++;
    if (a(paramInt1)) {
      byte b1;
      for (b1 = 0; b1 < this.n; b1++) {
        b b2 = this.j[b1];
        if (a(b2, paramb))
          if (paramInt1 == 5) {
            b2.j();
            b2.c = false;
          } else {
            b(b2);
          }  
      } 
      c();
    } 
    if (paramInt1 == 4) {
      b(paramb);
    } else if ((paramInt2 != 4 && paramInt2 != 5) || paramb.b) {
      paramb.a(paramInt1, paramInt2);
    } 
    this.p--;
    a();
  }
  
  public boolean a(MotionEvent paramMotionEvent) {
    this.o = true;
    int i1 = paramMotionEvent.getActionMasked();
    if (i1 == 0 || i1 == 5) {
      c(paramMotionEvent);
    } else if (i1 == 3) {
      d();
    } 
    b(paramMotionEvent);
    this.o = false;
    if (this.q && this.p == 0)
      b(); 
    return true;
  }
  
  public void b(MotionEvent paramMotionEvent) {
    int i1 = this.m;
    b[] arrayOfb1 = this.i;
    b[] arrayOfb2 = this.k;
    byte b1 = 0;
    System.arraycopy(arrayOfb1, 0, arrayOfb2, 0, i1);
    Arrays.sort(this.k, 0, i1, e);
    while (b1 < i1) {
      a(this.k[b1], paramMotionEvent);
      b1++;
    } 
  }
}
