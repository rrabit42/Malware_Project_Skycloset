package com.google.android.gms.common.internal;

import android.accounts.Account;
import android.content.Context;
import android.os.IInterface;
import android.os.Looper;
import com.google.android.gms.common.api.Scope;
import com.google.android.gms.common.api.a;
import com.google.android.gms.common.api.f;
import com.google.android.gms.common.c;
import com.google.android.gms.common.g;
import java.util.Iterator;
import java.util.Set;

public abstract class b<T extends IInterface> extends al<T> implements a.f {
  private final ax d;
  
  private final Set<Scope> e;
  
  private final Account f;
  
  protected b(Context paramContext, Looper paramLooper, int paramInt, ax paramax, f.a parama, f.b paramb) { this(paramContext, paramLooper, e.a(paramContext), c.a(), paramInt, paramax, (f.a)af.a(parama), (f.b)af.a(paramb)); }
  
  private b(Context paramContext, Looper paramLooper, e parame, c paramc, int paramInt, ax paramax, f.a parama, f.b paramb) {
    super(paramContext, paramLooper, parame, paramc, paramInt, c1, d1, paramax.f());
    this.d = paramax;
    this.f = paramax.a();
    Set set1 = paramax.d();
    Set set2 = a(set1);
    Iterator iterator = set2.iterator();
    while (iterator.hasNext()) {
      if (set1.contains((Scope)iterator.next()))
        continue; 
      throw new IllegalStateException("Expanding scopes is not permitted, use implied scopes instead");
    } 
    this.e = set2;
  }
  
  protected Set<Scope> a(Set<Scope> paramSet) { return paramSet; }
  
  public final Account b_() { return this.f; }
  
  protected final Set<Scope> g() { return this.e; }
  
  public g[] h() { return new g[0]; }
}
