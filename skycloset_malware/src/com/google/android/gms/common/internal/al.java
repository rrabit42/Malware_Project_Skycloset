package com.google.android.gms.common.internal;

import android.accounts.Account;
import android.content.Context;
import android.os.Bundle;
import android.os.DeadObjectException;
import android.os.Handler;
import android.os.IBinder;
import android.os.IInterface;
import android.os.Looper;
import android.os.RemoteException;
import android.text.TextUtils;
import android.util.Log;
import com.google.android.gms.common.a;
import com.google.android.gms.common.api.Scope;
import com.google.android.gms.common.g;
import com.google.android.gms.common.i;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Set;
import java.util.concurrent.atomic.AtomicInteger;

public abstract class al<T extends IInterface> extends Object {
  private static String[] A = { "service_esmobile", "service_googleme" };
  
  final Handler a;
  
  protected ar b;
  
  protected AtomicInteger c = new AtomicInteger(0);
  
  private int d;
  
  private long e;
  
  private long f;
  
  private int g;
  
  private long h;
  
  private j i;
  
  private final Context j;
  
  private final Looper k;
  
  private final e l;
  
  private final i m;
  
  private final Object n = new Object();
  
  private final Object o = new Object();
  
  private s p;
  
  private T q;
  
  private final ArrayList<aq<?>> r = new ArrayList();
  
  private at s;
  
  private int t = 1;
  
  private final an u;
  
  private final ao v;
  
  private final int w;
  
  private final String x;
  
  private a y = null;
  
  private boolean z = false;
  
  protected al(Context paramContext, Looper paramLooper, e parame, i parami, int paramInt, an paraman, ao paramao, String paramString) {
    this.j = (Context)af.a(paramContext, "Context must not be null");
    this.k = (Looper)af.a(paramLooper, "Looper must not be null");
    this.l = (e)af.a(parame, "Supervisor must not be null");
    this.m = (i)af.a(parami, "API availability must not be null");
    this.a = new ap(this, paramLooper);
    this.w = paramInt;
    this.u = paraman;
    this.v = paramao;
    this.x = paramString;
  }
  
  private final void a(int paramInt, T paramT) {
    boolean bool2;
    boolean bool1;
    boolean bool = true;
    if (paramInt == 4) {
      bool1 = true;
    } else {
      bool1 = false;
    } 
    if (paramT != null) {
      bool2 = true;
    } else {
      bool2 = false;
    } 
    if (bool1 != bool2)
      bool = false; 
    af.b(bool);
    synchronized (this.n) {
      String str3;
      at at1;
      String str2;
      String str1;
      this.t = paramInt;
      this.q = paramT;
      switch (paramInt) {
        case 4:
          a(paramT);
          break;
        case 2:
        case 3:
          if (this.s != null && this.i != null) {
            paramT = (T)this.i.a();
            String str;
            StringBuilder stringBuilder = new StringBuilder((str = this.i.b()).valueOf(paramT).length() + 70 + String.valueOf(str).length());
            stringBuilder.append("Calling connect() while still connected, missing disconnect() for ");
            stringBuilder.append(paramT);
            stringBuilder.append(" on ");
            stringBuilder.append(str);
            Log.e("GmsClient", stringBuilder.toString());
            this.l.a(this.i.a(), this.i.b(), this.i.c(), this.s, k());
            this.c.incrementAndGet();
          } 
          this.s = new at(this, this.c.get());
          this.i = new j(l(), i(), false, 129);
          paramT = (T)this.l;
          str1 = this.i.a();
          str2 = this.i.b();
          paramInt = this.i.c();
          at1 = this.s;
          str3 = k();
          if (!paramT.a(new f(str1, str2, paramInt), at1, str3)) {
            paramT = (T)this.i.a();
            StringBuilder stringBuilder = new StringBuilder((str1 = this.i.b()).valueOf(paramT).length() + 34 + String.valueOf(str1).length());
            stringBuilder.append("unable to connect to service: ");
            stringBuilder.append(paramT);
            stringBuilder.append(" on ");
            stringBuilder.append(str1);
            Log.e("GmsClient", stringBuilder.toString());
            a(16, null, this.c.get());
          } 
          break;
        case 1:
          if (this.s != null) {
            this.l.a(i(), l(), 129, this.s, k());
            this.s = null;
          } 
          break;
      } 
      return;
    } 
  }
  
  private final boolean a(int paramInt1, int paramInt2, T paramT) {
    synchronized (this.n) {
      if (this.t != paramInt1)
        return false; 
      a(paramInt2, paramT);
      return true;
    } 
  }
  
  private final void c(int paramInt) {
    if (s()) {
      paramInt = 5;
      this.z = true;
    } else {
      paramInt = 4;
    } 
    Handler handler = this.a;
    handler.sendMessage(handler.obtainMessage(paramInt, this.c.get(), 16));
  }
  
  private final String k() {
    String str2 = this.x;
    String str1 = str2;
    if (str2 == null)
      str1 = this.j.getClass().getName(); 
    return str1;
  }
  
  private final boolean s() {
    synchronized (this.n) {
      if (this.t == 3)
        return true; 
    } 
    boolean bool = false;
    /* monitor exit ClassFileLocalVariableReferenceExpression{type=ObjectType{java/lang/Object}, name=SYNTHETIC_LOCAL_VARIABLE_2} */
    return bool;
  }
  
  private final boolean t() {
    if (this.z)
      return false; 
    if (TextUtils.isEmpty(j()))
      return false; 
    if (TextUtils.isEmpty(null))
      return false; 
    try {
      Class.forName(j());
      return true;
    } catch (ClassNotFoundException classNotFoundException) {
      return false;
    } 
  }
  
  protected abstract T a(IBinder paramIBinder);
  
  public void a() {
    this.c.incrementAndGet();
    synchronized (this.r) {
      int i1 = this.r.size();
      for (byte b1 = 0; b1 < i1; b1++)
        ((aq)this.r.get(b1)).d(); 
      this.r.clear();
      synchronized (this.o) {
        this.p = null;
        a(1, null);
        return;
      } 
    } 
  }
  
  protected final void a(int paramInt) {
    this.d = paramInt;
    this.e = System.currentTimeMillis();
  }
  
  protected final void a(int paramInt1, Bundle paramBundle, int paramInt2) {
    Handler handler = this.a;
    handler.sendMessage(handler.obtainMessage(7, paramInt2, -1, new aw(this, paramInt1, null)));
  }
  
  protected void a(int paramInt1, IBinder paramIBinder, Bundle paramBundle, int paramInt2) {
    Handler handler = this.a;
    handler.sendMessage(handler.obtainMessage(1, paramInt2, -1, new av(this, paramInt1, paramIBinder, paramBundle)));
  }
  
  protected void a(T paramT) { this.f = System.currentTimeMillis(); }
  
  protected void a(a parama) {
    this.g = parama.c();
    this.h = System.currentTimeMillis();
  }
  
  public void a(ar paramar) {
    this.b = (ar)af.a(paramar, "Connection progress callbacks cannot be null.");
    a(2, null);
  }
  
  public final void a(k paramk, Set<Scope> paramSet) {
    Bundle bundle = n();
    be be = new be(this.w);
    be.a = this.j.getPackageName();
    be.d = bundle;
    if (paramSet != null)
      be.c = (Scope[])paramSet.toArray(new Scope[paramSet.size()]); 
    if (d()) {
      Account account;
      if (b_() != null) {
        account = b_();
      } else {
        account = new Account("<<default account>>", "com.google");
      } 
      be.e = account;
      if (paramk != null)
        be.b = paramk.asBinder(); 
    } else if (r()) {
      be.e = b_();
    } 
    be.f = h();
    try {
      synchronized (this.o) {
        if (this.p != null) {
          this.p.a(new as(this, this.c.get()), be);
        } else {
          Log.w("GmsClient", "mServiceBroker is null, client disconnected");
        } 
        return;
      } 
    } catch (DeadObjectException paramk) {
      Log.w("GmsClient", "IGmsServiceBroker.getService failed", paramk);
      b(1);
      return;
    } catch (SecurityException paramk) {
      throw paramk;
    } catch (RemoteException paramk) {
      Log.w("GmsClient", "IGmsServiceBroker.getService failed", paramk);
      a(8, null, null, this.c.get());
      return;
    } catch (RuntimeException paramk) {
      Log.w("GmsClient", "IGmsServiceBroker.getService failed", paramk);
      a(8, null, null, this.c.get());
      return;
    } 
  }
  
  public final void b(int paramInt) {
    Handler handler = this.a;
    handler.sendMessage(handler.obtainMessage(6, this.c.get(), paramInt));
  }
  
  public final boolean b() {
    synchronized (this.n) {
      if (this.t == 4)
        return true; 
    } 
    boolean bool = false;
    /* monitor exit ClassFileLocalVariableReferenceExpression{type=ObjectType{java/lang/Object}, name=SYNTHETIC_LOCAL_VARIABLE_2} */
    return bool;
  }
  
  public Account b_() { return null; }
  
  public final boolean c() {
    synchronized (this.n) {
      if (this.t == 2 || this.t == 3)
        return true; 
    } 
    boolean bool = false;
    /* monitor exit ClassFileLocalVariableReferenceExpression{type=ObjectType{java/lang/Object}, name=SYNTHETIC_LOCAL_VARIABLE_2} */
    return bool;
  }
  
  public boolean d() { return false; }
  
  public boolean e() { return true; }
  
  protected Set<Scope> g() { return Collections.EMPTY_SET; }
  
  public g[] h() { return new g[0]; }
  
  protected abstract String i();
  
  protected abstract String j();
  
  protected String l() { return "com.google.android.gms"; }
  
  public final Context m() { return this.j; }
  
  protected Bundle n() { return new Bundle(); }
  
  protected final void o() {
    if (b())
      return; 
    throw new IllegalStateException("Not connected. Call connect() and wait for onConnected() to be called.");
  }
  
  public Bundle p() { return null; }
  
  public final T q() {
    synchronized (this.n) {
      if (this.t != 5) {
        o();
        if (this.q != null) {
          boolean bool1 = true;
          af.a(bool1, "Client is connected but service is null");
          IInterface iInterface1 = this.q;
          return (T)iInterface1;
        } 
      } else {
        throw new DeadObjectException();
      } 
    } 
    boolean bool = false;
    af.a(bool, "Client is connected but service is null");
    IInterface iInterface = this.q;
    /* monitor exit ClassFileLocalVariableReferenceExpression{type=ObjectType{java/lang/Object}, name=SYNTHETIC_LOCAL_VARIABLE_2} */
    return (T)iInterface;
  }
  
  public boolean r() { return false; }
}
