package com.google.android.gms.a;

import android.os.IBinder;
import java.lang.reflect.Field;

public final class c<T> extends a.a {
  private final T a;
  
  private c(T paramT) { this.a = paramT; }
  
  public static <T> a a(T paramT) { return new c(paramT); }
  
  public static <T> T a(a parama) {
    if (parama instanceof c)
      return (T)((c)parama).a; 
    IBinder iBinder = parama.asBinder();
    Field[] arrayOfField = iBinder.getClass().getDeclaredFields();
    int j = arrayOfField.length;
    int i = 0;
    parama = null;
    byte b;
    for (b = 0; i < j; b = b1) {
      Field field1 = arrayOfField[i];
      byte b1 = b;
      if (!field1.isSynthetic()) {
        b1 = b + true;
        field = field1;
      } 
      i++;
    } 
    if (b == 1) {
      if (!field.isAccessible()) {
        field.setAccessible(true);
        try {
          return (T)field.get(iBinder);
        } catch (NullPointerException field) {
          throw new IllegalArgumentException("Binder object is null.", field);
        } catch (IllegalAccessException field) {
          throw new IllegalArgumentException("Could not access the field in remoteBinder.", field);
        } 
      } 
      throw new IllegalArgumentException("IObjectWrapper declared field not private!");
    } 
    i = arrayOfField.length;
    StringBuilder stringBuilder = new StringBuilder(64);
    stringBuilder.append("Unexpected number of IObjectWrapper declared fields: ");
    stringBuilder.append(i);
    throw new IllegalArgumentException(stringBuilder.toString());
  }
}
