package android.arch.a.b;

import java.util.Iterator;
import java.util.Map;
import java.util.WeakHashMap;

public class b<K, V> extends Object implements Iterable<Map.Entry<K, V>> {
  private c<K, V> a;
  
  private c<K, V> b;
  
  private WeakHashMap<f<K, V>, Boolean> c = new WeakHashMap();
  
  private int d = 0;
  
  public int a() { return this.d; }
  
  protected c<K, V> a(K paramK) {
    c c1;
    for (c1 = this.a; c1 != null; c1 = c1.c) {
      if (c1.a.equals(paramK))
        return c1; 
    } 
    return c1;
  }
  
  public V a(K paramK, V paramV) {
    c c1 = a(paramK);
    if (c1 != null)
      return (V)c1.b; 
    b(paramK, paramV);
    return null;
  }
  
  protected c<K, V> b(K paramK, V paramV) { // Byte code:
    //   0: new android/arch/a/b/b$c
    //   3: dup
    //   4: aload_1
    //   5: aload_2
    //   6: invokespecial <init> : (Ljava/lang/Object;Ljava/lang/Object;)V
    //   9: astore_1
    //   10: aload_0
    //   11: aload_0
    //   12: getfield d : I
    //   15: iconst_1
    //   16: iadd
    //   17: putfield d : I
    //   20: aload_0
    //   21: getfield b : Landroid/arch/a/b/b$c;
    //   24: astore_2
    //   25: aload_2
    //   26: ifnonnull -> 44
    //   29: aload_0
    //   30: aload_1
    //   31: putfield a : Landroid/arch/a/b/b$c;
    //   34: aload_0
    //   35: aload_0
    //   36: getfield a : Landroid/arch/a/b/b$c;
    //   39: putfield b : Landroid/arch/a/b/b$c;
    //   42: aload_1
    //   43: areturn
    //   44: aload_2
    //   45: aload_1
    //   46: putfield c : Landroid/arch/a/b/b$c;
    //   49: aload_1
    //   50: aload_2
    //   51: putfield d : Landroid/arch/a/b/b$c;
    //   54: aload_0
    //   55: aload_1
    //   56: putfield b : Landroid/arch/a/b/b$c;
    //   59: aload_1
    //   60: areturn }
  
  public V b(K paramK) {
    paramK = (K)a(paramK);
    if (paramK == null)
      return null; 
    this.d--;
    if (!this.c.isEmpty()) {
      Iterator iterator = this.c.keySet().iterator();
      while (iterator.hasNext())
        ((f)iterator.next()).a_(paramK); 
    } 
    if (paramK.d != null) {
      paramK.d.c = paramK.c;
    } else {
      this.a = paramK.c;
    } 
    if (paramK.c != null) {
      paramK.c.d = paramK.d;
    } else {
      this.b = paramK.d;
    } 
    paramK.c = null;
    paramK.d = null;
    return (V)paramK.b;
  }
  
  public Iterator<Map.Entry<K, V>> b() {
    b b1 = new b(this.b, this.a);
    this.c.put(b1, Boolean.valueOf(false));
    return b1;
  }
  
  public d c() {
    d d1 = new d(this, null);
    this.c.put(d1, Boolean.valueOf(false));
    return d1;
  }
  
  public Map.Entry<K, V> d() { return this.a; }
  
  public Map.Entry<K, V> e() { return this.b; }
  
  public boolean equals(Object paramObject) {
    if (paramObject == this)
      return true; 
    if (!(paramObject instanceof b))
      return false; 
    b b1 = (b)paramObject;
    if (a() != b1.a())
      return false; 
    paramObject = iterator();
    Iterator iterator = b1.iterator();
    while (paramObject.hasNext() && iterator.hasNext()) {
      Map.Entry entry = (Map.Entry)paramObject.next();
      Object object = iterator.next();
      if ((entry == null && object != null) || (entry != null && !entry.equals(object)))
        return false; 
    } 
    return (!paramObject.hasNext() && !iterator.hasNext());
  }
  
  public Iterator<Map.Entry<K, V>> iterator() {
    a a1 = new a(this.a, this.b);
    this.c.put(a1, Boolean.valueOf(false));
    return a1;
  }
  
  public String toString() {
    StringBuilder stringBuilder = new StringBuilder();
    stringBuilder.append("[");
    Iterator iterator = iterator();
    while (iterator.hasNext()) {
      stringBuilder.append(((Map.Entry)iterator.next()).toString());
      if (iterator.hasNext())
        stringBuilder.append(", "); 
    } 
    stringBuilder.append("]");
    return stringBuilder.toString();
  }
}
