package android.support.v7.widget;

import android.content.Context;
import android.content.ContextWrapper;
import android.content.res.AssetManager;
import android.content.res.Resources;
import android.os.Build;
import java.lang.ref.WeakReference;
import java.util.ArrayList;

public class as extends ContextWrapper {
  private static final Object a = new Object();
  
  private static ArrayList<WeakReference<as>> b;
  
  private final Resources c;
  
  private final Resources.Theme d;
  
  private as(Context paramContext) {
    super(paramContext);
    if (ba.a()) {
      this.c = new ba(this, paramContext.getResources());
      this.d = this.c.newTheme();
      this.d.setTo(paramContext.getTheme());
      return;
    } 
    this.c = new au(this, paramContext.getResources());
    this.d = null;
  }
  
  public static Context a(Context paramContext) {
    if (b(paramContext))
      synchronized (a) {
        if (b == null) {
          b = new ArrayList();
        } else {
          for (int i = b.size() - 1;; i--) {
            if (i >= 0) {
              WeakReference weakReference = (WeakReference)b.get(i);
              if (weakReference == null || weakReference.get() == null)
                b.remove(i); 
            } else {
              for (i = b.size() - 1;; i--) {
                if (i >= 0) {
                  WeakReference weakReference = (WeakReference)b.get(i);
                  if (weakReference != null) {
                    as as2 = (as)weakReference.get();
                  } else {
                    weakReference = null;
                  } 
                  if (weakReference != null && weakReference.getBaseContext() == paramContext)
                    return weakReference; 
                } else {
                  as1 = new as(paramContext);
                  b.add(new WeakReference(as1));
                  return as1;
                } 
              } 
            } 
          } 
          i--;
        } 
        as as1 = new as(as1);
        b.add(new WeakReference(as1));
        return as1;
      }  
    return paramContext;
  }
  
  private static boolean b(Context paramContext) {
    boolean bool = paramContext instanceof as;
    byte b1 = 0;
    int i = b1;
    if (!bool) {
      i = b1;
      if (!(paramContext.getResources() instanceof au)) {
        if (paramContext.getResources() instanceof ba)
          return false; 
        if (Build.VERSION.SDK_INT >= 21) {
          i = b1;
          return ba.a() ? true : i;
        } 
      } else {
        return i;
      } 
    } else {
      return i;
    } 
    return true;
  }
  
  public AssetManager getAssets() { return this.c.getAssets(); }
  
  public Resources getResources() { return this.c; }
  
  public Resources.Theme getTheme() {
    Resources.Theme theme2 = this.d;
    Resources.Theme theme1 = theme2;
    if (theme2 == null)
      theme1 = super.getTheme(); 
    return theme1;
  }
  
  public void setTheme(int paramInt) {
    Resources.Theme theme = this.d;
    if (theme == null) {
      super.setTheme(paramInt);
      return;
    } 
    theme.applyStyle(paramInt, true);
  }
}
