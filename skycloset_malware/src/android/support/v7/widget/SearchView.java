package android.support.v7.widget;

import android.app.PendingIntent;
import android.app.SearchableInfo;
import android.content.ActivityNotFoundException;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.res.Resources;
import android.database.Cursor;
import android.graphics.Rect;
import android.graphics.drawable.Drawable;
import android.net.Uri;
import android.os.Bundle;
import android.os.Parcelable;
import android.support.v4.f.r;
import android.support.v4.widget.f;
import android.support.v7.a.a;
import android.support.v7.view.c;
import android.text.Editable;
import android.text.SpannableStringBuilder;
import android.text.TextUtils;
import android.text.TextWatcher;
import android.text.style.ImageSpan;
import android.util.AttributeSet;
import android.util.Log;
import android.view.KeyEvent;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ImageView;
import android.widget.TextView;
import java.util.WeakHashMap;

public class SearchView extends ah implements c {
  static final a i = new a();
  
  private c A;
  
  private b B;
  
  private d C;
  
  private View.OnClickListener D;
  
  private boolean E;
  
  private boolean F;
  
  private boolean G;
  
  private CharSequence H;
  
  private boolean I;
  
  private boolean J;
  
  private int K;
  
  private boolean L;
  
  private CharSequence M;
  
  private CharSequence N;
  
  private boolean O;
  
  private int P;
  
  private Bundle Q;
  
  private final Runnable R = new Object(this);
  
  private Runnable S = new Object(this);
  
  private final WeakHashMap<String, Drawable.ConstantState> T = new WeakHashMap();
  
  private final View.OnClickListener U = new Object(this);
  
  private final TextView.OnEditorActionListener V = new Object(this);
  
  private final AdapterView.OnItemClickListener W = new Object(this);
  
  final SearchAutoComplete a;
  
  private final AdapterView.OnItemSelectedListener aa = new Object(this);
  
  private TextWatcher ab = new Object(this);
  
  final ImageView b;
  
  final ImageView c;
  
  final ImageView d;
  
  final ImageView e;
  
  View.OnFocusChangeListener f;
  
  f g;
  
  SearchableInfo h;
  
  View.OnKeyListener j = new Object(this);
  
  private final View k;
  
  private final View l;
  
  private final View m;
  
  private final View n;
  
  private f o;
  
  private Rect p = new Rect();
  
  private Rect q = new Rect();
  
  private int[] r = new int[2];
  
  private int[] s = new int[2];
  
  private final ImageView t;
  
  private final Drawable u;
  
  private final int v;
  
  private final int w;
  
  private final Intent x;
  
  private final Intent y;
  
  private final CharSequence z;
  
  public SearchView(Context paramContext) { this(paramContext, null); }
  
  public SearchView(Context paramContext, AttributeSet paramAttributeSet) { this(paramContext, paramAttributeSet, a.a.searchViewStyle); }
  
  public SearchView(Context paramContext, AttributeSet paramAttributeSet, int paramInt) {
    super(paramContext, paramAttributeSet, paramInt);
    av av = av.a(paramContext, paramAttributeSet, a.j.SearchView, paramInt, 0);
    LayoutInflater.from(paramContext).inflate(av.g(a.j.SearchView_layout, a.g.abc_search_view), this, true);
    this.a = (SearchAutoComplete)findViewById(a.f.search_src_text);
    this.a.setSearchView(this);
    this.k = findViewById(a.f.search_edit_frame);
    this.l = findViewById(a.f.search_plate);
    this.m = findViewById(a.f.submit_area);
    this.b = (ImageView)findViewById(a.f.search_button);
    this.c = (ImageView)findViewById(a.f.search_go_btn);
    this.d = (ImageView)findViewById(a.f.search_close_btn);
    this.e = (ImageView)findViewById(a.f.search_voice_btn);
    this.t = (ImageView)findViewById(a.f.search_mag_icon);
    r.a(this.l, av.a(a.j.SearchView_queryBackground));
    r.a(this.m, av.a(a.j.SearchView_submitBackground));
    this.b.setImageDrawable(av.a(a.j.SearchView_searchIcon));
    this.c.setImageDrawable(av.a(a.j.SearchView_goIcon));
    this.d.setImageDrawable(av.a(a.j.SearchView_closeIcon));
    this.e.setImageDrawable(av.a(a.j.SearchView_voiceIcon));
    this.t.setImageDrawable(av.a(a.j.SearchView_searchIcon));
    this.u = av.a(a.j.SearchView_searchHintIcon);
    ax.a(this.b, getResources().getString(a.h.abc_searchview_description_search));
    this.v = av.g(a.j.SearchView_suggestionRowLayout, a.g.abc_search_dropdown_item_icons_2line);
    this.w = av.g(a.j.SearchView_commitIcon, 0);
    this.b.setOnClickListener(this.U);
    this.d.setOnClickListener(this.U);
    this.c.setOnClickListener(this.U);
    this.e.setOnClickListener(this.U);
    this.a.setOnClickListener(this.U);
    this.a.addTextChangedListener(this.ab);
    this.a.setOnEditorActionListener(this.V);
    this.a.setOnItemClickListener(this.W);
    this.a.setOnItemSelectedListener(this.aa);
    this.a.setOnKeyListener(this.j);
    this.a.setOnFocusChangeListener(new Object(this));
    setIconifiedByDefault(av.a(a.j.SearchView_iconifiedByDefault, true));
    paramInt = av.e(a.j.SearchView_android_maxWidth, -1);
    if (paramInt != -1)
      setMaxWidth(paramInt); 
    this.z = av.c(a.j.SearchView_defaultQueryHint);
    this.H = av.c(a.j.SearchView_queryHint);
    paramInt = av.a(a.j.SearchView_android_imeOptions, -1);
    if (paramInt != -1)
      setImeOptions(paramInt); 
    paramInt = av.a(a.j.SearchView_android_inputType, -1);
    if (paramInt != -1)
      setInputType(paramInt); 
    setFocusable(av.a(a.j.SearchView_android_focusable, true));
    av.a();
    this.x = new Intent("android.speech.action.WEB_SEARCH");
    this.x.addFlags(268435456);
    this.x.putExtra("android.speech.extra.LANGUAGE_MODEL", "web_search");
    this.y = new Intent("android.speech.action.RECOGNIZE_SPEECH");
    this.y.addFlags(268435456);
    this.n = findViewById(this.a.getDropDownAnchor());
    View view = this.n;
    if (view != null)
      view.addOnLayoutChangeListener(new Object(this)); 
    a(this.E);
    r();
  }
  
  private Intent a(Intent paramIntent, SearchableInfo paramSearchableInfo) {
    Intent intent = new Intent(paramIntent);
    String str = paramSearchableInfo.getSearchActivity();
    if (str == null) {
      str = null;
    } else {
      str = str.flattenToShortString();
    } 
    intent.putExtra("calling_package", str);
    return intent;
  }
  
  private Intent a(Cursor paramCursor, int paramInt, String paramString) {
    StringBuilder stringBuilder;
    try {
      String str = ao.a(paramCursor, "suggest_intent_action");
      str1 = str;
      if (str == null)
        str1 = this.h.getSuggestIntentAction(); 
    } catch (RuntimeException paramString) {
      try {
        paramInt = paramCursor.getPosition();
      } catch (RuntimeException paramCursor) {
        paramInt = -1;
      } 
      stringBuilder = new StringBuilder();
      stringBuilder.append("Search suggestions cursor at row ");
      stringBuilder.append(paramInt);
      stringBuilder.append(" returned exception.");
      Log.w("SearchView", stringBuilder.toString(), paramString);
      return null;
    } 
    String str2 = str1;
    if (str1 == null)
      str2 = "android.intent.action.SEARCH"; 
    String str3 = ao.a(stringBuilder, "suggest_intent_data");
    String str1 = str3;
    if (str3 == null)
      str1 = this.h.getSuggestIntentData(); 
    str3 = str1;
    if (str1 != null) {
      String str = ao.a(stringBuilder, "suggest_intent_data_id");
      str3 = str1;
      if (str != null) {
        StringBuilder stringBuilder1 = new StringBuilder();
        stringBuilder1.append(str1);
        stringBuilder1.append("/");
        stringBuilder1.append(Uri.encode(str));
        str3 = stringBuilder1.toString();
      } 
    } 
    if (str3 == null) {
      str1 = null;
      str3 = ao.a(stringBuilder, "suggest_intent_query");
      return a(str2, str1, ao.a(stringBuilder, "suggest_intent_extra_data"), str3, paramInt, paramString);
    } 
    Uri uri = Uri.parse(str3);
    str3 = ao.a(stringBuilder, "suggest_intent_query");
    return a(str2, uri, ao.a(stringBuilder, "suggest_intent_extra_data"), str3, paramInt, paramString);
  }
  
  private Intent a(String paramString1, Uri paramUri, String paramString2, String paramString3, int paramInt, String paramString4) {
    Intent intent = new Intent(paramString1);
    intent.addFlags(268435456);
    if (paramUri != null)
      intent.setData(paramUri); 
    intent.putExtra("user_query", this.N);
    if (paramString3 != null)
      intent.putExtra("query", paramString3); 
    if (paramString2 != null)
      intent.putExtra("intent_extra_data_key", paramString2); 
    Bundle bundle = this.Q;
    if (bundle != null)
      intent.putExtra("app_data", bundle); 
    if (paramInt != 0) {
      intent.putExtra("action_key", paramInt);
      intent.putExtra("action_msg", paramString4);
    } 
    intent.setComponent(this.h.getSearchActivity());
    return intent;
  }
  
  private void a(Intent paramIntent) {
    if (paramIntent == null)
      return; 
    try {
      getContext().startActivity(paramIntent);
      return;
    } catch (RuntimeException runtimeException) {
      StringBuilder stringBuilder = new StringBuilder();
      stringBuilder.append("Failed launch activity: ");
      stringBuilder.append(paramIntent);
      Log.e("SearchView", stringBuilder.toString(), runtimeException);
      return;
    } 
  }
  
  private void a(View paramView, Rect paramRect) {
    paramView.getLocationInWindow(this.r);
    getLocationInWindow(this.s);
    int[] arrayOfInt1 = this.r;
    int i1 = arrayOfInt1[1];
    int[] arrayOfInt2 = this.s;
    i1 -= arrayOfInt2[1];
    int i2 = arrayOfInt1[0] - arrayOfInt2[0];
    paramRect.set(i2, i1, paramView.getWidth() + i2, paramView.getHeight() + i1);
  }
  
  private void a(boolean paramBoolean) {
    this.F = paramBoolean;
    byte b2 = 8;
    boolean bool = false;
    if (paramBoolean) {
      b1 = 0;
    } else {
      b1 = 8;
    } 
    boolean bool1 = TextUtils.isEmpty(this.a.getText()) ^ true;
    this.b.setVisibility(b1);
    b(bool1);
    View view = this.k;
    if (paramBoolean) {
      b1 = 8;
    } else {
      b1 = 0;
    } 
    view.setVisibility(b1);
    byte b1 = b2;
    if (this.t.getDrawable() != null)
      if (this.E) {
        b1 = b2;
      } else {
        b1 = 0;
      }  
    this.t.setVisibility(b1);
    p();
    paramBoolean = bool;
    if (!bool1)
      paramBoolean = true; 
    c(paramBoolean);
    o();
  }
  
  static boolean a(Context paramContext) { return ((paramContext.getResources().getConfiguration()).orientation == 2); }
  
  private Intent b(Intent paramIntent, SearchableInfo paramSearchableInfo) {
    ComponentName componentName = paramSearchableInfo.getSearchActivity();
    Intent intent1 = new Intent("android.intent.action.SEARCH");
    intent1.setComponent(componentName);
    PendingIntent pendingIntent = PendingIntent.getActivity(getContext(), 0, intent1, 1073741824);
    Bundle bundle2 = new Bundle();
    Bundle bundle1 = this.Q;
    if (bundle1 != null)
      bundle2.putParcelable("app_data", bundle1); 
    Intent intent2 = new Intent(paramIntent);
    String str1 = "free_form";
    int i1 = 1;
    Resources resources = getResources();
    if (paramSearchableInfo.getVoiceLanguageModeId() != 0)
      str1 = resources.getString(paramSearchableInfo.getVoiceLanguageModeId()); 
    int i2 = paramSearchableInfo.getVoicePromptTextId();
    String str2 = null;
    if (i2 != 0) {
      String str = resources.getString(paramSearchableInfo.getVoicePromptTextId());
    } else {
      bundle1 = null;
    } 
    if (paramSearchableInfo.getVoiceLanguageId() != 0) {
      String str = resources.getString(paramSearchableInfo.getVoiceLanguageId());
    } else {
      resources = null;
    } 
    if (paramSearchableInfo.getVoiceMaxResults() != 0)
      i1 = paramSearchableInfo.getVoiceMaxResults(); 
    intent2.putExtra("android.speech.extra.LANGUAGE_MODEL", str1);
    intent2.putExtra("android.speech.extra.PROMPT", bundle1);
    intent2.putExtra("android.speech.extra.LANGUAGE", resources);
    intent2.putExtra("android.speech.extra.MAX_RESULTS", i1);
    if (componentName == null) {
      str1 = str2;
    } else {
      str1 = componentName.flattenToShortString();
    } 
    intent2.putExtra("calling_package", str1);
    intent2.putExtra("android.speech.extra.RESULTS_PENDINGINTENT", pendingIntent);
    intent2.putExtra("android.speech.extra.RESULTS_PENDINGINTENT_BUNDLE", bundle2);
    return intent2;
  }
  
  private void b(boolean paramBoolean) {
    byte b1;
    if (this.G && n() && hasFocus() && (paramBoolean || !this.L)) {
      b1 = 0;
    } else {
      b1 = 8;
    } 
    this.c.setVisibility(b1);
  }
  
  private boolean b(int paramInt1, int paramInt2, String paramString) {
    Cursor cursor = this.g.a();
    if (cursor != null && cursor.moveToPosition(paramInt1)) {
      a(a(cursor, paramInt2, paramString));
      return true;
    } 
    return false;
  }
  
  private CharSequence c(CharSequence paramCharSequence) {
    if (this.E) {
      if (this.u == null)
        return paramCharSequence; 
      int i1 = (int)(this.a.getTextSize() * 1.25D);
      this.u.setBounds(0, 0, i1, i1);
      SpannableStringBuilder spannableStringBuilder = new SpannableStringBuilder("   ");
      spannableStringBuilder.setSpan(new ImageSpan(this.u), 1, 2, 33);
      spannableStringBuilder.append(paramCharSequence);
      return spannableStringBuilder;
    } 
    return paramCharSequence;
  }
  
  private void c(boolean paramBoolean) {
    byte b1;
    if (this.L && !c() && paramBoolean) {
      b1 = 0;
      this.c.setVisibility(8);
    } else {
      b1 = 8;
    } 
    this.e.setVisibility(b1);
  }
  
  private void e(int paramInt) {
    Editable editable = this.a.getText();
    Cursor cursor = this.g.a();
    if (cursor == null)
      return; 
    if (cursor.moveToPosition(paramInt)) {
      CharSequence charSequence = this.g.c(cursor);
      if (charSequence != null) {
        setQuery(charSequence);
        return;
      } 
    } 
    setQuery(editable);
  }
  
  private int getPreferredHeight() { return getContext().getResources().getDimensionPixelSize(a.d.abc_search_view_preferred_height); }
  
  private int getPreferredWidth() { return getContext().getResources().getDimensionPixelSize(a.d.abc_search_view_preferred_width); }
  
  private boolean m() {
    SearchableInfo searchableInfo = this.h;
    byte b1 = 0;
    int i1 = b1;
    if (searchableInfo != null) {
      i1 = b1;
      if (searchableInfo.getVoiceSearchEnabled()) {
        Intent intent;
        searchableInfo = null;
        if (this.h.getVoiceSearchLaunchWebSearch()) {
          intent = this.x;
        } else if (this.h.getVoiceSearchLaunchRecognizer()) {
          intent = this.y;
        } 
        i1 = b1;
        if (intent != null) {
          i1 = b1;
          if (getContext().getPackageManager().resolveActivity(intent, 65536) != null)
            i1 = 1; 
        } 
      } 
    } 
    return i1;
  }
  
  private boolean n() { return ((this.G || this.L) && !c()); }
  
  private void o() {
    byte b1;
    if (n() && (this.c.getVisibility() == 0 || this.e.getVisibility() == 0)) {
      b1 = 0;
    } else {
      b1 = 8;
    } 
    this.m.setVisibility(b1);
  }
  
  private void p() {
    boolean bool2 = TextUtils.isEmpty(this.a.getText());
    byte b3 = 1;
    boolean bool1 = bool2 ^ true;
    byte b2 = 0;
    byte b1 = b3;
    if (!bool1)
      if (this.E && !this.O) {
        b1 = b3;
      } else {
        b1 = 0;
      }  
    ImageView imageView = this.d;
    if (b1 != 0) {
      b1 = b2;
    } else {
      b1 = 8;
    } 
    imageView.setVisibility(b1);
    Drawable drawable = this.d.getDrawable();
    if (drawable != null) {
      int[] arrayOfInt;
      if (bool1) {
        arrayOfInt = ENABLED_STATE_SET;
      } else {
        arrayOfInt = EMPTY_STATE_SET;
      } 
      drawable.setState(arrayOfInt);
    } 
  }
  
  private void q() { post(this.R); }
  
  private void r() {
    CharSequence charSequence2 = getQueryHint();
    SearchAutoComplete searchAutoComplete = this.a;
    CharSequence charSequence1 = charSequence2;
    if (charSequence2 == null)
      charSequence1 = ""; 
    searchAutoComplete.setHint(c(charSequence1));
  }
  
  private void s() {
    this.a.setThreshold(this.h.getSuggestThreshold());
    this.a.setImeOptions(this.h.getImeOptions());
    int i3 = this.h.getInputType();
    int i2 = 1;
    int i1 = i3;
    if ((i3 & 0xF) == 1) {
      i3 &= 0xFFFEFFFF;
      i1 = i3;
      if (this.h.getSuggestAuthority() != null)
        i1 = i3 | 0x10000 | 0x80000; 
    } 
    this.a.setInputType(i1);
    f f1 = this.g;
    if (f1 != null)
      f1.a(null); 
    if (this.h.getSuggestAuthority() != null) {
      this.g = new ao(getContext(), this, this.h, this.T);
      this.a.setAdapter(this.g);
      ao ao = (ao)this.g;
      i1 = i2;
      if (this.I)
        i1 = 2; 
      ao.a(i1);
    } 
  }
  
  private void setQuery(CharSequence paramCharSequence) {
    int i1;
    this.a.setText(paramCharSequence);
    SearchAutoComplete searchAutoComplete = this.a;
    if (TextUtils.isEmpty(paramCharSequence)) {
      i1 = 0;
    } else {
      i1 = paramCharSequence.length();
    } 
    searchAutoComplete.setSelection(i1);
  }
  
  private void t() { this.a.dismissDropDown(); }
  
  public void a() {
    if (this.O)
      return; 
    this.O = true;
    this.P = this.a.getImeOptions();
    this.a.setImeOptions(this.P | 0x2000000);
    this.a.setText("");
    setIconified(false);
  }
  
  void a(int paramInt, String paramString1, String paramString2) {
    Intent intent = a("android.intent.action.SEARCH", null, null, paramString2, paramInt, paramString1);
    getContext().startActivity(intent);
  }
  
  void a(CharSequence paramCharSequence) { setQuery(paramCharSequence); }
  
  public void a(CharSequence paramCharSequence, boolean paramBoolean) {
    this.a.setText(paramCharSequence);
    if (paramCharSequence != null) {
      SearchAutoComplete searchAutoComplete = this.a;
      searchAutoComplete.setSelection(searchAutoComplete.length());
      this.N = paramCharSequence;
    } 
    if (paramBoolean && !TextUtils.isEmpty(paramCharSequence))
      e(); 
  }
  
  boolean a(int paramInt) {
    d d1 = this.C;
    if (d1 == null || !d1.a(paramInt)) {
      e(paramInt);
      return true;
    } 
    return false;
  }
  
  boolean a(int paramInt1, int paramInt2, String paramString) {
    d d1 = this.C;
    if (d1 == null || !d1.b(paramInt1)) {
      b(paramInt1, 0, null);
      this.a.setImeVisibility(false);
      t();
      return true;
    } 
    return false;
  }
  
  boolean a(View paramView, int paramInt, KeyEvent paramKeyEvent) {
    if (this.h == null)
      return false; 
    if (this.g == null)
      return false; 
    if (paramKeyEvent.getAction() == 0 && paramKeyEvent.hasNoModifiers()) {
      if (paramInt == 66 || paramInt == 84 || paramInt == 61)
        return a(this.a.getListSelection(), 0, null); 
      if (paramInt == 21 || paramInt == 22) {
        if (paramInt == 21) {
          paramInt = 0;
        } else {
          paramInt = this.a.length();
        } 
        this.a.setSelection(paramInt);
        this.a.setListSelection(0);
        this.a.clearListSelection();
        i.a(this.a, true);
        return true;
      } 
      if (paramInt == 19 && this.a.getListSelection() == 0)
        return false; 
    } 
    return false;
  }
  
  public void b() {
    a("", false);
    clearFocus();
    a(true);
    this.a.setImeOptions(this.P);
    this.O = false;
  }
  
  void b(CharSequence paramCharSequence) {
    Editable editable = this.a.getText();
    this.N = editable;
    boolean bool2 = TextUtils.isEmpty(editable);
    boolean bool1 = true;
    bool2 ^= true;
    b(bool2);
    if (bool2)
      bool1 = false; 
    c(bool1);
    p();
    o();
    if (this.A != null && !TextUtils.equals(paramCharSequence, this.M))
      this.A.b(paramCharSequence.toString()); 
    this.M = paramCharSequence.toString();
  }
  
  public boolean c() { return this.F; }
  
  public void clearFocus() {
    this.J = true;
    super.clearFocus();
    this.a.clearFocus();
    this.a.setImeVisibility(false);
    this.J = false;
  }
  
  void d() {
    int[] arrayOfInt;
    if (this.a.hasFocus()) {
      arrayOfInt = FOCUSED_STATE_SET;
    } else {
      arrayOfInt = EMPTY_STATE_SET;
    } 
    Drawable drawable = this.l.getBackground();
    if (drawable != null)
      drawable.setState(arrayOfInt); 
    drawable = this.m.getBackground();
    if (drawable != null)
      drawable.setState(arrayOfInt); 
    invalidate();
  }
  
  void e() {
    Editable editable = this.a.getText();
    if (editable != null && TextUtils.getTrimmedLength(editable) > 0) {
      c c1 = this.A;
      if (c1 == null || !c1.a(editable.toString())) {
        if (this.h != null)
          a(0, null, editable.toString()); 
        this.a.setImeVisibility(false);
        t();
      } 
    } 
  }
  
  void f() {
    if (TextUtils.isEmpty(this.a.getText())) {
      if (this.E) {
        b b1 = this.B;
        if (b1 == null || !b1.a()) {
          clearFocus();
          a(true);
          return;
        } 
      } 
    } else {
      this.a.setText("");
      this.a.requestFocus();
      this.a.setImeVisibility(true);
    } 
  }
  
  void g() {
    a(false);
    this.a.requestFocus();
    this.a.setImeVisibility(true);
    View.OnClickListener onClickListener = this.D;
    if (onClickListener != null)
      onClickListener.onClick(this); 
  }
  
  public int getImeOptions() { return this.a.getImeOptions(); }
  
  public int getInputType() { return this.a.getInputType(); }
  
  public int getMaxWidth() { return this.K; }
  
  public CharSequence getQuery() { return this.a.getText(); }
  
  public CharSequence getQueryHint() {
    CharSequence charSequence = this.H;
    if (charSequence != null)
      return charSequence; 
    SearchableInfo searchableInfo = this.h;
    return (searchableInfo != null && searchableInfo.getHintId() != 0) ? getContext().getText(this.h.getHintId()) : this.z;
  }
  
  int getSuggestionCommitIconResId() { return this.w; }
  
  int getSuggestionRowLayout() { return this.v; }
  
  public f getSuggestionsAdapter() { return this.g; }
  
  void h() {
    searchableInfo = this.h;
    if (searchableInfo == null)
      return; 
    try {
      Intent intent;
      if (searchableInfo.getVoiceSearchLaunchWebSearch()) {
        intent = a(this.x, searchableInfo);
      } else if (intent.getVoiceSearchLaunchRecognizer()) {
        intent = b(this.y, intent);
      } else {
        return;
      } 
      getContext().startActivity(intent);
      return;
    } catch (ActivityNotFoundException searchableInfo) {
      Log.w("SearchView", "Could not find voice search activity");
    } 
  }
  
  void i() {
    a(c());
    q();
    if (this.a.hasFocus())
      l(); 
  }
  
  void k() {
    if (this.n.getWidth() > 1) {
      int i1;
      Resources resources = getContext().getResources();
      int i3 = this.l.getPaddingLeft();
      Rect rect = new Rect();
      boolean bool = bb.a(this);
      if (this.E) {
        i1 = resources.getDimensionPixelSize(a.d.abc_dropdownitem_icon_width) + resources.getDimensionPixelSize(a.d.abc_dropdownitem_text_padding_left);
      } else {
        i1 = 0;
      } 
      this.a.getDropDownBackground().getPadding(rect);
      if (bool) {
        i2 = -rect.left;
      } else {
        i2 = i3 - rect.left + i1;
      } 
      this.a.setDropDownHorizontalOffset(i2);
      int i2 = this.n.getWidth();
      int i4 = rect.left;
      int i5 = rect.right;
      this.a.setDropDownWidth(i2 + i4 + i5 + i1 - i3);
    } 
  }
  
  void l() {
    i.a(this.a);
    i.b(this.a);
  }
  
  protected void onDetachedFromWindow() {
    removeCallbacks(this.R);
    post(this.S);
    super.onDetachedFromWindow();
  }
  
  protected void onLayout(boolean paramBoolean, int paramInt1, int paramInt2, int paramInt3, int paramInt4) {
    super.onLayout(paramBoolean, paramInt1, paramInt2, paramInt3, paramInt4);
    if (paramBoolean) {
      a(this.a, this.p);
      this.q.set(this.p.left, 0, this.p.right, paramInt4 - paramInt2);
      f f1 = this.o;
      if (f1 == null) {
        this.o = new f(this.q, this.p, this.a);
        setTouchDelegate(this.o);
        return;
      } 
      f1.a(this.q, this.p);
    } 
  }
  
  protected void onMeasure(int paramInt1, int paramInt2) { // Byte code:
    //   0: aload_0
    //   1: invokevirtual c : ()Z
    //   4: ifeq -> 14
    //   7: aload_0
    //   8: iload_1
    //   9: iload_2
    //   10: invokespecial onMeasure : (II)V
    //   13: return
    //   14: iload_1
    //   15: invokestatic getMode : (I)I
    //   18: istore #4
    //   20: iload_1
    //   21: invokestatic getSize : (I)I
    //   24: istore_3
    //   25: iload #4
    //   27: ldc_w -2147483648
    //   30: if_icmpeq -> 90
    //   33: iload #4
    //   35: ifeq -> 70
    //   38: iload #4
    //   40: ldc_w 1073741824
    //   43: if_icmpeq -> 51
    //   46: iload_3
    //   47: istore_1
    //   48: goto -> 113
    //   51: aload_0
    //   52: getfield K : I
    //   55: istore #4
    //   57: iload_3
    //   58: istore_1
    //   59: iload #4
    //   61: ifle -> 113
    //   64: iload #4
    //   66: istore_1
    //   67: goto -> 99
    //   70: aload_0
    //   71: getfield K : I
    //   74: istore_1
    //   75: iload_1
    //   76: ifle -> 82
    //   79: goto -> 113
    //   82: aload_0
    //   83: invokespecial getPreferredWidth : ()I
    //   86: istore_1
    //   87: goto -> 113
    //   90: aload_0
    //   91: getfield K : I
    //   94: istore_1
    //   95: iload_1
    //   96: ifle -> 102
    //   99: goto -> 107
    //   102: aload_0
    //   103: invokespecial getPreferredWidth : ()I
    //   106: istore_1
    //   107: iload_1
    //   108: iload_3
    //   109: invokestatic min : (II)I
    //   112: istore_1
    //   113: iload_2
    //   114: invokestatic getMode : (I)I
    //   117: istore_3
    //   118: iload_2
    //   119: invokestatic getSize : (I)I
    //   122: istore_2
    //   123: iload_3
    //   124: ldc_w -2147483648
    //   127: if_icmpeq -> 145
    //   130: iload_3
    //   131: ifeq -> 137
    //   134: goto -> 154
    //   137: aload_0
    //   138: invokespecial getPreferredHeight : ()I
    //   141: istore_2
    //   142: goto -> 154
    //   145: aload_0
    //   146: invokespecial getPreferredHeight : ()I
    //   149: iload_2
    //   150: invokestatic min : (II)I
    //   153: istore_2
    //   154: aload_0
    //   155: iload_1
    //   156: ldc_w 1073741824
    //   159: invokestatic makeMeasureSpec : (II)I
    //   162: iload_2
    //   163: ldc_w 1073741824
    //   166: invokestatic makeMeasureSpec : (II)I
    //   169: invokespecial onMeasure : (II)V
    //   172: return }
  
  protected void onRestoreInstanceState(Parcelable paramParcelable) {
    if (!(paramParcelable instanceof e)) {
      super.onRestoreInstanceState(paramParcelable);
      return;
    } 
    e e1 = (e)paramParcelable;
    super.onRestoreInstanceState(e1.a());
    a(e1.b);
    requestLayout();
  }
  
  protected Parcelable onSaveInstanceState() {
    e e1 = new e(super.onSaveInstanceState());
    e1.b = c();
    return e1;
  }
  
  public void onWindowFocusChanged(boolean paramBoolean) {
    super.onWindowFocusChanged(paramBoolean);
    q();
  }
  
  public boolean requestFocus(int paramInt, Rect paramRect) {
    if (this.J)
      return false; 
    if (!isFocusable())
      return false; 
    if (!c()) {
      boolean bool = this.a.requestFocus(paramInt, paramRect);
      if (bool)
        a(false); 
      return bool;
    } 
    return super.requestFocus(paramInt, paramRect);
  }
  
  public void setAppSearchData(Bundle paramBundle) { this.Q = paramBundle; }
  
  public void setIconified(boolean paramBoolean) {
    if (paramBoolean) {
      f();
      return;
    } 
    g();
  }
  
  public void setIconifiedByDefault(boolean paramBoolean) {
    if (this.E == paramBoolean)
      return; 
    this.E = paramBoolean;
    a(paramBoolean);
    r();
  }
  
  public void setImeOptions(int paramInt) { this.a.setImeOptions(paramInt); }
  
  public void setInputType(int paramInt) { this.a.setInputType(paramInt); }
  
  public void setMaxWidth(int paramInt) {
    this.K = paramInt;
    requestLayout();
  }
  
  public void setOnCloseListener(b paramb) { this.B = paramb; }
  
  public void setOnQueryTextFocusChangeListener(View.OnFocusChangeListener paramOnFocusChangeListener) { this.f = paramOnFocusChangeListener; }
  
  public void setOnQueryTextListener(c paramc) { this.A = paramc; }
  
  public void setOnSearchClickListener(View.OnClickListener paramOnClickListener) { this.D = paramOnClickListener; }
  
  public void setOnSuggestionListener(d paramd) { this.C = paramd; }
  
  public void setQueryHint(CharSequence paramCharSequence) {
    this.H = paramCharSequence;
    r();
  }
  
  public void setQueryRefinementEnabled(boolean paramBoolean) {
    this.I = paramBoolean;
    f f1 = this.g;
    if (f1 instanceof ao) {
      byte b1;
      ao ao = (ao)f1;
      if (paramBoolean) {
        b1 = 2;
      } else {
        b1 = 1;
      } 
      ao.a(b1);
    } 
  }
  
  public void setSearchableInfo(SearchableInfo paramSearchableInfo) {
    this.h = paramSearchableInfo;
    if (this.h != null) {
      s();
      r();
    } 
    this.L = m();
    if (this.L)
      this.a.setPrivateImeOptions("nm"); 
    a(c());
  }
  
  public void setSubmitButtonEnabled(boolean paramBoolean) {
    this.G = paramBoolean;
    a(c());
  }
  
  public void setSuggestionsAdapter(f paramf) {
    this.g = paramf;
    this.a.setAdapter(this.g);
  }
}
