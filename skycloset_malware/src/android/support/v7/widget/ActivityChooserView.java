package android.support.v7.widget;

import android.database.DataSetObserver;
import android.graphics.drawable.Drawable;
import android.support.v4.f.c;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewTreeObserver;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.PopupWindow;

public class ActivityChooserView extends ViewGroup {
  final a a;
  
  final FrameLayout b;
  
  final FrameLayout c;
  
  c d;
  
  final DataSetObserver e;
  
  PopupWindow.OnDismissListener f;
  
  boolean g;
  
  int h;
  
  private final b i;
  
  private final View j;
  
  private final ImageView k;
  
  private final int l;
  
  private final ViewTreeObserver.OnGlobalLayoutListener m;
  
  private ai n;
  
  private boolean o;
  
  private int p;
  
  void a(int paramInt) { throw new RuntimeException("d2j fail translate: java.lang.RuntimeException: can not merge I and Z\n\tat com.googlecode.dex2jar.ir.TypeClass.merge(TypeClass.java:100)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeRef.updateTypeClass(TypeTransformer.java:174)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.useAs(TypeTransformer.java:868)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.enexpr(TypeTransformer.java:668)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.exExpr(TypeTransformer.java:719)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.exExpr(TypeTransformer.java:703)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.s1stmt(TypeTransformer.java:810)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.sxStmt(TypeTransformer.java:840)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.analyze(TypeTransformer.java:206)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer.transform(TypeTransformer.java:44)\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:162)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\n"); }
  
  public boolean a() {
    if (!c()) {
      if (!this.o)
        return false; 
      this.g = false;
      a(this.h);
      return true;
    } 
    return false;
  }
  
  public boolean b() {
    if (c()) {
      getListPopupWindow().c();
      ViewTreeObserver viewTreeObserver = getViewTreeObserver();
      if (viewTreeObserver.isAlive())
        viewTreeObserver.removeGlobalOnLayoutListener(this.m); 
    } 
    return true;
  }
  
  public boolean c() { return getListPopupWindow().d(); }
  
  public d getDataModel() { return this.a.d(); }
  
  ai getListPopupWindow() {
    if (this.n == null) {
      this.n = new ai(getContext());
      this.n.a(this.a);
      this.n.b(this);
      this.n.a(true);
      this.n.a(this.i);
      this.n.a(this.i);
    } 
    return this.n;
  }
  
  protected void onAttachedToWindow() {
    super.onAttachedToWindow();
    d d1 = this.a.d();
    if (d1 != null)
      d1.registerObserver(this.e); 
    this.o = true;
  }
  
  protected void onDetachedFromWindow() {
    super.onDetachedFromWindow();
    d d1 = this.a.d();
    if (d1 != null)
      d1.unregisterObserver(this.e); 
    ViewTreeObserver viewTreeObserver = getViewTreeObserver();
    if (viewTreeObserver.isAlive())
      viewTreeObserver.removeGlobalOnLayoutListener(this.m); 
    if (c())
      b(); 
    this.o = false;
  }
  
  protected void onLayout(boolean paramBoolean, int paramInt1, int paramInt2, int paramInt3, int paramInt4) {
    this.j.layout(0, 0, paramInt3 - paramInt1, paramInt4 - paramInt2);
    if (!c())
      b(); 
  }
  
  protected void onMeasure(int paramInt1, int paramInt2) {
    View view = this.j;
    int i1 = paramInt2;
    if (this.c.getVisibility() != 0)
      i1 = View.MeasureSpec.makeMeasureSpec(View.MeasureSpec.getSize(paramInt2), 1073741824); 
    measureChild(view, paramInt1, i1);
    setMeasuredDimension(view.getMeasuredWidth(), view.getMeasuredHeight());
  }
  
  public void setActivityChooserModel(d paramd) {
    this.a.a(paramd);
    if (c()) {
      b();
      a();
    } 
  }
  
  public void setDefaultActionButtonContentDescription(int paramInt) { this.p = paramInt; }
  
  public void setExpandActivityOverflowButtonContentDescription(int paramInt) {
    String str = getContext().getString(paramInt);
    this.k.setContentDescription(str);
  }
  
  public void setExpandActivityOverflowButtonDrawable(Drawable paramDrawable) { this.k.setImageDrawable(paramDrawable); }
  
  public void setInitialActivityCount(int paramInt) { this.h = paramInt; }
  
  public void setOnDismissListener(PopupWindow.OnDismissListener paramOnDismissListener) { this.f = paramOnDismissListener; }
  
  public void setProvider(c paramc) { this.d = paramc; }
}
