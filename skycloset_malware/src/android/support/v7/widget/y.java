package android.support.v7.widget;

import android.annotation.SuppressLint;
import android.content.Context;
import android.content.res.ColorStateList;
import android.graphics.Typeface;
import android.graphics.drawable.Drawable;
import android.os.Build;
import android.support.v4.widget.b;
import android.support.v4.widget.p;
import android.support.v7.a.a;
import android.util.AttributeSet;
import android.widget.TextView;
import java.lang.ref.WeakReference;

class y {
  private final TextView a;
  
  private at b;
  
  private at c;
  
  private at d;
  
  private at e;
  
  private at f;
  
  private at g;
  
  private final aa h;
  
  private int i = 0;
  
  private Typeface j;
  
  private boolean k;
  
  y(TextView paramTextView) {
    this.a = paramTextView;
    this.h = new aa(this.a);
  }
  
  private static at a(Context paramContext, k paramk, int paramInt) {
    ColorStateList colorStateList = paramk.b(paramContext, paramInt);
    if (colorStateList != null) {
      at at1 = new at();
      at1.d = true;
      at1.a = colorStateList;
      return at1;
    } 
    return null;
  }
  
  private void a(Context paramContext, av paramav) {
    this.i = paramav.a(a.j.TextAppearance_android_textStyle, this.i);
    boolean bool1 = paramav.g(a.j.TextAppearance_android_fontFamily);
    boolean bool = true;
    if (bool1 || paramav.g(a.j.TextAppearance_fontFamily)) {
      int m;
      this.j = null;
      if (paramav.g(a.j.TextAppearance_fontFamily)) {
        m = a.j.TextAppearance_fontFamily;
      } else {
        m = a.j.TextAppearance_android_fontFamily;
      } 
      if (!paramContext.isRestricted()) {
        object = new Object(this, new WeakReference(this.a));
        try {
          this.j = paramav.a(m, this.i, object);
          if (this.j != null)
            bool = false; 
          this.k = bool;
        } catch (UnsupportedOperationException|android.content.res.Resources.NotFoundException object) {}
      } 
      if (this.j == null) {
        String str = paramav.d(m);
        if (str != null)
          this.j = Typeface.create(str, this.i); 
      } 
      return;
    } 
    if (paramav.g(a.j.TextAppearance_android_typeface)) {
      Typeface typeface;
      this.k = false;
      switch (paramav.a(a.j.TextAppearance_android_typeface, 1)) {
        default:
          return;
        case 3:
          typeface = Typeface.MONOSPACE;
          break;
        case 2:
          typeface = Typeface.SERIF;
          break;
        case 1:
          typeface = Typeface.SANS_SERIF;
          break;
      } 
      this.j = typeface;
    } 
  }
  
  private void a(Drawable paramDrawable, at paramat) {
    if (paramDrawable != null && paramat != null)
      k.a(paramDrawable, paramat, this.a.getDrawableState()); 
  }
  
  private void b(int paramInt, float paramFloat) { this.h.a(paramInt, paramFloat); }
  
  void a() {
    if (this.b != null || this.c != null || this.d != null || this.e != null) {
      Drawable[] arrayOfDrawable = this.a.getCompoundDrawables();
      a(arrayOfDrawable[0], this.b);
      a(arrayOfDrawable[1], this.c);
      a(arrayOfDrawable[2], this.d);
      a(arrayOfDrawable[3], this.e);
    } 
    if (Build.VERSION.SDK_INT >= 17 && (this.f != null || this.g != null)) {
      Drawable[] arrayOfDrawable = this.a.getCompoundDrawablesRelative();
      a(arrayOfDrawable[0], this.f);
      a(arrayOfDrawable[2], this.g);
    } 
  }
  
  void a(int paramInt) { this.h.a(paramInt); }
  
  void a(int paramInt, float paramFloat) {
    if (!b.a && !c())
      b(paramInt, paramFloat); 
  }
  
  void a(int paramInt1, int paramInt2, int paramInt3, int paramInt4) { this.h.a(paramInt1, paramInt2, paramInt3, paramInt4); }
  
  void a(Context paramContext, int paramInt) {
    av av = av.a(paramContext, paramInt, a.j.TextAppearance);
    if (av.g(a.j.TextAppearance_textAllCaps))
      a(av.a(a.j.TextAppearance_textAllCaps, false)); 
    if (Build.VERSION.SDK_INT < 23 && av.g(a.j.TextAppearance_android_textColor)) {
      ColorStateList colorStateList = av.e(a.j.TextAppearance_android_textColor);
      if (colorStateList != null)
        this.a.setTextColor(colorStateList); 
    } 
    if (av.g(a.j.TextAppearance_android_textSize) && av.e(a.j.TextAppearance_android_textSize, -1) == 0)
      this.a.setTextSize(0, 0.0F); 
    a(paramContext, av);
    av.a();
    Typeface typeface = this.j;
    if (typeface != null)
      this.a.setTypeface(typeface, this.i); 
  }
  
  @SuppressLint({"NewApi"})
  void a(AttributeSet paramAttributeSet, int paramInt) {
    boolean bool2;
    boolean bool1;
    Context context = this.a.getContext();
    ColorStateList colorStateList1 = k.a();
    av av2 = av.a(context, paramAttributeSet, a.j.AppCompatTextHelper, paramInt, 0);
    int m = av2.g(a.j.AppCompatTextHelper_android_textAppearance, -1);
    if (av2.g(a.j.AppCompatTextHelper_android_drawableLeft))
      this.b = a(context, colorStateList1, av2.g(a.j.AppCompatTextHelper_android_drawableLeft, 0)); 
    if (av2.g(a.j.AppCompatTextHelper_android_drawableTop))
      this.c = a(context, colorStateList1, av2.g(a.j.AppCompatTextHelper_android_drawableTop, 0)); 
    if (av2.g(a.j.AppCompatTextHelper_android_drawableRight))
      this.d = a(context, colorStateList1, av2.g(a.j.AppCompatTextHelper_android_drawableRight, 0)); 
    if (av2.g(a.j.AppCompatTextHelper_android_drawableBottom))
      this.e = a(context, colorStateList1, av2.g(a.j.AppCompatTextHelper_android_drawableBottom, 0)); 
    if (Build.VERSION.SDK_INT >= 17) {
      if (av2.g(a.j.AppCompatTextHelper_android_drawableStart))
        this.f = a(context, colorStateList1, av2.g(a.j.AppCompatTextHelper_android_drawableStart, 0)); 
      if (av2.g(a.j.AppCompatTextHelper_android_drawableEnd))
        this.g = a(context, colorStateList1, av2.g(a.j.AppCompatTextHelper_android_drawableEnd, 0)); 
    } 
    av2.a();
    boolean bool4 = this.a.getTransformationMethod() instanceof android.text.method.PasswordTransformationMethod;
    boolean bool3 = true;
    av2 = null;
    av av3 = null;
    ColorStateList colorStateList2 = null;
    if (m != -1) {
      av3 = av.a(context, m, a.j.TextAppearance);
      if (!bool4 && av3.g(a.j.TextAppearance_textAllCaps)) {
        bool1 = av3.a(a.j.TextAppearance_textAllCaps, false);
        bool2 = true;
      } else {
        bool2 = false;
        bool1 = bool2;
      } 
      a(context, av3);
      if (Build.VERSION.SDK_INT < 23) {
        if (av3.g(a.j.TextAppearance_android_textColor)) {
          ColorStateList colorStateList = av3.e(a.j.TextAppearance_android_textColor);
        } else {
          av2 = null;
        } 
        if (av3.g(a.j.TextAppearance_android_textColorHint)) {
          ColorStateList colorStateList = av3.e(a.j.TextAppearance_android_textColorHint);
        } else {
          colorStateList1 = null;
        } 
        if (av3.g(a.j.TextAppearance_android_textColorLink))
          colorStateList2 = av3.e(a.j.TextAppearance_android_textColorLink); 
      } else {
        colorStateList2 = null;
        ColorStateList colorStateList = colorStateList2;
      } 
      av3.a();
    } else {
      bool2 = false;
      bool1 = bool2;
      colorStateList2 = null;
      colorStateList1 = colorStateList2;
      av2 = av3;
    } 
    av av4 = av.a(context, paramAttributeSet, a.j.TextAppearance, paramInt, 0);
    if (!bool4 && av4.g(a.j.TextAppearance_textAllCaps)) {
      bool1 = av4.a(a.j.TextAppearance_textAllCaps, false);
      bool2 = bool3;
    } 
    ColorStateList colorStateList4 = av2;
    ColorStateList colorStateList5 = colorStateList2;
    ColorStateList colorStateList3 = colorStateList1;
    if (Build.VERSION.SDK_INT < 23) {
      ColorStateList colorStateList;
      if (av4.g(a.j.TextAppearance_android_textColor))
        colorStateList = av4.e(a.j.TextAppearance_android_textColor); 
      if (av4.g(a.j.TextAppearance_android_textColorHint))
        colorStateList1 = av4.e(a.j.TextAppearance_android_textColorHint); 
      colorStateList4 = colorStateList;
      colorStateList5 = colorStateList2;
      colorStateList3 = colorStateList1;
      if (av4.g(a.j.TextAppearance_android_textColorLink)) {
        colorStateList5 = av4.e(a.j.TextAppearance_android_textColorLink);
        colorStateList3 = colorStateList1;
        colorStateList4 = colorStateList;
      } 
    } 
    if (Build.VERSION.SDK_INT >= 28 && av4.g(a.j.TextAppearance_android_textSize) && av4.e(a.j.TextAppearance_android_textSize, -1) == 0)
      this.a.setTextSize(0, 0.0F); 
    a(context, av4);
    av4.a();
    if (colorStateList4 != null)
      this.a.setTextColor(colorStateList4); 
    if (colorStateList3 != null)
      this.a.setHintTextColor(colorStateList3); 
    if (colorStateList5 != null)
      this.a.setLinkTextColor(colorStateList5); 
    if (!bool4 && bool2)
      a(bool1); 
    Typeface typeface = this.j;
    if (typeface != null)
      this.a.setTypeface(typeface, this.i); 
    this.h.a(paramAttributeSet, paramInt);
    if (b.a && this.h.a() != 0) {
      int[] arrayOfInt = this.h.e();
      if (arrayOfInt.length > 0)
        if (this.a.getAutoSizeStepGranularity() != -1.0F) {
          this.a.setAutoSizeTextTypeUniformWithConfiguration(this.h.c(), this.h.d(), this.h.b(), 0);
        } else {
          this.a.setAutoSizeTextTypeUniformWithPresetSizes(arrayOfInt, 0);
        }  
    } 
    av av1 = av.a(context, paramAttributeSet, a.j.AppCompatTextView);
    paramInt = av1.e(a.j.AppCompatTextView_firstBaselineToTopHeight, -1);
    m = av1.e(a.j.AppCompatTextView_lastBaselineToBottomHeight, -1);
    int n = av1.e(a.j.AppCompatTextView_lineHeight, -1);
    av1.a();
    if (paramInt != -1)
      p.a(this.a, paramInt); 
    if (m != -1)
      p.b(this.a, m); 
    if (n != -1)
      p.c(this.a, n); 
  }
  
  void a(WeakReference<TextView> paramWeakReference, Typeface paramTypeface) {
    if (this.k) {
      this.j = paramTypeface;
      TextView textView = (TextView)paramWeakReference.get();
      if (textView != null)
        textView.setTypeface(paramTypeface, this.i); 
    } 
  }
  
  void a(boolean paramBoolean) { this.a.setAllCaps(paramBoolean); }
  
  void a(boolean paramBoolean, int paramInt1, int paramInt2, int paramInt3, int paramInt4) {
    if (!b.a)
      b(); 
  }
  
  void a(int[] paramArrayOfInt, int paramInt) { this.h.a(paramArrayOfInt, paramInt); }
  
  void b() { this.h.f(); }
  
  boolean c() { return this.h.g(); }
  
  int d() { return this.h.a(); }
  
  int e() { return this.h.b(); }
  
  int f() { return this.h.c(); }
  
  int g() { return this.h.d(); }
  
  int[] h() { return this.h.e(); }
}
