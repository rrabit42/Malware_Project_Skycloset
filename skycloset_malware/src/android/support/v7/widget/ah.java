package android.support.v7.widget;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.drawable.Drawable;
import android.support.v4.f.d;
import android.support.v4.f.r;
import android.support.v7.a.a;
import android.util.AttributeSet;
import android.view.View;
import android.view.ViewGroup;
import android.view.accessibility.AccessibilityEvent;
import android.view.accessibility.AccessibilityNodeInfo;

public class ah extends ViewGroup {
  private boolean a = true;
  
  private int b = -1;
  
  private int c = 0;
  
  private int d;
  
  private int e = 8388659;
  
  private int f;
  
  private float g;
  
  private boolean h;
  
  private int[] i;
  
  private int[] j;
  
  private Drawable k;
  
  private int l;
  
  private int m;
  
  private int n;
  
  private int o;
  
  public ah(Context paramContext) { this(paramContext, null); }
  
  public ah(Context paramContext, AttributeSet paramAttributeSet) { this(paramContext, paramAttributeSet, 0); }
  
  public ah(Context paramContext, AttributeSet paramAttributeSet, int paramInt) {
    super(paramContext, paramAttributeSet, paramInt);
    av av = av.a(paramContext, paramAttributeSet, a.j.LinearLayoutCompat, paramInt, 0);
    paramInt = av.a(a.j.LinearLayoutCompat_android_orientation, -1);
    if (paramInt >= 0)
      setOrientation(paramInt); 
    paramInt = av.a(a.j.LinearLayoutCompat_android_gravity, -1);
    if (paramInt >= 0)
      setGravity(paramInt); 
    boolean bool = av.a(a.j.LinearLayoutCompat_android_baselineAligned, true);
    if (!bool)
      setBaselineAligned(bool); 
    this.g = av.a(a.j.LinearLayoutCompat_android_weightSum, -1.0F);
    this.b = av.a(a.j.LinearLayoutCompat_android_baselineAlignedChildIndex, -1);
    this.h = av.a(a.j.LinearLayoutCompat_measureWithLargestChild, false);
    setDividerDrawable(av.a(a.j.LinearLayoutCompat_divider));
    this.n = av.a(a.j.LinearLayoutCompat_showDividers, 0);
    this.o = av.e(a.j.LinearLayoutCompat_dividerPadding, 0);
    av.a();
  }
  
  private void a(View paramView, int paramInt1, int paramInt2, int paramInt3, int paramInt4) { paramView.layout(paramInt1, paramInt2, paramInt3 + paramInt1, paramInt4 + paramInt2); }
  
  private void c(int paramInt1, int paramInt2) {
    int i1 = View.MeasureSpec.makeMeasureSpec(getMeasuredWidth(), 1073741824);
    for (byte b1 = 0; b1 < paramInt1; b1++) {
      View view = b(b1);
      if (view.getVisibility() != 8) {
        a a1 = (a)view.getLayoutParams();
        if (a1.width == -1) {
          int i2 = a1.height;
          a1.height = view.getMeasuredHeight();
          measureChildWithMargins(view, i1, 0, paramInt2, 0);
          a1.height = i2;
        } 
      } 
    } 
  }
  
  private void d(int paramInt1, int paramInt2) {
    int i1 = View.MeasureSpec.makeMeasureSpec(getMeasuredHeight(), 1073741824);
    for (byte b1 = 0; b1 < paramInt1; b1++) {
      View view = b(b1);
      if (view.getVisibility() != 8) {
        a a1 = (a)view.getLayoutParams();
        if (a1.height == -1) {
          int i2 = a1.width;
          a1.width = view.getMeasuredWidth();
          measureChildWithMargins(view, paramInt2, 0, i1, 0);
          a1.width = i2;
        } 
      } 
    } 
  }
  
  int a(View paramView) { return 0; }
  
  int a(View paramView, int paramInt) { return 0; }
  
  void a(int paramInt1, int paramInt2) { // Byte code:
    //   0: aload_0
    //   1: iconst_0
    //   2: putfield f : I
    //   5: aload_0
    //   6: invokevirtual getVirtualChildCount : ()I
    //   9: istore #13
    //   11: iload_1
    //   12: invokestatic getMode : (I)I
    //   15: istore #20
    //   17: iload_2
    //   18: invokestatic getMode : (I)I
    //   21: istore #6
    //   23: aload_0
    //   24: getfield b : I
    //   27: istore #21
    //   29: aload_0
    //   30: getfield h : Z
    //   33: istore #22
    //   35: iconst_0
    //   36: istore #5
    //   38: iload #5
    //   40: istore #15
    //   42: iload #15
    //   44: istore #9
    //   46: iload #9
    //   48: istore #10
    //   50: iload #10
    //   52: istore #8
    //   54: iload #8
    //   56: istore #11
    //   58: iload #11
    //   60: istore #14
    //   62: iload #14
    //   64: istore #12
    //   66: fconst_0
    //   67: fstore_3
    //   68: iconst_1
    //   69: istore #7
    //   71: iload #11
    //   73: iload #13
    //   75: if_icmpge -> 647
    //   78: aload_0
    //   79: iload #11
    //   81: invokevirtual b : (I)Landroid/view/View;
    //   84: astore #23
    //   86: aload #23
    //   88: ifnonnull -> 109
    //   91: aload_0
    //   92: aload_0
    //   93: getfield f : I
    //   96: aload_0
    //   97: iload #11
    //   99: invokevirtual d : (I)I
    //   102: iadd
    //   103: putfield f : I
    //   106: goto -> 638
    //   109: aload #23
    //   111: invokevirtual getVisibility : ()I
    //   114: bipush #8
    //   116: if_icmpne -> 135
    //   119: iload #11
    //   121: aload_0
    //   122: aload #23
    //   124: iload #11
    //   126: invokevirtual a : (Landroid/view/View;I)I
    //   129: iadd
    //   130: istore #11
    //   132: goto -> 106
    //   135: aload_0
    //   136: iload #11
    //   138: invokevirtual c : (I)Z
    //   141: ifeq -> 157
    //   144: aload_0
    //   145: aload_0
    //   146: getfield f : I
    //   149: aload_0
    //   150: getfield m : I
    //   153: iadd
    //   154: putfield f : I
    //   157: aload #23
    //   159: invokevirtual getLayoutParams : ()Landroid/view/ViewGroup$LayoutParams;
    //   162: checkcast android/support/v7/widget/ah$a
    //   165: astore #24
    //   167: fload_3
    //   168: aload #24
    //   170: getfield g : F
    //   173: fadd
    //   174: fstore_3
    //   175: iload #6
    //   177: ldc 1073741824
    //   179: if_icmpne -> 235
    //   182: aload #24
    //   184: getfield height : I
    //   187: ifne -> 235
    //   190: aload #24
    //   192: getfield g : F
    //   195: fconst_0
    //   196: fcmpl
    //   197: ifle -> 235
    //   200: aload_0
    //   201: getfield f : I
    //   204: istore #14
    //   206: aload_0
    //   207: iload #14
    //   209: aload #24
    //   211: getfield topMargin : I
    //   214: iload #14
    //   216: iadd
    //   217: aload #24
    //   219: getfield bottomMargin : I
    //   222: iadd
    //   223: invokestatic max : (II)I
    //   226: putfield f : I
    //   229: iconst_1
    //   230: istore #14
    //   232: goto -> 378
    //   235: aload #24
    //   237: getfield height : I
    //   240: ifne -> 266
    //   243: aload #24
    //   245: getfield g : F
    //   248: fconst_0
    //   249: fcmpl
    //   250: ifle -> 266
    //   253: aload #24
    //   255: bipush #-2
    //   257: putfield height : I
    //   260: iconst_0
    //   261: istore #16
    //   263: goto -> 270
    //   266: ldc -2147483648
    //   268: istore #16
    //   270: fload_3
    //   271: fconst_0
    //   272: fcmpl
    //   273: ifne -> 285
    //   276: aload_0
    //   277: getfield f : I
    //   280: istore #17
    //   282: goto -> 288
    //   285: iconst_0
    //   286: istore #17
    //   288: aload_0
    //   289: aload #23
    //   291: iload #11
    //   293: iload_1
    //   294: iconst_0
    //   295: iload_2
    //   296: iload #17
    //   298: invokevirtual a : (Landroid/view/View;IIIII)V
    //   301: iload #16
    //   303: ldc -2147483648
    //   305: if_icmpeq -> 315
    //   308: aload #24
    //   310: iload #16
    //   312: putfield height : I
    //   315: aload #23
    //   317: invokevirtual getMeasuredHeight : ()I
    //   320: istore #16
    //   322: aload_0
    //   323: getfield f : I
    //   326: istore #17
    //   328: aload_0
    //   329: iload #17
    //   331: iload #17
    //   333: iload #16
    //   335: iadd
    //   336: aload #24
    //   338: getfield topMargin : I
    //   341: iadd
    //   342: aload #24
    //   344: getfield bottomMargin : I
    //   347: iadd
    //   348: aload_0
    //   349: aload #23
    //   351: invokevirtual b : (Landroid/view/View;)I
    //   354: iadd
    //   355: invokestatic max : (II)I
    //   358: putfield f : I
    //   361: iload #22
    //   363: ifeq -> 378
    //   366: iload #16
    //   368: iload #9
    //   370: invokestatic max : (II)I
    //   373: istore #9
    //   375: goto -> 378
    //   378: iload #11
    //   380: istore #18
    //   382: iload #21
    //   384: iflt -> 404
    //   387: iload #21
    //   389: iload #18
    //   391: iconst_1
    //   392: iadd
    //   393: if_icmpne -> 404
    //   396: aload_0
    //   397: aload_0
    //   398: getfield f : I
    //   401: putfield c : I
    //   404: iload #18
    //   406: iload #21
    //   408: if_icmpge -> 434
    //   411: aload #24
    //   413: getfield g : F
    //   416: fconst_0
    //   417: fcmpl
    //   418: ifgt -> 424
    //   421: goto -> 434
    //   424: new java/lang/RuntimeException
    //   427: dup
    //   428: ldc 'A child of LinearLayout with index less than mBaselineAlignedChildIndex has weight > 0, which won't work.  Either remove the weight, or don't set mBaselineAlignedChildIndex.'
    //   430: invokespecial <init> : (Ljava/lang/String;)V
    //   433: athrow
    //   434: iload #20
    //   436: ldc 1073741824
    //   438: if_icmpeq -> 460
    //   441: aload #24
    //   443: getfield width : I
    //   446: iconst_m1
    //   447: if_icmpne -> 460
    //   450: iconst_1
    //   451: istore #11
    //   453: iload #11
    //   455: istore #12
    //   457: goto -> 463
    //   460: iconst_0
    //   461: istore #11
    //   463: aload #24
    //   465: getfield leftMargin : I
    //   468: aload #24
    //   470: getfield rightMargin : I
    //   473: iadd
    //   474: istore #16
    //   476: aload #23
    //   478: invokevirtual getMeasuredWidth : ()I
    //   481: iload #16
    //   483: iadd
    //   484: istore #17
    //   486: iload #15
    //   488: iload #17
    //   490: invokestatic max : (II)I
    //   493: istore #15
    //   495: iload #5
    //   497: aload #23
    //   499: invokevirtual getMeasuredState : ()I
    //   502: invokestatic combineMeasuredStates : (II)I
    //   505: istore #19
    //   507: iload #7
    //   509: ifeq -> 527
    //   512: aload #24
    //   514: getfield width : I
    //   517: iconst_m1
    //   518: if_icmpne -> 527
    //   521: iconst_1
    //   522: istore #5
    //   524: goto -> 530
    //   527: iconst_0
    //   528: istore #5
    //   530: aload #24
    //   532: getfield g : F
    //   535: fconst_0
    //   536: fcmpl
    //   537: ifle -> 572
    //   540: iload #11
    //   542: ifeq -> 548
    //   545: goto -> 552
    //   548: iload #17
    //   550: istore #16
    //   552: iload #10
    //   554: iload #16
    //   556: invokestatic max : (II)I
    //   559: istore #10
    //   561: iload #8
    //   563: istore #7
    //   565: iload #10
    //   567: istore #8
    //   569: goto -> 597
    //   572: iload #11
    //   574: ifeq -> 580
    //   577: goto -> 584
    //   580: iload #17
    //   582: istore #16
    //   584: iload #8
    //   586: iload #16
    //   588: invokestatic max : (II)I
    //   591: istore #7
    //   593: iload #10
    //   595: istore #8
    //   597: aload_0
    //   598: aload #23
    //   600: iload #18
    //   602: invokevirtual a : (Landroid/view/View;I)I
    //   605: istore #16
    //   607: iload #5
    //   609: istore #11
    //   611: iload #8
    //   613: istore #10
    //   615: iload #7
    //   617: istore #8
    //   619: iload #19
    //   621: istore #5
    //   623: iload #16
    //   625: iload #18
    //   627: iadd
    //   628: istore #16
    //   630: iload #11
    //   632: istore #7
    //   634: iload #16
    //   636: istore #11
    //   638: iload #11
    //   640: iconst_1
    //   641: iadd
    //   642: istore #11
    //   644: goto -> 71
    //   647: aload_0
    //   648: getfield f : I
    //   651: ifle -> 679
    //   654: aload_0
    //   655: iload #13
    //   657: invokevirtual c : (I)Z
    //   660: ifeq -> 679
    //   663: aload_0
    //   664: aload_0
    //   665: getfield f : I
    //   668: aload_0
    //   669: getfield m : I
    //   672: iadd
    //   673: putfield f : I
    //   676: goto -> 679
    //   679: iload #13
    //   681: istore #16
    //   683: iload #22
    //   685: ifeq -> 839
    //   688: iload #6
    //   690: istore #11
    //   692: iload #11
    //   694: ldc -2147483648
    //   696: if_icmpeq -> 704
    //   699: iload #11
    //   701: ifne -> 839
    //   704: aload_0
    //   705: iconst_0
    //   706: putfield f : I
    //   709: iconst_0
    //   710: istore #11
    //   712: iload #11
    //   714: iload #16
    //   716: if_icmpge -> 839
    //   719: aload_0
    //   720: iload #11
    //   722: invokevirtual b : (I)Landroid/view/View;
    //   725: astore #23
    //   727: aload #23
    //   729: ifnonnull -> 754
    //   732: aload_0
    //   733: getfield f : I
    //   736: aload_0
    //   737: iload #11
    //   739: invokevirtual d : (I)I
    //   742: iadd
    //   743: istore #13
    //   745: aload_0
    //   746: iload #13
    //   748: putfield f : I
    //   751: goto -> 830
    //   754: aload #23
    //   756: invokevirtual getVisibility : ()I
    //   759: bipush #8
    //   761: if_icmpne -> 780
    //   764: iload #11
    //   766: aload_0
    //   767: aload #23
    //   769: iload #11
    //   771: invokevirtual a : (Landroid/view/View;I)I
    //   774: iadd
    //   775: istore #11
    //   777: goto -> 830
    //   780: aload #23
    //   782: invokevirtual getLayoutParams : ()Landroid/view/ViewGroup$LayoutParams;
    //   785: checkcast android/support/v7/widget/ah$a
    //   788: astore #24
    //   790: aload_0
    //   791: getfield f : I
    //   794: istore #13
    //   796: iload #13
    //   798: iload #13
    //   800: iload #9
    //   802: iadd
    //   803: aload #24
    //   805: getfield topMargin : I
    //   808: iadd
    //   809: aload #24
    //   811: getfield bottomMargin : I
    //   814: iadd
    //   815: aload_0
    //   816: aload #23
    //   818: invokevirtual b : (Landroid/view/View;)I
    //   821: iadd
    //   822: invokestatic max : (II)I
    //   825: istore #13
    //   827: goto -> 745
    //   830: iload #11
    //   832: iconst_1
    //   833: iadd
    //   834: istore #11
    //   836: goto -> 712
    //   839: iload #6
    //   841: istore #11
    //   843: aload_0
    //   844: aload_0
    //   845: getfield f : I
    //   848: aload_0
    //   849: invokevirtual getPaddingTop : ()I
    //   852: aload_0
    //   853: invokevirtual getPaddingBottom : ()I
    //   856: iadd
    //   857: iadd
    //   858: putfield f : I
    //   861: aload_0
    //   862: getfield f : I
    //   865: aload_0
    //   866: invokevirtual getSuggestedMinimumHeight : ()I
    //   869: invokestatic max : (II)I
    //   872: iload_2
    //   873: iconst_0
    //   874: invokestatic resolveSizeAndState : (III)I
    //   877: istore #17
    //   879: ldc 16777215
    //   881: iload #17
    //   883: iand
    //   884: aload_0
    //   885: getfield f : I
    //   888: isub
    //   889: istore #13
    //   891: iload #14
    //   893: ifne -> 1025
    //   896: iload #13
    //   898: ifeq -> 910
    //   901: fload_3
    //   902: fconst_0
    //   903: fcmpl
    //   904: ifle -> 910
    //   907: goto -> 1025
    //   910: iload #8
    //   912: iload #10
    //   914: invokestatic max : (II)I
    //   917: istore #8
    //   919: iload #22
    //   921: ifeq -> 1014
    //   924: iload #11
    //   926: ldc 1073741824
    //   928: if_icmpeq -> 1014
    //   931: iconst_0
    //   932: istore #6
    //   934: iload #6
    //   936: iload #16
    //   938: if_icmpge -> 1014
    //   941: aload_0
    //   942: iload #6
    //   944: invokevirtual b : (I)Landroid/view/View;
    //   947: astore #23
    //   949: aload #23
    //   951: ifnull -> 1005
    //   954: aload #23
    //   956: invokevirtual getVisibility : ()I
    //   959: bipush #8
    //   961: if_icmpne -> 967
    //   964: goto -> 1005
    //   967: aload #23
    //   969: invokevirtual getLayoutParams : ()Landroid/view/ViewGroup$LayoutParams;
    //   972: checkcast android/support/v7/widget/ah$a
    //   975: getfield g : F
    //   978: fconst_0
    //   979: fcmpl
    //   980: ifle -> 1005
    //   983: aload #23
    //   985: aload #23
    //   987: invokevirtual getMeasuredWidth : ()I
    //   990: ldc 1073741824
    //   992: invokestatic makeMeasureSpec : (II)I
    //   995: iload #9
    //   997: ldc 1073741824
    //   999: invokestatic makeMeasureSpec : (II)I
    //   1002: invokevirtual measure : (II)V
    //   1005: iload #6
    //   1007: iconst_1
    //   1008: iadd
    //   1009: istore #6
    //   1011: goto -> 934
    //   1014: iload #5
    //   1016: istore #6
    //   1018: iload #8
    //   1020: istore #5
    //   1022: goto -> 1467
    //   1025: aload_0
    //   1026: getfield g : F
    //   1029: fstore #4
    //   1031: fload #4
    //   1033: fconst_0
    //   1034: fcmpl
    //   1035: ifle -> 1041
    //   1038: fload #4
    //   1040: fstore_3
    //   1041: aload_0
    //   1042: iconst_0
    //   1043: putfield f : I
    //   1046: iconst_0
    //   1047: istore #9
    //   1049: iload #8
    //   1051: istore #6
    //   1053: iload #13
    //   1055: istore #8
    //   1057: iload #9
    //   1059: iload #16
    //   1061: if_icmpge -> 1437
    //   1064: aload_0
    //   1065: iload #9
    //   1067: invokevirtual b : (I)Landroid/view/View;
    //   1070: astore #23
    //   1072: aload #23
    //   1074: invokevirtual getVisibility : ()I
    //   1077: bipush #8
    //   1079: if_icmpne -> 1085
    //   1082: goto -> 1428
    //   1085: aload #23
    //   1087: invokevirtual getLayoutParams : ()Landroid/view/ViewGroup$LayoutParams;
    //   1090: checkcast android/support/v7/widget/ah$a
    //   1093: astore #24
    //   1095: aload #24
    //   1097: getfield g : F
    //   1100: fstore #4
    //   1102: fload #4
    //   1104: fconst_0
    //   1105: fcmpl
    //   1106: ifle -> 1273
    //   1109: iload #8
    //   1111: i2f
    //   1112: fload #4
    //   1114: fmul
    //   1115: fload_3
    //   1116: fdiv
    //   1117: f2i
    //   1118: istore #13
    //   1120: aload_0
    //   1121: invokevirtual getPaddingLeft : ()I
    //   1124: istore #14
    //   1126: aload_0
    //   1127: invokevirtual getPaddingRight : ()I
    //   1130: istore #18
    //   1132: iload #8
    //   1134: iload #13
    //   1136: isub
    //   1137: istore #10
    //   1139: aload #24
    //   1141: getfield leftMargin : I
    //   1144: istore #8
    //   1146: aload #24
    //   1148: getfield rightMargin : I
    //   1151: istore #19
    //   1153: aload #24
    //   1155: getfield width : I
    //   1158: istore #21
    //   1160: fload_3
    //   1161: fload #4
    //   1163: fsub
    //   1164: fstore_3
    //   1165: iload_1
    //   1166: iload #14
    //   1168: iload #18
    //   1170: iadd
    //   1171: iload #8
    //   1173: iadd
    //   1174: iload #19
    //   1176: iadd
    //   1177: iload #21
    //   1179: invokestatic getChildMeasureSpec : (III)I
    //   1182: istore #14
    //   1184: aload #24
    //   1186: getfield height : I
    //   1189: ifne -> 1214
    //   1192: iload #11
    //   1194: ldc 1073741824
    //   1196: if_icmpeq -> 1202
    //   1199: goto -> 1214
    //   1202: iload #13
    //   1204: ifle -> 1233
    //   1207: iload #13
    //   1209: istore #8
    //   1211: goto -> 1236
    //   1214: aload #23
    //   1216: invokevirtual getMeasuredHeight : ()I
    //   1219: iload #13
    //   1221: iadd
    //   1222: istore #13
    //   1224: iload #13
    //   1226: istore #8
    //   1228: iload #13
    //   1230: ifge -> 1236
    //   1233: iconst_0
    //   1234: istore #8
    //   1236: aload #23
    //   1238: iload #14
    //   1240: iload #8
    //   1242: ldc 1073741824
    //   1244: invokestatic makeMeasureSpec : (II)I
    //   1247: invokevirtual measure : (II)V
    //   1250: iload #5
    //   1252: aload #23
    //   1254: invokevirtual getMeasuredState : ()I
    //   1257: sipush #-256
    //   1260: iand
    //   1261: invokestatic combineMeasuredStates : (II)I
    //   1264: istore #5
    //   1266: iload #10
    //   1268: istore #8
    //   1270: goto -> 1273
    //   1273: aload #24
    //   1275: getfield leftMargin : I
    //   1278: aload #24
    //   1280: getfield rightMargin : I
    //   1283: iadd
    //   1284: istore #13
    //   1286: aload #23
    //   1288: invokevirtual getMeasuredWidth : ()I
    //   1291: iload #13
    //   1293: iadd
    //   1294: istore #14
    //   1296: iload #15
    //   1298: iload #14
    //   1300: invokestatic max : (II)I
    //   1303: istore #15
    //   1305: iload #20
    //   1307: ldc 1073741824
    //   1309: if_icmpeq -> 1327
    //   1312: aload #24
    //   1314: getfield width : I
    //   1317: iconst_m1
    //   1318: if_icmpne -> 1327
    //   1321: iconst_1
    //   1322: istore #10
    //   1324: goto -> 1330
    //   1327: iconst_0
    //   1328: istore #10
    //   1330: iload #10
    //   1332: ifeq -> 1342
    //   1335: iload #13
    //   1337: istore #10
    //   1339: goto -> 1346
    //   1342: iload #14
    //   1344: istore #10
    //   1346: iload #6
    //   1348: iload #10
    //   1350: invokestatic max : (II)I
    //   1353: istore #10
    //   1355: iload #7
    //   1357: ifeq -> 1375
    //   1360: aload #24
    //   1362: getfield width : I
    //   1365: iconst_m1
    //   1366: if_icmpne -> 1375
    //   1369: iconst_1
    //   1370: istore #6
    //   1372: goto -> 1378
    //   1375: iconst_0
    //   1376: istore #6
    //   1378: aload_0
    //   1379: getfield f : I
    //   1382: istore #7
    //   1384: aload_0
    //   1385: iload #7
    //   1387: aload #23
    //   1389: invokevirtual getMeasuredHeight : ()I
    //   1392: iload #7
    //   1394: iadd
    //   1395: aload #24
    //   1397: getfield topMargin : I
    //   1400: iadd
    //   1401: aload #24
    //   1403: getfield bottomMargin : I
    //   1406: iadd
    //   1407: aload_0
    //   1408: aload #23
    //   1410: invokevirtual b : (Landroid/view/View;)I
    //   1413: iadd
    //   1414: invokestatic max : (II)I
    //   1417: putfield f : I
    //   1420: iload #6
    //   1422: istore #7
    //   1424: iload #10
    //   1426: istore #6
    //   1428: iload #9
    //   1430: iconst_1
    //   1431: iadd
    //   1432: istore #9
    //   1434: goto -> 1057
    //   1437: aload_0
    //   1438: aload_0
    //   1439: getfield f : I
    //   1442: aload_0
    //   1443: invokevirtual getPaddingTop : ()I
    //   1446: aload_0
    //   1447: invokevirtual getPaddingBottom : ()I
    //   1450: iadd
    //   1451: iadd
    //   1452: putfield f : I
    //   1455: iload #6
    //   1457: istore #8
    //   1459: iload #5
    //   1461: istore #6
    //   1463: iload #8
    //   1465: istore #5
    //   1467: iload #7
    //   1469: ifne -> 1482
    //   1472: iload #20
    //   1474: ldc 1073741824
    //   1476: if_icmpeq -> 1482
    //   1479: goto -> 1486
    //   1482: iload #15
    //   1484: istore #5
    //   1486: aload_0
    //   1487: iload #5
    //   1489: aload_0
    //   1490: invokevirtual getPaddingLeft : ()I
    //   1493: aload_0
    //   1494: invokevirtual getPaddingRight : ()I
    //   1497: iadd
    //   1498: iadd
    //   1499: aload_0
    //   1500: invokevirtual getSuggestedMinimumWidth : ()I
    //   1503: invokestatic max : (II)I
    //   1506: iload_1
    //   1507: iload #6
    //   1509: invokestatic resolveSizeAndState : (III)I
    //   1512: iload #17
    //   1514: invokevirtual setMeasuredDimension : (II)V
    //   1517: iload #12
    //   1519: ifeq -> 1529
    //   1522: aload_0
    //   1523: iload #16
    //   1525: iload_2
    //   1526: invokespecial c : (II)V
    //   1529: return }
  
  void a(int paramInt1, int paramInt2, int paramInt3, int paramInt4) {
    int i1 = getPaddingLeft();
    int i2 = paramInt3 - paramInt1;
    int i3 = getPaddingRight();
    int i4 = getPaddingRight();
    int i5 = getVirtualChildCount();
    int i6 = this.e;
    paramInt1 = i6 & 0x70;
    if (paramInt1 != 16) {
      if (paramInt1 != 80) {
        paramInt1 = getPaddingTop();
      } else {
        paramInt1 = getPaddingTop() + paramInt4 - paramInt2 - this.f;
      } 
    } else {
      paramInt1 = getPaddingTop() + (paramInt4 - paramInt2 - this.f) / 2;
    } 
    for (paramInt2 = 0; paramInt2 < i5; paramInt2++) {
      View view = b(paramInt2);
      if (view == null) {
        paramInt3 = paramInt1 + d(paramInt2);
      } else {
        paramInt3 = paramInt1;
        if (view.getVisibility() != 8) {
          int i8 = view.getMeasuredWidth();
          int i7 = view.getMeasuredHeight();
          a a1 = (a)view.getLayoutParams();
          paramInt4 = a1.h;
          paramInt3 = paramInt4;
          if (paramInt4 < 0)
            paramInt3 = i6 & 0x800007; 
          paramInt3 = d.a(paramInt3, r.d(this)) & 0x7;
          if (paramInt3 != 1) {
            if (paramInt3 != 5) {
              paramInt3 = a1.leftMargin + i1;
            } else {
              paramInt3 = i2 - i3 - i8;
              paramInt3 -= a1.rightMargin;
            } 
          } else {
            paramInt3 = (i2 - i1 - i4 - i8) / 2 + i1 + a1.leftMargin;
            paramInt3 -= a1.rightMargin;
          } 
          paramInt4 = paramInt1;
          if (c(paramInt2))
            paramInt4 = paramInt1 + this.m; 
          paramInt1 = paramInt4 + a1.topMargin;
          a(view, paramInt3, paramInt1 + a(view), i8, i7);
          paramInt3 = a1.bottomMargin;
          paramInt4 = b(view);
          paramInt2 += a(view, paramInt2);
          paramInt1 += i7 + paramInt3 + paramInt4;
          continue;
        } 
      } 
      paramInt1 = paramInt3;
      continue;
    } 
  }
  
  void a(Canvas paramCanvas) {
    int i2 = getVirtualChildCount();
    int i1;
    for (i1 = 0; i1 < i2; i1++) {
      View view = b(i1);
      if (view != null && view.getVisibility() != 8 && c(i1)) {
        a a1 = (a)view.getLayoutParams();
        a(paramCanvas, view.getTop() - a1.topMargin - this.m);
      } 
    } 
    if (c(i2)) {
      View view = b(i2 - 1);
      if (view == null) {
        i1 = getHeight() - getPaddingBottom() - this.m;
      } else {
        a a1 = (a)view.getLayoutParams();
        i1 = view.getBottom() + a1.bottomMargin;
      } 
      a(paramCanvas, i1);
    } 
  }
  
  void a(Canvas paramCanvas, int paramInt) {
    this.k.setBounds(getPaddingLeft() + this.o, paramInt, getWidth() - getPaddingRight() - this.o, this.m + paramInt);
    this.k.draw(paramCanvas);
  }
  
  void a(View paramView, int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5) { measureChildWithMargins(paramView, paramInt2, paramInt3, paramInt4, paramInt5); }
  
  int b(View paramView) { return 0; }
  
  public a b(AttributeSet paramAttributeSet) { return new a(getContext(), paramAttributeSet); }
  
  protected a b(ViewGroup.LayoutParams paramLayoutParams) { return new a(paramLayoutParams); }
  
  View b(int paramInt) { return getChildAt(paramInt); }
  
  void b(int paramInt1, int paramInt2) { // Byte code:
    //   0: aload_0
    //   1: iconst_0
    //   2: putfield f : I
    //   5: aload_0
    //   6: invokevirtual getVirtualChildCount : ()I
    //   9: istore #16
    //   11: iload_1
    //   12: invokestatic getMode : (I)I
    //   15: istore #21
    //   17: iload_2
    //   18: invokestatic getMode : (I)I
    //   21: istore #20
    //   23: aload_0
    //   24: getfield i : [I
    //   27: ifnull -> 37
    //   30: aload_0
    //   31: getfield j : [I
    //   34: ifnonnull -> 51
    //   37: aload_0
    //   38: iconst_4
    //   39: newarray int
    //   41: putfield i : [I
    //   44: aload_0
    //   45: iconst_4
    //   46: newarray int
    //   48: putfield j : [I
    //   51: aload_0
    //   52: getfield i : [I
    //   55: astore #27
    //   57: aload_0
    //   58: getfield j : [I
    //   61: astore #25
    //   63: aload #27
    //   65: iconst_3
    //   66: iconst_m1
    //   67: iastore
    //   68: aload #27
    //   70: iconst_2
    //   71: iconst_m1
    //   72: iastore
    //   73: aload #27
    //   75: iconst_1
    //   76: iconst_m1
    //   77: iastore
    //   78: aload #27
    //   80: iconst_0
    //   81: iconst_m1
    //   82: iastore
    //   83: aload #25
    //   85: iconst_3
    //   86: iconst_m1
    //   87: iastore
    //   88: aload #25
    //   90: iconst_2
    //   91: iconst_m1
    //   92: iastore
    //   93: aload #25
    //   95: iconst_1
    //   96: iconst_m1
    //   97: iastore
    //   98: aload #25
    //   100: iconst_0
    //   101: iconst_m1
    //   102: iastore
    //   103: aload_0
    //   104: getfield a : Z
    //   107: istore #23
    //   109: aload_0
    //   110: getfield h : Z
    //   113: istore #24
    //   115: iload #21
    //   117: ldc 1073741824
    //   119: if_icmpne -> 128
    //   122: iconst_1
    //   123: istore #15
    //   125: goto -> 131
    //   128: iconst_0
    //   129: istore #15
    //   131: iconst_0
    //   132: istore #8
    //   134: iload #8
    //   136: istore #7
    //   138: iload #7
    //   140: istore #13
    //   142: iload #13
    //   144: istore #6
    //   146: iload #6
    //   148: istore #11
    //   150: iload #11
    //   152: istore #12
    //   154: iload #12
    //   156: istore #9
    //   158: iload #9
    //   160: istore #10
    //   162: iconst_1
    //   163: istore #5
    //   165: fconst_0
    //   166: fstore_3
    //   167: iload #8
    //   169: iload #16
    //   171: if_icmpge -> 860
    //   174: aload_0
    //   175: iload #8
    //   177: invokevirtual b : (I)Landroid/view/View;
    //   180: astore #26
    //   182: aload #26
    //   184: ifnonnull -> 205
    //   187: aload_0
    //   188: aload_0
    //   189: getfield f : I
    //   192: aload_0
    //   193: iload #8
    //   195: invokevirtual d : (I)I
    //   198: iadd
    //   199: putfield f : I
    //   202: goto -> 851
    //   205: aload #26
    //   207: invokevirtual getVisibility : ()I
    //   210: bipush #8
    //   212: if_icmpne -> 231
    //   215: iload #8
    //   217: aload_0
    //   218: aload #26
    //   220: iload #8
    //   222: invokevirtual a : (Landroid/view/View;I)I
    //   225: iadd
    //   226: istore #8
    //   228: goto -> 202
    //   231: aload_0
    //   232: iload #8
    //   234: invokevirtual c : (I)Z
    //   237: ifeq -> 253
    //   240: aload_0
    //   241: aload_0
    //   242: getfield f : I
    //   245: aload_0
    //   246: getfield l : I
    //   249: iadd
    //   250: putfield f : I
    //   253: aload #26
    //   255: invokevirtual getLayoutParams : ()Landroid/view/ViewGroup$LayoutParams;
    //   258: checkcast android/support/v7/widget/ah$a
    //   261: astore #28
    //   263: fload_3
    //   264: aload #28
    //   266: getfield g : F
    //   269: fadd
    //   270: fstore_3
    //   271: iload #21
    //   273: ldc 1073741824
    //   275: if_icmpne -> 389
    //   278: aload #28
    //   280: getfield width : I
    //   283: ifne -> 389
    //   286: aload #28
    //   288: getfield g : F
    //   291: fconst_0
    //   292: fcmpl
    //   293: ifle -> 389
    //   296: iload #15
    //   298: ifeq -> 322
    //   301: aload_0
    //   302: getfield f : I
    //   305: aload #28
    //   307: getfield leftMargin : I
    //   310: aload #28
    //   312: getfield rightMargin : I
    //   315: iadd
    //   316: iadd
    //   317: istore #14
    //   319: goto -> 349
    //   322: aload_0
    //   323: getfield f : I
    //   326: istore #14
    //   328: iload #14
    //   330: aload #28
    //   332: getfield leftMargin : I
    //   335: iload #14
    //   337: iadd
    //   338: aload #28
    //   340: getfield rightMargin : I
    //   343: iadd
    //   344: invokestatic max : (II)I
    //   347: istore #14
    //   349: aload_0
    //   350: iload #14
    //   352: putfield f : I
    //   355: iload #23
    //   357: ifeq -> 383
    //   360: iconst_0
    //   361: iconst_0
    //   362: invokestatic makeMeasureSpec : (II)I
    //   365: istore #14
    //   367: aload #26
    //   369: iload #14
    //   371: iload #14
    //   373: invokevirtual measure : (II)V
    //   376: iload #7
    //   378: istore #14
    //   380: goto -> 573
    //   383: iconst_1
    //   384: istore #12
    //   386: goto -> 577
    //   389: aload #28
    //   391: getfield width : I
    //   394: ifne -> 420
    //   397: aload #28
    //   399: getfield g : F
    //   402: fconst_0
    //   403: fcmpl
    //   404: ifle -> 420
    //   407: aload #28
    //   409: bipush #-2
    //   411: putfield width : I
    //   414: iconst_0
    //   415: istore #14
    //   417: goto -> 424
    //   420: ldc -2147483648
    //   422: istore #14
    //   424: fload_3
    //   425: fconst_0
    //   426: fcmpl
    //   427: ifne -> 439
    //   430: aload_0
    //   431: getfield f : I
    //   434: istore #17
    //   436: goto -> 442
    //   439: iconst_0
    //   440: istore #17
    //   442: aload_0
    //   443: aload #26
    //   445: iload #8
    //   447: iload_1
    //   448: iload #17
    //   450: iload_2
    //   451: iconst_0
    //   452: invokevirtual a : (Landroid/view/View;IIIII)V
    //   455: iload #14
    //   457: ldc -2147483648
    //   459: if_icmpeq -> 469
    //   462: aload #28
    //   464: iload #14
    //   466: putfield width : I
    //   469: aload #26
    //   471: invokevirtual getMeasuredWidth : ()I
    //   474: istore #17
    //   476: iload #15
    //   478: ifeq -> 512
    //   481: aload_0
    //   482: getfield f : I
    //   485: aload #28
    //   487: getfield leftMargin : I
    //   490: iload #17
    //   492: iadd
    //   493: aload #28
    //   495: getfield rightMargin : I
    //   498: iadd
    //   499: aload_0
    //   500: aload #26
    //   502: invokevirtual b : (Landroid/view/View;)I
    //   505: iadd
    //   506: iadd
    //   507: istore #14
    //   509: goto -> 549
    //   512: aload_0
    //   513: getfield f : I
    //   516: istore #14
    //   518: iload #14
    //   520: iload #14
    //   522: iload #17
    //   524: iadd
    //   525: aload #28
    //   527: getfield leftMargin : I
    //   530: iadd
    //   531: aload #28
    //   533: getfield rightMargin : I
    //   536: iadd
    //   537: aload_0
    //   538: aload #26
    //   540: invokevirtual b : (Landroid/view/View;)I
    //   543: iadd
    //   544: invokestatic max : (II)I
    //   547: istore #14
    //   549: aload_0
    //   550: iload #14
    //   552: putfield f : I
    //   555: iload #7
    //   557: istore #14
    //   559: iload #24
    //   561: ifeq -> 573
    //   564: iload #17
    //   566: iload #7
    //   568: invokestatic max : (II)I
    //   571: istore #14
    //   573: iload #14
    //   575: istore #7
    //   577: iload #8
    //   579: istore #18
    //   581: iload #20
    //   583: ldc 1073741824
    //   585: if_icmpeq -> 607
    //   588: aload #28
    //   590: getfield height : I
    //   593: iconst_m1
    //   594: if_icmpne -> 607
    //   597: iconst_1
    //   598: istore #8
    //   600: iload #8
    //   602: istore #10
    //   604: goto -> 610
    //   607: iconst_0
    //   608: istore #8
    //   610: aload #28
    //   612: getfield topMargin : I
    //   615: aload #28
    //   617: getfield bottomMargin : I
    //   620: iadd
    //   621: istore #14
    //   623: aload #26
    //   625: invokevirtual getMeasuredHeight : ()I
    //   628: iload #14
    //   630: iadd
    //   631: istore #17
    //   633: iload #9
    //   635: aload #26
    //   637: invokevirtual getMeasuredState : ()I
    //   640: invokestatic combineMeasuredStates : (II)I
    //   643: istore #19
    //   645: iload #23
    //   647: ifeq -> 734
    //   650: aload #26
    //   652: invokevirtual getBaseline : ()I
    //   655: istore #22
    //   657: iload #22
    //   659: iconst_m1
    //   660: if_icmpeq -> 734
    //   663: aload #28
    //   665: getfield h : I
    //   668: ifge -> 680
    //   671: aload_0
    //   672: getfield e : I
    //   675: istore #9
    //   677: goto -> 687
    //   680: aload #28
    //   682: getfield h : I
    //   685: istore #9
    //   687: iload #9
    //   689: bipush #112
    //   691: iand
    //   692: iconst_4
    //   693: ishr
    //   694: bipush #-2
    //   696: iand
    //   697: iconst_1
    //   698: ishr
    //   699: istore #9
    //   701: aload #27
    //   703: iload #9
    //   705: aload #27
    //   707: iload #9
    //   709: iaload
    //   710: iload #22
    //   712: invokestatic max : (II)I
    //   715: iastore
    //   716: aload #25
    //   718: iload #9
    //   720: aload #25
    //   722: iload #9
    //   724: iaload
    //   725: iload #17
    //   727: iload #22
    //   729: isub
    //   730: invokestatic max : (II)I
    //   733: iastore
    //   734: iload #13
    //   736: iload #17
    //   738: invokestatic max : (II)I
    //   741: istore #13
    //   743: iload #5
    //   745: ifeq -> 763
    //   748: aload #28
    //   750: getfield height : I
    //   753: iconst_m1
    //   754: if_icmpne -> 763
    //   757: iconst_1
    //   758: istore #5
    //   760: goto -> 766
    //   763: iconst_0
    //   764: istore #5
    //   766: aload #28
    //   768: getfield g : F
    //   771: fconst_0
    //   772: fcmpl
    //   773: ifle -> 800
    //   776: iload #8
    //   778: ifeq -> 784
    //   781: goto -> 788
    //   784: iload #17
    //   786: istore #14
    //   788: iload #11
    //   790: iload #14
    //   792: invokestatic max : (II)I
    //   795: istore #8
    //   797: goto -> 822
    //   800: iload #8
    //   802: ifeq -> 809
    //   805: iload #14
    //   807: istore #17
    //   809: iload #6
    //   811: iload #17
    //   813: invokestatic max : (II)I
    //   816: istore #6
    //   818: iload #11
    //   820: istore #8
    //   822: aload_0
    //   823: aload #26
    //   825: iload #18
    //   827: invokevirtual a : (Landroid/view/View;I)I
    //   830: istore #11
    //   832: iload #19
    //   834: istore #9
    //   836: iload #11
    //   838: iload #18
    //   840: iadd
    //   841: istore #14
    //   843: iload #8
    //   845: istore #11
    //   847: iload #14
    //   849: istore #8
    //   851: iload #8
    //   853: iconst_1
    //   854: iadd
    //   855: istore #8
    //   857: goto -> 167
    //   860: iload #13
    //   862: istore #8
    //   864: aload_0
    //   865: getfield f : I
    //   868: ifle -> 893
    //   871: aload_0
    //   872: iload #16
    //   874: invokevirtual c : (I)Z
    //   877: ifeq -> 893
    //   880: aload_0
    //   881: aload_0
    //   882: getfield f : I
    //   885: aload_0
    //   886: getfield l : I
    //   889: iadd
    //   890: putfield f : I
    //   893: aload #27
    //   895: iconst_1
    //   896: iaload
    //   897: iconst_m1
    //   898: if_icmpne -> 931
    //   901: aload #27
    //   903: iconst_0
    //   904: iaload
    //   905: iconst_m1
    //   906: if_icmpne -> 931
    //   909: aload #27
    //   911: iconst_2
    //   912: iaload
    //   913: iconst_m1
    //   914: if_icmpne -> 931
    //   917: aload #27
    //   919: iconst_3
    //   920: iaload
    //   921: iconst_m1
    //   922: if_icmpeq -> 928
    //   925: goto -> 931
    //   928: goto -> 989
    //   931: iload #8
    //   933: aload #27
    //   935: iconst_3
    //   936: iaload
    //   937: aload #27
    //   939: iconst_0
    //   940: iaload
    //   941: aload #27
    //   943: iconst_1
    //   944: iaload
    //   945: aload #27
    //   947: iconst_2
    //   948: iaload
    //   949: invokestatic max : (II)I
    //   952: invokestatic max : (II)I
    //   955: invokestatic max : (II)I
    //   958: aload #25
    //   960: iconst_3
    //   961: iaload
    //   962: aload #25
    //   964: iconst_0
    //   965: iaload
    //   966: aload #25
    //   968: iconst_1
    //   969: iaload
    //   970: aload #25
    //   972: iconst_2
    //   973: iaload
    //   974: invokestatic max : (II)I
    //   977: invokestatic max : (II)I
    //   980: invokestatic max : (II)I
    //   983: iadd
    //   984: invokestatic max : (II)I
    //   987: istore #8
    //   989: iload #9
    //   991: istore #13
    //   993: iload #8
    //   995: istore #14
    //   997: iload #24
    //   999: ifeq -> 1190
    //   1002: iload #21
    //   1004: ldc -2147483648
    //   1006: if_icmpeq -> 1018
    //   1009: iload #8
    //   1011: istore #14
    //   1013: iload #21
    //   1015: ifne -> 1190
    //   1018: aload_0
    //   1019: iconst_0
    //   1020: putfield f : I
    //   1023: iconst_0
    //   1024: istore #9
    //   1026: iload #8
    //   1028: istore #14
    //   1030: iload #9
    //   1032: iload #16
    //   1034: if_icmpge -> 1190
    //   1037: aload_0
    //   1038: iload #9
    //   1040: invokevirtual b : (I)Landroid/view/View;
    //   1043: astore #26
    //   1045: aload #26
    //   1047: ifnonnull -> 1068
    //   1050: aload_0
    //   1051: aload_0
    //   1052: getfield f : I
    //   1055: aload_0
    //   1056: iload #9
    //   1058: invokevirtual d : (I)I
    //   1061: iadd
    //   1062: putfield f : I
    //   1065: goto -> 1091
    //   1068: aload #26
    //   1070: invokevirtual getVisibility : ()I
    //   1073: bipush #8
    //   1075: if_icmpne -> 1094
    //   1078: iload #9
    //   1080: aload_0
    //   1081: aload #26
    //   1083: iload #9
    //   1085: invokevirtual a : (Landroid/view/View;I)I
    //   1088: iadd
    //   1089: istore #9
    //   1091: goto -> 1181
    //   1094: aload #26
    //   1096: invokevirtual getLayoutParams : ()Landroid/view/ViewGroup$LayoutParams;
    //   1099: checkcast android/support/v7/widget/ah$a
    //   1102: astore #28
    //   1104: iload #15
    //   1106: ifeq -> 1142
    //   1109: aload_0
    //   1110: aload_0
    //   1111: getfield f : I
    //   1114: aload #28
    //   1116: getfield leftMargin : I
    //   1119: iload #7
    //   1121: iadd
    //   1122: aload #28
    //   1124: getfield rightMargin : I
    //   1127: iadd
    //   1128: aload_0
    //   1129: aload #26
    //   1131: invokevirtual b : (Landroid/view/View;)I
    //   1134: iadd
    //   1135: iadd
    //   1136: putfield f : I
    //   1139: goto -> 1091
    //   1142: aload_0
    //   1143: getfield f : I
    //   1146: istore #14
    //   1148: aload_0
    //   1149: iload #14
    //   1151: iload #14
    //   1153: iload #7
    //   1155: iadd
    //   1156: aload #28
    //   1158: getfield leftMargin : I
    //   1161: iadd
    //   1162: aload #28
    //   1164: getfield rightMargin : I
    //   1167: iadd
    //   1168: aload_0
    //   1169: aload #26
    //   1171: invokevirtual b : (Landroid/view/View;)I
    //   1174: iadd
    //   1175: invokestatic max : (II)I
    //   1178: putfield f : I
    //   1181: iload #9
    //   1183: iconst_1
    //   1184: iadd
    //   1185: istore #9
    //   1187: goto -> 1026
    //   1190: aload_0
    //   1191: aload_0
    //   1192: getfield f : I
    //   1195: aload_0
    //   1196: invokevirtual getPaddingLeft : ()I
    //   1199: aload_0
    //   1200: invokevirtual getPaddingRight : ()I
    //   1203: iadd
    //   1204: iadd
    //   1205: putfield f : I
    //   1208: aload_0
    //   1209: getfield f : I
    //   1212: aload_0
    //   1213: invokevirtual getSuggestedMinimumWidth : ()I
    //   1216: invokestatic max : (II)I
    //   1219: iload_1
    //   1220: iconst_0
    //   1221: invokestatic resolveSizeAndState : (III)I
    //   1224: istore #18
    //   1226: ldc 16777215
    //   1228: iload #18
    //   1230: iand
    //   1231: aload_0
    //   1232: getfield f : I
    //   1235: isub
    //   1236: istore #17
    //   1238: iload #12
    //   1240: ifne -> 1376
    //   1243: iload #17
    //   1245: ifeq -> 1257
    //   1248: fload_3
    //   1249: fconst_0
    //   1250: fcmpl
    //   1251: ifle -> 1257
    //   1254: goto -> 1376
    //   1257: iload #6
    //   1259: iload #11
    //   1261: invokestatic max : (II)I
    //   1264: istore #9
    //   1266: iload #24
    //   1268: ifeq -> 1361
    //   1271: iload #21
    //   1273: ldc 1073741824
    //   1275: if_icmpeq -> 1361
    //   1278: iconst_0
    //   1279: istore #6
    //   1281: iload #6
    //   1283: iload #16
    //   1285: if_icmpge -> 1361
    //   1288: aload_0
    //   1289: iload #6
    //   1291: invokevirtual b : (I)Landroid/view/View;
    //   1294: astore #25
    //   1296: aload #25
    //   1298: ifnull -> 1352
    //   1301: aload #25
    //   1303: invokevirtual getVisibility : ()I
    //   1306: bipush #8
    //   1308: if_icmpne -> 1314
    //   1311: goto -> 1352
    //   1314: aload #25
    //   1316: invokevirtual getLayoutParams : ()Landroid/view/ViewGroup$LayoutParams;
    //   1319: checkcast android/support/v7/widget/ah$a
    //   1322: getfield g : F
    //   1325: fconst_0
    //   1326: fcmpl
    //   1327: ifle -> 1352
    //   1330: aload #25
    //   1332: iload #7
    //   1334: ldc 1073741824
    //   1336: invokestatic makeMeasureSpec : (II)I
    //   1339: aload #25
    //   1341: invokevirtual getMeasuredHeight : ()I
    //   1344: ldc 1073741824
    //   1346: invokestatic makeMeasureSpec : (II)I
    //   1349: invokevirtual measure : (II)V
    //   1352: iload #6
    //   1354: iconst_1
    //   1355: iadd
    //   1356: istore #6
    //   1358: goto -> 1281
    //   1361: iload #16
    //   1363: istore #8
    //   1365: iload #14
    //   1367: istore #7
    //   1369: iload #9
    //   1371: istore #6
    //   1373: goto -> 2094
    //   1376: aload_0
    //   1377: getfield g : F
    //   1380: fstore #4
    //   1382: fload #4
    //   1384: fconst_0
    //   1385: fcmpl
    //   1386: ifle -> 1392
    //   1389: fload #4
    //   1391: fstore_3
    //   1392: aload #27
    //   1394: iconst_3
    //   1395: iconst_m1
    //   1396: iastore
    //   1397: aload #27
    //   1399: iconst_2
    //   1400: iconst_m1
    //   1401: iastore
    //   1402: aload #27
    //   1404: iconst_1
    //   1405: iconst_m1
    //   1406: iastore
    //   1407: aload #27
    //   1409: iconst_0
    //   1410: iconst_m1
    //   1411: iastore
    //   1412: aload #25
    //   1414: iconst_3
    //   1415: iconst_m1
    //   1416: iastore
    //   1417: aload #25
    //   1419: iconst_2
    //   1420: iconst_m1
    //   1421: iastore
    //   1422: aload #25
    //   1424: iconst_1
    //   1425: iconst_m1
    //   1426: iastore
    //   1427: aload #25
    //   1429: iconst_0
    //   1430: iconst_m1
    //   1431: iastore
    //   1432: aload_0
    //   1433: iconst_0
    //   1434: putfield f : I
    //   1437: iconst_m1
    //   1438: istore #12
    //   1440: iconst_0
    //   1441: istore #7
    //   1443: iload #5
    //   1445: istore #9
    //   1447: iload #16
    //   1449: istore #8
    //   1451: iload #6
    //   1453: istore #11
    //   1455: iload #13
    //   1457: istore #5
    //   1459: iload #17
    //   1461: istore #6
    //   1463: iload #7
    //   1465: istore #13
    //   1467: iload #13
    //   1469: iload #8
    //   1471: if_icmpge -> 1960
    //   1474: aload_0
    //   1475: iload #13
    //   1477: invokevirtual b : (I)Landroid/view/View;
    //   1480: astore #26
    //   1482: aload #26
    //   1484: ifnull -> 1951
    //   1487: aload #26
    //   1489: invokevirtual getVisibility : ()I
    //   1492: bipush #8
    //   1494: if_icmpne -> 1500
    //   1497: goto -> 1951
    //   1500: aload #26
    //   1502: invokevirtual getLayoutParams : ()Landroid/view/ViewGroup$LayoutParams;
    //   1505: checkcast android/support/v7/widget/ah$a
    //   1508: astore #28
    //   1510: aload #28
    //   1512: getfield g : F
    //   1515: fstore #4
    //   1517: fload #4
    //   1519: fconst_0
    //   1520: fcmpl
    //   1521: ifle -> 1664
    //   1524: iload #6
    //   1526: i2f
    //   1527: fload #4
    //   1529: fmul
    //   1530: fload_3
    //   1531: fdiv
    //   1532: f2i
    //   1533: istore #14
    //   1535: iload_2
    //   1536: aload_0
    //   1537: invokevirtual getPaddingTop : ()I
    //   1540: aload_0
    //   1541: invokevirtual getPaddingBottom : ()I
    //   1544: iadd
    //   1545: aload #28
    //   1547: getfield topMargin : I
    //   1550: iadd
    //   1551: aload #28
    //   1553: getfield bottomMargin : I
    //   1556: iadd
    //   1557: aload #28
    //   1559: getfield height : I
    //   1562: invokestatic getChildMeasureSpec : (III)I
    //   1565: istore #17
    //   1567: aload #28
    //   1569: getfield width : I
    //   1572: ifne -> 1597
    //   1575: iload #21
    //   1577: ldc 1073741824
    //   1579: if_icmpeq -> 1585
    //   1582: goto -> 1597
    //   1585: iload #14
    //   1587: ifle -> 1616
    //   1590: iload #14
    //   1592: istore #7
    //   1594: goto -> 1619
    //   1597: aload #26
    //   1599: invokevirtual getMeasuredWidth : ()I
    //   1602: iload #14
    //   1604: iadd
    //   1605: istore #16
    //   1607: iload #16
    //   1609: istore #7
    //   1611: iload #16
    //   1613: ifge -> 1619
    //   1616: iconst_0
    //   1617: istore #7
    //   1619: aload #26
    //   1621: iload #7
    //   1623: ldc 1073741824
    //   1625: invokestatic makeMeasureSpec : (II)I
    //   1628: iload #17
    //   1630: invokevirtual measure : (II)V
    //   1633: iload #5
    //   1635: aload #26
    //   1637: invokevirtual getMeasuredState : ()I
    //   1640: ldc_w -16777216
    //   1643: iand
    //   1644: invokestatic combineMeasuredStates : (II)I
    //   1647: istore #5
    //   1649: fload_3
    //   1650: fload #4
    //   1652: fsub
    //   1653: fstore_3
    //   1654: iload #6
    //   1656: iload #14
    //   1658: isub
    //   1659: istore #6
    //   1661: goto -> 1664
    //   1664: iload #15
    //   1666: ifeq -> 1705
    //   1669: aload_0
    //   1670: aload_0
    //   1671: getfield f : I
    //   1674: aload #26
    //   1676: invokevirtual getMeasuredWidth : ()I
    //   1679: aload #28
    //   1681: getfield leftMargin : I
    //   1684: iadd
    //   1685: aload #28
    //   1687: getfield rightMargin : I
    //   1690: iadd
    //   1691: aload_0
    //   1692: aload #26
    //   1694: invokevirtual b : (Landroid/view/View;)I
    //   1697: iadd
    //   1698: iadd
    //   1699: putfield f : I
    //   1702: goto -> 1747
    //   1705: aload_0
    //   1706: getfield f : I
    //   1709: istore #7
    //   1711: aload_0
    //   1712: iload #7
    //   1714: aload #26
    //   1716: invokevirtual getMeasuredWidth : ()I
    //   1719: iload #7
    //   1721: iadd
    //   1722: aload #28
    //   1724: getfield leftMargin : I
    //   1727: iadd
    //   1728: aload #28
    //   1730: getfield rightMargin : I
    //   1733: iadd
    //   1734: aload_0
    //   1735: aload #26
    //   1737: invokevirtual b : (Landroid/view/View;)I
    //   1740: iadd
    //   1741: invokestatic max : (II)I
    //   1744: putfield f : I
    //   1747: iload #20
    //   1749: ldc 1073741824
    //   1751: if_icmpeq -> 1769
    //   1754: aload #28
    //   1756: getfield height : I
    //   1759: iconst_m1
    //   1760: if_icmpne -> 1769
    //   1763: iconst_1
    //   1764: istore #7
    //   1766: goto -> 1772
    //   1769: iconst_0
    //   1770: istore #7
    //   1772: aload #28
    //   1774: getfield topMargin : I
    //   1777: aload #28
    //   1779: getfield bottomMargin : I
    //   1782: iadd
    //   1783: istore #16
    //   1785: aload #26
    //   1787: invokevirtual getMeasuredHeight : ()I
    //   1790: iload #16
    //   1792: iadd
    //   1793: istore #14
    //   1795: iload #12
    //   1797: iload #14
    //   1799: invokestatic max : (II)I
    //   1802: istore #12
    //   1804: iload #7
    //   1806: ifeq -> 1816
    //   1809: iload #16
    //   1811: istore #7
    //   1813: goto -> 1820
    //   1816: iload #14
    //   1818: istore #7
    //   1820: iload #11
    //   1822: iload #7
    //   1824: invokestatic max : (II)I
    //   1827: istore #11
    //   1829: iload #9
    //   1831: ifeq -> 1849
    //   1834: aload #28
    //   1836: getfield height : I
    //   1839: iconst_m1
    //   1840: if_icmpne -> 1849
    //   1843: iconst_1
    //   1844: istore #7
    //   1846: goto -> 1852
    //   1849: iconst_0
    //   1850: istore #7
    //   1852: iload #23
    //   1854: ifeq -> 1944
    //   1857: aload #26
    //   1859: invokevirtual getBaseline : ()I
    //   1862: istore #16
    //   1864: iload #16
    //   1866: iconst_m1
    //   1867: if_icmpeq -> 1944
    //   1870: aload #28
    //   1872: getfield h : I
    //   1875: ifge -> 1887
    //   1878: aload_0
    //   1879: getfield e : I
    //   1882: istore #9
    //   1884: goto -> 1894
    //   1887: aload #28
    //   1889: getfield h : I
    //   1892: istore #9
    //   1894: iload #9
    //   1896: bipush #112
    //   1898: iand
    //   1899: iconst_4
    //   1900: ishr
    //   1901: bipush #-2
    //   1903: iand
    //   1904: iconst_1
    //   1905: ishr
    //   1906: istore #9
    //   1908: aload #27
    //   1910: iload #9
    //   1912: aload #27
    //   1914: iload #9
    //   1916: iaload
    //   1917: iload #16
    //   1919: invokestatic max : (II)I
    //   1922: iastore
    //   1923: aload #25
    //   1925: iload #9
    //   1927: aload #25
    //   1929: iload #9
    //   1931: iaload
    //   1932: iload #14
    //   1934: iload #16
    //   1936: isub
    //   1937: invokestatic max : (II)I
    //   1940: iastore
    //   1941: goto -> 1944
    //   1944: iload #7
    //   1946: istore #9
    //   1948: goto -> 1951
    //   1951: iload #13
    //   1953: iconst_1
    //   1954: iadd
    //   1955: istore #13
    //   1957: goto -> 1467
    //   1960: aload_0
    //   1961: aload_0
    //   1962: getfield f : I
    //   1965: aload_0
    //   1966: invokevirtual getPaddingLeft : ()I
    //   1969: aload_0
    //   1970: invokevirtual getPaddingRight : ()I
    //   1973: iadd
    //   1974: iadd
    //   1975: putfield f : I
    //   1978: aload #27
    //   1980: iconst_1
    //   1981: iaload
    //   1982: iconst_m1
    //   1983: if_icmpne -> 2020
    //   1986: aload #27
    //   1988: iconst_0
    //   1989: iaload
    //   1990: iconst_m1
    //   1991: if_icmpne -> 2020
    //   1994: aload #27
    //   1996: iconst_2
    //   1997: iaload
    //   1998: iconst_m1
    //   1999: if_icmpne -> 2020
    //   2002: aload #27
    //   2004: iconst_3
    //   2005: iaload
    //   2006: iconst_m1
    //   2007: if_icmpeq -> 2013
    //   2010: goto -> 2020
    //   2013: iload #12
    //   2015: istore #6
    //   2017: goto -> 2078
    //   2020: iload #12
    //   2022: aload #27
    //   2024: iconst_3
    //   2025: iaload
    //   2026: aload #27
    //   2028: iconst_0
    //   2029: iaload
    //   2030: aload #27
    //   2032: iconst_1
    //   2033: iaload
    //   2034: aload #27
    //   2036: iconst_2
    //   2037: iaload
    //   2038: invokestatic max : (II)I
    //   2041: invokestatic max : (II)I
    //   2044: invokestatic max : (II)I
    //   2047: aload #25
    //   2049: iconst_3
    //   2050: iaload
    //   2051: aload #25
    //   2053: iconst_0
    //   2054: iaload
    //   2055: aload #25
    //   2057: iconst_1
    //   2058: iaload
    //   2059: aload #25
    //   2061: iconst_2
    //   2062: iaload
    //   2063: invokestatic max : (II)I
    //   2066: invokestatic max : (II)I
    //   2069: invokestatic max : (II)I
    //   2072: iadd
    //   2073: invokestatic max : (II)I
    //   2076: istore #6
    //   2078: iload #5
    //   2080: istore #13
    //   2082: iload #9
    //   2084: istore #5
    //   2086: iload #6
    //   2088: istore #7
    //   2090: iload #11
    //   2092: istore #6
    //   2094: iload #5
    //   2096: ifne -> 2109
    //   2099: iload #20
    //   2101: ldc 1073741824
    //   2103: if_icmpeq -> 2109
    //   2106: goto -> 2113
    //   2109: iload #7
    //   2111: istore #6
    //   2113: aload_0
    //   2114: iload #18
    //   2116: iload #13
    //   2118: ldc_w -16777216
    //   2121: iand
    //   2122: ior
    //   2123: iload #6
    //   2125: aload_0
    //   2126: invokevirtual getPaddingTop : ()I
    //   2129: aload_0
    //   2130: invokevirtual getPaddingBottom : ()I
    //   2133: iadd
    //   2134: iadd
    //   2135: aload_0
    //   2136: invokevirtual getSuggestedMinimumHeight : ()I
    //   2139: invokestatic max : (II)I
    //   2142: iload_2
    //   2143: iload #13
    //   2145: bipush #16
    //   2147: ishl
    //   2148: invokestatic resolveSizeAndState : (III)I
    //   2151: invokevirtual setMeasuredDimension : (II)V
    //   2154: iload #10
    //   2156: ifeq -> 2166
    //   2159: aload_0
    //   2160: iload #8
    //   2162: iload_1
    //   2163: invokespecial d : (II)V
    //   2166: return }
  
  void b(int paramInt1, int paramInt2, int paramInt3, int paramInt4) {
    int i2;
    int i1;
    boolean bool2 = bb.a(this);
    int i4 = getPaddingTop();
    int i5 = paramInt4 - paramInt2;
    int i6 = getPaddingBottom();
    int i7 = getPaddingBottom();
    int i3 = getVirtualChildCount();
    paramInt4 = this.e;
    paramInt2 = paramInt4 & 0x70;
    boolean bool1 = this.a;
    int[] arrayOfInt1 = this.i;
    int[] arrayOfInt2 = this.j;
    paramInt4 = d.a(0x800007 & paramInt4, r.d(this));
    boolean bool = true;
    if (paramInt4 != 1) {
      if (paramInt4 != 5) {
        paramInt1 = getPaddingLeft();
      } else {
        paramInt1 = getPaddingLeft() + paramInt3 - paramInt1 - this.f;
      } 
    } else {
      paramInt1 = getPaddingLeft() + (paramInt3 - paramInt1 - this.f) / 2;
    } 
    if (bool2) {
      i1 = i3 - 1;
      i2 = -1;
    } else {
      i1 = 0;
      i2 = 1;
    } 
    paramInt4 = 0;
    paramInt3 = i4;
    while (paramInt4 < i3) {
      int i8 = i1 + i2 * paramInt4;
      View view = b(i8);
      if (view == null) {
        paramInt1 += d(i8);
      } else if (view.getVisibility() != 8) {
        int i12 = view.getMeasuredWidth();
        int i13 = view.getMeasuredHeight();
        a a1 = (a)view.getLayoutParams();
        if (bool1 && a1.height != -1) {
          i10 = view.getBaseline();
        } else {
          i10 = -1;
        } 
        int i11 = a1.h;
        int i9 = i11;
        if (i11 < 0)
          i9 = paramInt2; 
        i9 &= 0x70;
        if (i9 != 16) {
          if (i9 != 48) {
            if (i9 != 80) {
              i9 = paramInt3;
            } else {
              i11 = i5 - i6 - i13 - a1.bottomMargin;
              i9 = i11;
              if (i10 != -1) {
                i9 = view.getMeasuredHeight();
                i9 = i11 - arrayOfInt2[2] - i9 - i10;
              } 
            } 
          } else {
            i9 = a1.topMargin + paramInt3;
            if (i10 != -1)
              i9 += arrayOfInt1[1] - i10; 
          } 
        } else {
          i9 = (i5 - i4 - i7 - i13) / 2 + paramInt3 + a1.topMargin - a1.bottomMargin;
        } 
        bool = true;
        int i10 = paramInt1;
        if (c(i8))
          i10 = paramInt1 + this.l; 
        paramInt1 = a1.leftMargin + i10;
        a(view, paramInt1 + a(view), i9, i12, i13);
        i9 = a1.rightMargin;
        i10 = b(view);
        paramInt4 += a(view, i8);
        paramInt1 += i12 + i9 + i10;
      } else {
        bool = true;
      } 
      paramInt4++;
    } 
  }
  
  void b(Canvas paramCanvas) {
    int i2 = getVirtualChildCount();
    boolean bool = bb.a(this);
    int i1;
    for (i1 = 0; i1 < i2; i1++) {
      View view = b(i1);
      if (view != null && view.getVisibility() != 8 && c(i1)) {
        int i3;
        a a1 = (a)view.getLayoutParams();
        if (bool) {
          i3 = view.getRight() + a1.rightMargin;
        } else {
          i3 = view.getLeft() - a1.leftMargin - this.l;
        } 
        b(paramCanvas, i3);
      } 
    } 
    if (c(i2)) {
      View view = b(i2 - 1);
      if (view == null) {
        if (bool) {
          i1 = getPaddingLeft();
        } else {
          i1 = getWidth();
          int i3 = getPaddingRight();
          i1 = i1 - i3 - this.l;
        } 
      } else {
        int i3;
        a a1 = (a)view.getLayoutParams();
        if (bool) {
          i1 = view.getLeft();
          i3 = a1.leftMargin;
        } else {
          i1 = view.getRight() + a1.rightMargin;
          b(paramCanvas, i1);
        } 
        i1 = i1 - i3 - this.l;
      } 
    } else {
      return;
    } 
    b(paramCanvas, i1);
  }
  
  void b(Canvas paramCanvas, int paramInt) {
    this.k.setBounds(paramInt, getPaddingTop() + this.o, this.l + paramInt, getHeight() - getPaddingBottom() - this.o);
    this.k.draw(paramCanvas);
  }
  
  protected boolean c(int paramInt) {
    boolean bool1 = false;
    boolean bool = false;
    if (paramInt == 0) {
      if ((this.n & true) != 0)
        bool = true; 
      return bool;
    } 
    if (paramInt == getChildCount()) {
      bool = bool1;
      if ((this.n & 0x4) != 0)
        bool = true; 
      return bool;
    } 
    if ((this.n & 0x2) != 0)
      while (--paramInt >= 0) {
        if (getChildAt(paramInt).getVisibility() != 8)
          return true; 
        paramInt--;
      }  
    return false;
  }
  
  protected boolean checkLayoutParams(ViewGroup.LayoutParams paramLayoutParams) { return paramLayoutParams instanceof a; }
  
  int d(int paramInt) { return 0; }
  
  public int getBaseline() {
    if (this.b < 0)
      return super.getBaseline(); 
    int i1 = getChildCount();
    int i2 = this.b;
    if (i1 > i2) {
      View view = getChildAt(i2);
      int i3 = view.getBaseline();
      if (i3 == -1) {
        if (this.b == 0)
          return -1; 
        throw new RuntimeException("mBaselineAlignedChildIndex of LinearLayout points to a View that doesn't know how to get its baseline.");
      } 
      i2 = this.c;
      i1 = i2;
      if (this.d == 1) {
        int i4 = this.e & 0x70;
        i1 = i2;
        if (i4 != 48)
          if (i4 != 16) {
            if (i4 != 80) {
              i1 = i2;
            } else {
              i1 = getBottom() - getTop() - getPaddingBottom() - this.f;
            } 
          } else {
            i1 = i2 + (getBottom() - getTop() - getPaddingTop() - getPaddingBottom() - this.f) / 2;
          }  
      } 
      return i1 + ((a)view.getLayoutParams()).topMargin + i3;
    } 
    throw new RuntimeException("mBaselineAlignedChildIndex of LinearLayout set to an index that is out of bounds.");
  }
  
  public int getBaselineAlignedChildIndex() { return this.b; }
  
  public Drawable getDividerDrawable() { return this.k; }
  
  public int getDividerPadding() { return this.o; }
  
  public int getDividerWidth() { return this.l; }
  
  public int getGravity() { return this.e; }
  
  public int getOrientation() { return this.d; }
  
  public int getShowDividers() { return this.n; }
  
  int getVirtualChildCount() { return getChildCount(); }
  
  public float getWeightSum() { return this.g; }
  
  protected a j() {
    int i1 = this.d;
    return (i1 == 0) ? new a(-2, -2) : ((i1 == 1) ? new a(-1, -2) : null);
  }
  
  protected void onDraw(Canvas paramCanvas) {
    if (this.k == null)
      return; 
    if (this.d == 1) {
      a(paramCanvas);
      return;
    } 
    b(paramCanvas);
  }
  
  public void onInitializeAccessibilityEvent(AccessibilityEvent paramAccessibilityEvent) {
    super.onInitializeAccessibilityEvent(paramAccessibilityEvent);
    paramAccessibilityEvent.setClassName(ah.class.getName());
  }
  
  public void onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo paramAccessibilityNodeInfo) {
    super.onInitializeAccessibilityNodeInfo(paramAccessibilityNodeInfo);
    paramAccessibilityNodeInfo.setClassName(ah.class.getName());
  }
  
  protected void onLayout(boolean paramBoolean, int paramInt1, int paramInt2, int paramInt3, int paramInt4) {
    if (this.d == 1) {
      a(paramInt1, paramInt2, paramInt3, paramInt4);
      return;
    } 
    b(paramInt1, paramInt2, paramInt3, paramInt4);
  }
  
  protected void onMeasure(int paramInt1, int paramInt2) {
    if (this.d == 1) {
      a(paramInt1, paramInt2);
      return;
    } 
    b(paramInt1, paramInt2);
  }
  
  public void setBaselineAligned(boolean paramBoolean) { this.a = paramBoolean; }
  
  public void setBaselineAlignedChildIndex(int paramInt) {
    if (paramInt >= 0 && paramInt < getChildCount()) {
      this.b = paramInt;
      return;
    } 
    StringBuilder stringBuilder = new StringBuilder();
    stringBuilder.append("base aligned child index out of range (0, ");
    stringBuilder.append(getChildCount());
    stringBuilder.append(")");
    throw new IllegalArgumentException(stringBuilder.toString());
  }
  
  public void setDividerDrawable(Drawable paramDrawable) {
    if (paramDrawable == this.k)
      return; 
    this.k = paramDrawable;
    boolean bool = false;
    if (paramDrawable != null) {
      this.l = paramDrawable.getIntrinsicWidth();
      this.m = paramDrawable.getIntrinsicHeight();
    } else {
      this.l = 0;
      this.m = 0;
    } 
    if (paramDrawable == null)
      bool = true; 
    setWillNotDraw(bool);
    requestLayout();
  }
  
  public void setDividerPadding(int paramInt) { this.o = paramInt; }
  
  public void setGravity(int paramInt) {
    if (this.e != paramInt) {
      int i1 = paramInt;
      if ((0x800007 & paramInt) == 0)
        i1 = paramInt | 0x800003; 
      paramInt = i1;
      if ((i1 & 0x70) == 0)
        paramInt = i1 | 0x30; 
      this.e = paramInt;
      requestLayout();
    } 
  }
  
  public void setHorizontalGravity(int paramInt) {
    paramInt &= 0x800007;
    int i1 = this.e;
    if ((0x800007 & i1) != paramInt) {
      this.e = paramInt | 0xFF7FFFF8 & i1;
      requestLayout();
    } 
  }
  
  public void setMeasureWithLargestChildEnabled(boolean paramBoolean) { this.h = paramBoolean; }
  
  public void setOrientation(int paramInt) {
    if (this.d != paramInt) {
      this.d = paramInt;
      requestLayout();
    } 
  }
  
  public void setShowDividers(int paramInt) {
    if (paramInt != this.n)
      requestLayout(); 
    this.n = paramInt;
  }
  
  public void setVerticalGravity(int paramInt) {
    paramInt &= 0x70;
    int i1 = this.e;
    if ((i1 & 0x70) != paramInt) {
      this.e = paramInt | i1 & 0xFFFFFF8F;
      requestLayout();
    } 
  }
  
  public void setWeightSum(float paramFloat) { this.g = Math.max(0.0F, paramFloat); }
  
  public boolean shouldDelayChildPressedState() { return false; }
}
