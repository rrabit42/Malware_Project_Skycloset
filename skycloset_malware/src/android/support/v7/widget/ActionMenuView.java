package android.support.v7.widget;

import android.content.Context;
import android.content.res.Configuration;
import android.graphics.drawable.Drawable;
import android.support.v7.view.menu.ActionMenuItemView;
import android.support.v7.view.menu.h;
import android.support.v7.view.menu.j;
import android.support.v7.view.menu.o;
import android.support.v7.view.menu.p;
import android.util.AttributeSet;
import android.view.ContextThemeWrapper;
import android.view.Menu;
import android.view.View;
import android.view.ViewGroup;
import android.view.accessibility.AccessibilityEvent;

public class ActionMenuView extends ah implements h.b, p {
  h.a a;
  
  e b;
  
  private h c;
  
  private Context d;
  
  private int e;
  
  private boolean f;
  
  private c g;
  
  private o.a h;
  
  private boolean i;
  
  private int j;
  
  private int k;
  
  private int l;
  
  public ActionMenuView(Context paramContext) { this(paramContext, null); }
  
  public ActionMenuView(Context paramContext, AttributeSet paramAttributeSet) {
    super(paramContext, paramAttributeSet);
    setBaselineAligned(false);
    float f1 = (paramContext.getResources().getDisplayMetrics()).density;
    this.k = (int)(56.0F * f1);
    this.l = (int)(f1 * 4.0F);
    this.d = paramContext;
    this.e = 0;
  }
  
  static int a(View paramView, int paramInt1, int paramInt2, int paramInt3, int paramInt4) {
    Object object;
    c c1 = (c)paramView.getLayoutParams();
    int m = View.MeasureSpec.makeMeasureSpec(View.MeasureSpec.getSize(paramInt3) - paramInt4, View.MeasureSpec.getMode(paramInt3));
    if (paramView instanceof ActionMenuItemView) {
      object = (ActionMenuItemView)paramView;
    } else {
      object = null;
    } 
    boolean bool = true;
    if (object != null && object.b()) {
      paramInt3 = 1;
    } else {
      paramInt3 = 0;
    } 
    paramInt4 = 2;
    if (paramInt2 > 0 && (paramInt3 == 0 || paramInt2 >= 2)) {
      paramView.measure(View.MeasureSpec.makeMeasureSpec(paramInt2 * paramInt1, -2147483648), m);
      int i1 = paramView.getMeasuredWidth();
      int n = i1 / paramInt1;
      paramInt2 = n;
      if (i1 % paramInt1 != 0)
        paramInt2 = n + 1; 
      if (paramInt3 != 0 && paramInt2 < 2)
        paramInt2 = paramInt4; 
    } else {
      paramInt2 = 0;
    } 
    if (c1.a || paramInt3 == 0)
      bool = false; 
    c1.d = bool;
    c1.b = paramInt2;
    paramView.measure(View.MeasureSpec.makeMeasureSpec(paramInt1 * paramInt2, 1073741824), m);
    return paramInt2;
  }
  
  private void c(int paramInt1, int paramInt2) {
    int i6 = View.MeasureSpec.getMode(paramInt2);
    paramInt1 = View.MeasureSpec.getSize(paramInt1);
    int i7 = View.MeasureSpec.getSize(paramInt2);
    int m = getPaddingLeft();
    int n = getPaddingRight();
    int i8 = getPaddingTop() + getPaddingBottom();
    int i10 = getChildMeasureSpec(paramInt2, i8, -2);
    int i9 = paramInt1 - m + n;
    paramInt1 = this.k;
    int i2 = i9 / paramInt1;
    if (i2 == 0) {
      setMeasuredDimension(i9, 0);
      return;
    } 
    int i11 = paramInt1 + i9 % paramInt1 / i2;
    int i12 = getChildCount();
    int i5 = 0;
    paramInt2 = i5;
    n = paramInt2;
    m = n;
    paramInt1 = m;
    int i1 = paramInt1;
    long l1 = 0L;
    int i3 = paramInt1;
    paramInt1 = i2;
    int i4 = m;
    m = i7;
    while (i5 < i12) {
      View view = getChildAt(i5);
      if (view.getVisibility() != 8) {
        boolean bool = view instanceof ActionMenuItemView;
        i4++;
        if (bool) {
          i2 = this.l;
          view.setPadding(i2, 0, i2, 0);
        } 
        c c1 = (c)view.getLayoutParams();
        c1.f = false;
        c1.c = 0;
        c1.b = 0;
        c1.d = false;
        c1.leftMargin = 0;
        c1.rightMargin = 0;
        if (bool && ((ActionMenuItemView)view).b()) {
          bool = true;
        } else {
          bool = false;
        } 
        c1.e = bool;
        if (c1.a) {
          i2 = 1;
        } else {
          i2 = paramInt1;
        } 
        i7 = a(view, i11, i2, i10, i8);
        i3 = Math.max(i3, i7);
        i2 = i1;
        if (c1.d)
          i2 = i1 + 1; 
        if (c1.a)
          n = 1; 
        paramInt1 -= i7;
        paramInt2 = Math.max(paramInt2, view.getMeasuredHeight());
        if (i7 == 1)
          l1 |= (1 << i5); 
        i1 = i2;
      } 
      i5++;
    } 
    if (n != 0 && i4 == 2) {
      i7 = 1;
    } else {
      i7 = 0;
    } 
    i2 = 0;
    i8 = paramInt1;
    paramInt1 = i2;
    i5 = i9;
    while (i1 > 0 && i8 > 0) {
      i9 = Integer.MAX_VALUE;
      byte b1 = 0;
      int i13 = 0;
      long l2;
      for (l2 = 0L; b1 < i12; l2 = l3) {
        long l3;
        int i14;
        c c1 = (c)getChildAt(b1).getLayoutParams();
        if (!c1.d) {
          i14 = i9;
          i2 = i13;
          l3 = l2;
        } else if (c1.b < i9) {
          i14 = c1.b;
          l3 = 1L << b1;
          i2 = 1;
        } else {
          i14 = i9;
          i2 = i13;
          l3 = l2;
          if (c1.b == i9) {
            l3 = l2 | 1L << b1;
            i2 = i13 + 1;
            i14 = i9;
          } 
        } 
        b1++;
        i9 = i14;
        i13 = i2;
      } 
      l1 |= l2;
      if (i13 > i8)
        break; 
      paramInt1 = i9 + 1;
      for (i2 = 0; i2 < i12; i2++) {
        View view = getChildAt(i2);
        c c1 = (c)view.getLayoutParams();
        long l3 = (1 << i2);
        if ((l2 & l3) == 0L) {
          long l4 = l1;
          if (c1.b == paramInt1)
            l4 = l1 | l3; 
          l1 = l4;
        } else {
          if (i7 != 0 && c1.e && i8 == 1) {
            i9 = this.l;
            view.setPadding(i9 + i11, 0, i9, 0);
          } 
          c1.b++;
          c1.f = true;
          i8--;
        } 
      } 
      paramInt1 = 1;
    } 
    if (n == 0 && i4 == 1) {
      n = 1;
    } else {
      n = 0;
    } 
    if (i8 > 0 && l1 != 0L && (i8 < i4 - 1 || n != 0 || i3 > 1)) {
      float f1 = Long.bitCount(l1);
      if (n == 0) {
        float f2;
        if ((l1 & 0x1L) != 0L) {
          f2 = f1;
          if (!((c)getChildAt(0).getLayoutParams()).e)
            f2 = f1 - 0.5F; 
        } else {
          f2 = f1;
        } 
        n = i12 - 1;
        f1 = f2;
        if ((l1 & (1 << n)) != 0L) {
          f1 = f2;
          if (!((c)getChildAt(n).getLayoutParams()).e)
            f1 = f2 - 0.5F; 
        } 
      } 
      if (f1 > 0.0F) {
        i1 = (int)((i8 * i11) / f1);
      } else {
        i1 = 0;
      } 
      i2 = 0;
      while (true) {
        n = paramInt1;
        if (i2 < i12) {
          if ((l1 & (1 << i2)) == 0L) {
            n = paramInt1;
          } else {
            View view = getChildAt(i2);
            c c1 = (c)view.getLayoutParams();
            if (view instanceof ActionMenuItemView) {
              c1.c = i1;
              c1.f = true;
              if (i2 == 0 && !c1.e)
                c1.leftMargin = -i1 / 2; 
              n = 1;
            } else if (c1.a) {
              c1.c = i1;
              c1.f = true;
              c1.rightMargin = -i1 / 2;
              n = 1;
            } else {
              if (i2 != 0)
                c1.leftMargin = i1 / 2; 
              n = paramInt1;
              if (i2 != i12 - 1) {
                c1.rightMargin = i1 / 2;
                n = paramInt1;
              } 
            } 
          } 
          i2++;
          paramInt1 = n;
          continue;
        } 
        break;
      } 
    } else {
      n = paramInt1;
    } 
    paramInt1 = 0;
    if (n != 0)
      while (paramInt1 < i12) {
        View view = getChildAt(paramInt1);
        c c1 = (c)view.getLayoutParams();
        if (c1.f)
          view.measure(View.MeasureSpec.makeMeasureSpec(c1.b * i11 + c1.c, 1073741824), i10); 
        paramInt1++;
      }  
    if (i6 == 1073741824)
      paramInt2 = m; 
    setMeasuredDimension(i5, paramInt2);
  }
  
  public c a(AttributeSet paramAttributeSet) { return new c(getContext(), paramAttributeSet); }
  
  protected c a(ViewGroup.LayoutParams paramLayoutParams) {
    if (paramLayoutParams != null) {
      c c1;
      if (paramLayoutParams instanceof c) {
        c1 = new c((c)paramLayoutParams);
      } else {
        c1 = new c(c1);
      } 
      if (c1.h <= 0)
        c1.h = 16; 
      return c1;
    } 
    return b();
  }
  
  public void a(h paramh) { this.c = paramh; }
  
  public void a(o.a parama, h.a parama1) {
    this.h = parama;
    this.a = parama1;
  }
  
  public boolean a() { return this.f; }
  
  protected boolean a(int paramInt) {
    byte b1 = 0;
    if (paramInt == 0)
      return false; 
    View view1 = getChildAt(paramInt - 1);
    View view2 = getChildAt(paramInt);
    boolean bool1 = b1;
    if (paramInt < getChildCount()) {
      bool1 = b1;
      if (view1 instanceof a)
        bool1 = false | ((a)view1).d(); 
    } 
    boolean bool2 = bool1;
    if (paramInt > 0) {
      bool2 = bool1;
      if (view2 instanceof a)
        bool2 = bool1 | ((a)view2).c(); 
    } 
    return bool2;
  }
  
  public boolean a(j paramj) { return this.c.a(paramj, 0); }
  
  protected c b() {
    c c1 = new c(-2, -2);
    c1.h = 16;
    return c1;
  }
  
  public c c() {
    c c1 = b();
    c1.a = true;
    return c1;
  }
  
  protected boolean checkLayoutParams(ViewGroup.LayoutParams paramLayoutParams) { return (paramLayoutParams != null && paramLayoutParams instanceof c); }
  
  public h d() { return this.c; }
  
  public boolean dispatchPopulateAccessibilityEvent(AccessibilityEvent paramAccessibilityEvent) { return false; }
  
  public boolean e() {
    c c1 = this.g;
    return (c1 != null && c1.d());
  }
  
  public boolean f() {
    c c1 = this.g;
    return (c1 != null && c1.e());
  }
  
  public boolean g() {
    c c1 = this.g;
    return (c1 != null && c1.h());
  }
  
  public Menu getMenu() {
    if (this.c == null) {
      Context context = getContext();
      this.c = new h(context);
      this.c.a(new d(this));
      this.g = new c(context);
      this.g.c(true);
      c c1 = this.g;
      b b1 = this.h;
      if (b1 == null)
        b1 = new b(); 
      c1.a(b1);
      this.c.a(this.g, this.d);
      this.g.a(this);
    } 
    return this.c;
  }
  
  public Drawable getOverflowIcon() {
    getMenu();
    return this.g.c();
  }
  
  public int getPopupTheme() { return this.e; }
  
  public int getWindowAnimations() { return 0; }
  
  public boolean h() {
    c c1 = this.g;
    return (c1 != null && c1.i());
  }
  
  public void i() {
    c c1 = this.g;
    if (c1 != null)
      c1.f(); 
  }
  
  public void onConfigurationChanged(Configuration paramConfiguration) {
    super.onConfigurationChanged(paramConfiguration);
    c c1 = this.g;
    if (c1 != null) {
      c1.b(false);
      if (this.g.h()) {
        this.g.e();
        this.g.d();
      } 
    } 
  }
  
  public void onDetachedFromWindow() {
    super.onDetachedFromWindow();
    i();
  }
  
  protected void onLayout(boolean paramBoolean, int paramInt1, int paramInt2, int paramInt3, int paramInt4) {
    if (!this.i) {
      super.onLayout(paramBoolean, paramInt1, paramInt2, paramInt3, paramInt4);
      return;
    } 
    int i1 = getChildCount();
    int n = (paramInt4 - paramInt2) / 2;
    int i2 = getDividerWidth();
    int i3 = paramInt3 - paramInt1;
    paramInt1 = getPaddingRight();
    paramInt2 = getPaddingLeft();
    paramBoolean = bb.a(this);
    paramInt1 = i3 - paramInt1 - paramInt2;
    paramInt2 = 0;
    paramInt4 = 0;
    paramInt3 = 0;
    while (paramInt2 < i1) {
      View view = getChildAt(paramInt2);
      if (view.getVisibility() != 8) {
        c c1 = (c)view.getLayoutParams();
        if (c1.a) {
          int i5;
          int i4 = view.getMeasuredWidth();
          paramInt4 = i4;
          if (a(paramInt2))
            paramInt4 = i4 + i2; 
          int i6 = view.getMeasuredHeight();
          if (paramBoolean) {
            i5 = getPaddingLeft() + c1.leftMargin;
            i4 = i5 + paramInt4;
          } else {
            i4 = getWidth() - getPaddingRight() - c1.rightMargin;
            i5 = i4 - paramInt4;
          } 
          int i7 = n - i6 / 2;
          view.layout(i5, i7, i4, i6 + i7);
          paramInt1 -= paramInt4;
          paramInt4 = 1;
        } else {
          paramInt1 -= view.getMeasuredWidth() + c1.leftMargin + c1.rightMargin;
          a(paramInt2);
          paramInt3++;
        } 
      } 
      paramInt2++;
    } 
    if (i1 == 1 && paramInt4 == 0) {
      View view = getChildAt(0);
      paramInt1 = view.getMeasuredWidth();
      paramInt2 = view.getMeasuredHeight();
      paramInt3 = i3 / 2 - paramInt1 / 2;
      paramInt4 = n - paramInt2 / 2;
      view.layout(paramInt3, paramInt4, paramInt1 + paramInt3, paramInt2 + paramInt4);
      return;
    } 
    paramInt2 = paramInt3 - (paramInt4 ^ true);
    if (paramInt2 > 0) {
      paramInt1 /= paramInt2;
    } else {
      paramInt1 = 0;
    } 
    paramInt4 = 0;
    paramInt3 = 0;
    int m = Math.max(0, paramInt1);
    if (paramBoolean) {
      paramInt2 = getWidth() - getPaddingRight();
      paramInt1 = paramInt3;
      while (paramInt1 < i1) {
        View view = getChildAt(paramInt1);
        c c1 = (c)view.getLayoutParams();
        paramInt3 = paramInt2;
        if (view.getVisibility() != 8)
          if (c1.a) {
            paramInt3 = paramInt2;
          } else {
            paramInt2 -= c1.rightMargin;
            paramInt3 = view.getMeasuredWidth();
            paramInt4 = view.getMeasuredHeight();
            int i4 = n - paramInt4 / 2;
            view.layout(paramInt2 - paramInt3, i4, paramInt2, paramInt4 + i4);
            paramInt3 = paramInt2 - paramInt3 + c1.leftMargin + m;
          }  
        paramInt1++;
        paramInt2 = paramInt3;
      } 
    } else {
      paramInt2 = getPaddingLeft();
      paramInt1 = paramInt4;
      while (paramInt1 < i1) {
        View view = getChildAt(paramInt1);
        c c1 = (c)view.getLayoutParams();
        paramInt3 = paramInt2;
        if (view.getVisibility() != 8)
          if (c1.a) {
            paramInt3 = paramInt2;
          } else {
            paramInt2 += c1.leftMargin;
            paramInt3 = view.getMeasuredWidth();
            paramInt4 = view.getMeasuredHeight();
            int i4 = n - paramInt4 / 2;
            view.layout(paramInt2, i4, paramInt2 + paramInt3, paramInt4 + i4);
            paramInt3 = paramInt2 + paramInt3 + c1.rightMargin + m;
          }  
        paramInt1++;
        paramInt2 = paramInt3;
      } 
    } 
  }
  
  protected void onMeasure(int paramInt1, int paramInt2) {
    boolean bool;
    boolean bool1 = this.i;
    if (View.MeasureSpec.getMode(paramInt1) == 1073741824) {
      bool = true;
    } else {
      bool = false;
    } 
    this.i = bool;
    if (bool1 != this.i)
      this.j = 0; 
    int m = View.MeasureSpec.getSize(paramInt1);
    if (this.i) {
      h h1 = this.c;
      if (h1 != null && m != this.j) {
        this.j = m;
        h1.b(true);
      } 
    } 
    int n = getChildCount();
    if (this.i && n > 0) {
      c(paramInt1, paramInt2);
      return;
    } 
    for (m = 0; m < n; m++) {
      c c1 = (c)getChildAt(m).getLayoutParams();
      c1.rightMargin = 0;
      c1.leftMargin = 0;
    } 
    super.onMeasure(paramInt1, paramInt2);
  }
  
  public void setExpandedActionViewsExclusive(boolean paramBoolean) { this.g.d(paramBoolean); }
  
  public void setOnMenuItemClickListener(e parame) { this.b = parame; }
  
  public void setOverflowIcon(Drawable paramDrawable) {
    getMenu();
    this.g.a(paramDrawable);
  }
  
  public void setOverflowReserved(boolean paramBoolean) { this.f = paramBoolean; }
  
  public void setPopupTheme(int paramInt) {
    if (this.e != paramInt) {
      this.e = paramInt;
      if (paramInt == 0) {
        this.d = getContext();
        return;
      } 
      this.d = new ContextThemeWrapper(getContext(), paramInt);
    } 
  }
  
  public void setPresenter(c paramc) {
    this.g = paramc;
    this.g.a(this);
  }
}
