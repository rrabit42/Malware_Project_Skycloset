package android.support.v7.app;

import android.content.Context;
import android.content.res.Configuration;
import android.support.v4.f.r;
import android.support.v7.widget.ac;
import android.view.KeyCharacterMap;
import android.view.KeyEvent;
import android.view.Menu;
import android.view.Window;
import java.util.ArrayList;

class i extends a {
  ac a;
  
  Window.Callback b;
  
  private boolean c;
  
  private boolean d;
  
  private ArrayList<a.b> e;
  
  private final Runnable f;
  
  private Menu h() {
    if (!this.c) {
      this.a.a(new a(this), new b(this));
      this.c = true;
    } 
    return this.a.q();
  }
  
  public int a() { return this.a.o(); }
  
  public void a(float paramFloat) { r.a(this.a.a(), paramFloat); }
  
  public void a(Configuration paramConfiguration) { super.a(paramConfiguration); }
  
  public void a(CharSequence paramCharSequence) { this.a.a(paramCharSequence); }
  
  public void a(boolean paramBoolean) {}
  
  public boolean a(int paramInt, KeyEvent paramKeyEvent) {
    Menu menu = h();
    if (menu != null) {
      if (paramKeyEvent != null) {
        j = paramKeyEvent.getDeviceId();
      } else {
        j = -1;
      } 
      int j = KeyCharacterMap.load(j).getKeyboardType();
      boolean bool = true;
      if (j == 1)
        bool = false; 
      menu.setQwertyMode(bool);
      return menu.performShortcut(paramInt, paramKeyEvent, 0);
    } 
    return false;
  }
  
  public boolean a(KeyEvent paramKeyEvent) {
    if (paramKeyEvent.getAction() == 1)
      c(); 
    return true;
  }
  
  public Context b() { return this.a.b(); }
  
  public void c(boolean paramBoolean) {}
  
  public boolean c() { return this.a.k(); }
  
  public void d(boolean paramBoolean) {}
  
  public boolean d() { return this.a.l(); }
  
  public void e(boolean paramBoolean) {
    if (paramBoolean == this.d)
      return; 
    this.d = paramBoolean;
    int j = this.e.size();
    for (byte b1 = 0; b1 < j; b1++)
      ((a.b)this.e.get(b1)).a(paramBoolean); 
  }
  
  public boolean e() {
    this.a.a().removeCallbacks(this.f);
    r.a(this.a.a(), this.f);
    return true;
  }
  
  public boolean f() {
    if (this.a.c()) {
      this.a.d();
      return true;
    } 
    return false;
  }
  
  void g() { this.a.a().removeCallbacks(this.f); }
}
