package android.support.v7.view;

import android.content.Context;
import android.content.ContextWrapper;
import android.content.res.XmlResourceParser;
import android.util.AttributeSet;
import android.util.Xml;
import android.view.InflateException;
import android.view.Menu;
import android.view.MenuInflater;
import java.io.IOException;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;

public class g extends MenuInflater {
  static final Class<?>[] a = { Context.class };
  
  static final Class<?>[] b = a;
  
  final Object[] c;
  
  final Object[] d;
  
  Context e;
  
  private Object f;
  
  public g(Context paramContext) {
    super(paramContext);
    this.e = paramContext;
    this.c = new Object[] { paramContext };
    this.d = this.c;
  }
  
  private Object a(Object paramObject) {
    if (paramObject instanceof android.app.Activity)
      return paramObject; 
    Object object = paramObject;
    if (paramObject instanceof ContextWrapper)
      object = a(((ContextWrapper)paramObject).getBaseContext()); 
    return object;
  }
  
  private void a(XmlPullParser paramXmlPullParser, AttributeSet paramAttributeSet, Menu paramMenu) {
    StringBuilder stringBuilder;
    b b2 = new b(this, paramMenu);
    int i = paramXmlPullParser.getEventType();
    while (true) {
      if (i == 2) {
        String str = paramXmlPullParser.getName();
        if (str.equals("menu")) {
          i = paramXmlPullParser.next();
          break;
        } 
        stringBuilder = new StringBuilder();
        stringBuilder.append("Expecting menu, got ");
        stringBuilder.append(str);
        throw new RuntimeException(stringBuilder.toString());
      } 
      int m = stringBuilder.next();
      i = m;
      if (m == 1) {
        i = m;
        break;
      } 
    } 
    Menu menu = null;
    byte b1 = 0;
    int j = b1;
    int k = i;
    while (!b1) {
      String str;
      byte b3;
      Menu menu1;
      switch (k) {
        default:
          i = j;
          paramMenu = menu;
          b3 = b1;
          break;
        case 3:
          str = stringBuilder.getName();
          if (j != 0 && str.equals(menu)) {
            paramMenu = null;
            i = 0;
            b3 = b1;
            break;
          } 
          if (str.equals("group")) {
            b2.a();
            i = j;
            paramMenu = menu;
            b3 = b1;
            break;
          } 
          if (str.equals("item")) {
            i = j;
            paramMenu = menu;
            b3 = b1;
            if (!b2.d()) {
              if (b2.a != null && b2.a.e()) {
                b2.c();
                i = j;
                paramMenu = menu;
                b3 = b1;
                break;
              } 
              b2.b();
              i = j;
              paramMenu = menu;
              b3 = b1;
            } 
            break;
          } 
          i = j;
          paramMenu = menu;
          b3 = b1;
          if (str.equals("menu")) {
            b3 = 1;
            i = j;
            paramMenu = menu;
          } 
          break;
        case 2:
          if (j != 0) {
            i = j;
            paramMenu = menu;
            b3 = b1;
            break;
          } 
          menu1 = stringBuilder.getName();
          if (menu1.equals("group")) {
            b2.a(paramAttributeSet);
            i = j;
            menu1 = menu;
            b3 = b1;
            break;
          } 
          if (menu1.equals("item")) {
            b2.b(paramAttributeSet);
            i = j;
            menu1 = menu;
            b3 = b1;
            break;
          } 
          if (menu1.equals("menu")) {
            a(stringBuilder, paramAttributeSet, b2.c());
            i = j;
            menu1 = menu;
            b3 = b1;
            break;
          } 
          i = 1;
          b3 = b1;
          break;
        case 1:
          throw new RuntimeException("Unexpected end of document");
      } 
      k = stringBuilder.next();
      j = i;
      menu = menu1;
      b1 = b3;
    } 
  }
  
  Object a() {
    if (this.f == null)
      this.f = a(this.e); 
    return this.f;
  }
  
  public void inflate(int paramInt, Menu paramMenu) {
    if (!(paramMenu instanceof android.support.v4.b.a.a)) {
      super.inflate(paramInt, paramMenu);
      return;
    } 
    XmlResourceParser xmlResourceParser2 = null;
    XmlResourceParser xmlResourceParser3 = null;
    XmlResourceParser xmlResourceParser1 = null;
    try {
      XmlResourceParser xmlResourceParser = this.e.getResources().getLayout(paramInt);
      xmlResourceParser1 = xmlResourceParser;
      xmlResourceParser2 = xmlResourceParser;
      xmlResourceParser3 = xmlResourceParser;
      a(xmlResourceParser, Xml.asAttributeSet(xmlResourceParser), paramMenu);
      if (xmlResourceParser != null)
        xmlResourceParser.close(); 
      return;
    } catch (XmlPullParserException paramMenu) {
      xmlResourceParser1 = xmlResourceParser3;
      throw new InflateException("Error inflating menu XML", paramMenu);
    } catch (IOException paramMenu) {
      xmlResourceParser1 = xmlResourceParser2;
      throw new InflateException("Error inflating menu XML", paramMenu);
    } finally {}
    if (xmlResourceParser1 != null)
      xmlResourceParser1.close(); 
    throw paramMenu;
  }
}
