package android.support.v4.graphics;

import android.content.ContentResolver;
import android.content.Context;
import android.graphics.Typeface;
import android.os.CancellationSignal;
import android.os.ParcelFileDescriptor;
import android.support.v4.d.b;
import android.system.ErrnoException;
import android.system.Os;
import android.system.OsConstants;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;

class d extends h {
  private File a(ParcelFileDescriptor paramParcelFileDescriptor) {
    try {
      StringBuilder stringBuilder = new StringBuilder();
      stringBuilder.append("/proc/self/fd/");
      stringBuilder.append(paramParcelFileDescriptor.getFd());
      String str = Os.readlink(stringBuilder.toString());
      return OsConstants.S_ISREG((Os.stat(str)).st_mode) ? new File(str) : null;
    } catch (ErrnoException paramParcelFileDescriptor) {
      return null;
    } 
  }
  
  public Typeface a(Context paramContext, CancellationSignal paramCancellationSignal, b.b[] paramArrayOfb, int paramInt) {
    if (paramArrayOfb.length < 1)
      return null; 
    b.b b1 = a(paramArrayOfb, paramInt);
    ContentResolver contentResolver = paramContext.getContentResolver();
    try {
      parcelFileDescriptor = contentResolver.openFileDescriptor(b1.a(), "r", paramCancellationSignal);
      try {
        file = a(parcelFileDescriptor);
        if (file == null || !file.canRead()) {
          fileInputStream = new FileInputStream(parcelFileDescriptor.getFileDescriptor());
          try {
            return a(paramContext, fileInputStream);
          } catch (Throwable file) {
            try {
              throw file;
            } finally {}
          } finally {
            paramContext = null;
          } 
          if (file != null) {
            try {
              fileInputStream.close();
            } catch (Throwable fileInputStream) {
              file.addSuppressed(fileInputStream);
            } 
          } else {
            fileInputStream.close();
          } 
          throw paramContext;
        } 
        return Typeface.createFromFile(file);
      } catch (Throwable paramCancellationSignal) {
        try {
          throw paramCancellationSignal;
        } finally {}
      } finally {
        paramContext = null;
      } 
      if (parcelFileDescriptor != null)
        if (paramCancellationSignal != null) {
          try {
            parcelFileDescriptor.close();
          } catch (Throwable parcelFileDescriptor) {
            paramCancellationSignal.addSuppressed(parcelFileDescriptor);
          } 
        } else {
          parcelFileDescriptor.close();
        }  
      throw paramContext;
    } catch (IOException paramContext) {
      return null;
    } 
  }
}
