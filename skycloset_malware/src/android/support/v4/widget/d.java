package android.support.v4.widget;

import android.animation.Animator;
import android.animation.ValueAnimator;
import android.content.Context;
import android.content.res.Resources;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Rect;
import android.graphics.drawable.Animatable;
import android.graphics.drawable.Drawable;
import android.support.v4.f.b.b;
import android.support.v4.util.j;
import android.view.animation.Interpolator;
import android.view.animation.LinearInterpolator;

public class d extends Drawable implements Animatable {
  private static final Interpolator c = new LinearInterpolator();
  
  private static final Interpolator d = new b();
  
  private static final int[] e = { -16777216 };
  
  float a;
  
  boolean b;
  
  private final a f;
  
  private float g;
  
  private Resources h;
  
  private Animator i;
  
  public d(Context paramContext) {
    this.h = ((Context)j.a(paramContext)).getResources();
    this.f = new a();
    this.f.a(e);
    a(2.5F);
    a();
  }
  
  private int a(float paramFloat, int paramInt1, int paramInt2) {
    int j = paramInt1 >> 24 & 0xFF;
    int k = paramInt1 >> 16 & 0xFF;
    int m = paramInt1 >> 8 & 0xFF;
    paramInt1 &= 0xFF;
    return j + (int)(((paramInt2 >> 24 & 0xFF) - j) * paramFloat) << 24 | k + (int)(((paramInt2 >> 16 & 0xFF) - k) * paramFloat) << 16 | m + (int)(((paramInt2 >> 8 & 0xFF) - m) * paramFloat) << 8 | paramInt1 + (int)(paramFloat * ((paramInt2 & 0xFF) - paramInt1));
  }
  
  private void a() {
    a a1 = this.f;
    ValueAnimator valueAnimator = ValueAnimator.ofFloat(new float[] { 0.0F, 1.0F });
    valueAnimator.addUpdateListener(new Object(this, a1));
    valueAnimator.setRepeatCount(-1);
    valueAnimator.setRepeatMode(1);
    valueAnimator.setInterpolator(c);
    valueAnimator.addListener(new Object(this, a1));
    this.i = valueAnimator;
  }
  
  private void a(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4) {
    a a1 = this.f;
    float f1 = (this.h.getDisplayMetrics()).density;
    a1.a(paramFloat2 * f1);
    a1.e(paramFloat1 * f1);
    a1.b(0);
    a1.a(paramFloat3 * f1, paramFloat4 * f1);
  }
  
  private void b(float paramFloat, a parama) {
    a(paramFloat, parama);
    float f1 = (float)(Math.floor((parama.j() / 0.8F)) + 1.0D);
    parama.b(parama.f() + (parama.g() - 0.01F - parama.f()) * paramFloat);
    parama.c(parama.g());
    parama.d(parama.j() + (f1 - parama.j()) * paramFloat);
  }
  
  private void d(float paramFloat) { this.g = paramFloat; }
  
  public void a(float paramFloat) {
    this.f.a(paramFloat);
    invalidateSelf();
  }
  
  public void a(float paramFloat1, float paramFloat2) {
    this.f.b(paramFloat1);
    this.f.c(paramFloat2);
    invalidateSelf();
  }
  
  void a(float paramFloat, a parama) {
    int j;
    if (paramFloat > 0.75F) {
      j = a((paramFloat - 0.75F) / 0.25F, parama.h(), parama.a());
    } else {
      j = parama.h();
    } 
    parama.a(j);
  }
  
  void a(float paramFloat, a parama, boolean paramBoolean) {
    if (this.b) {
      b(paramFloat, parama);
      return;
    } 
    if (paramFloat != 1.0F || paramBoolean) {
      float f2;
      float f1;
      float f3 = parama.j();
      if (paramFloat < 0.5F) {
        f2 = paramFloat / 0.5F;
        f1 = parama.f();
        f2 = d.getInterpolation(f2) * 0.79F + 0.01F + f1;
      } else {
        f1 = (paramFloat - 0.5F) / 0.5F;
        f2 = parama.f() + 0.79F;
        f1 = f2 - (1.0F - d.getInterpolation(f1)) * 0.79F + 0.01F;
      } 
      float f4 = this.a;
      parama.b(f1);
      parama.c(f2);
      parama.d(f3 + 0.20999998F * paramFloat);
      d((paramFloat + f4) * 216.0F);
    } 
  }
  
  public void a(int paramInt) {
    float f4;
    float f3;
    float f2;
    float f1;
    if (paramInt == 0) {
      f4 = 11.0F;
      f1 = 3.0F;
      f2 = 12.0F;
      f3 = 6.0F;
    } else {
      f4 = 7.5F;
      f1 = 2.5F;
      f2 = 10.0F;
      f3 = 5.0F;
    } 
    a(f4, f1, f2, f3);
    invalidateSelf();
  }
  
  public void a(boolean paramBoolean) {
    this.f.a(paramBoolean);
    invalidateSelf();
  }
  
  public void a(int... paramVarArgs) {
    this.f.a(paramVarArgs);
    this.f.b(0);
    invalidateSelf();
  }
  
  public void b(float paramFloat) {
    this.f.f(paramFloat);
    invalidateSelf();
  }
  
  public void c(float paramFloat) {
    this.f.d(paramFloat);
    invalidateSelf();
  }
  
  public void draw(Canvas paramCanvas) {
    Rect rect = getBounds();
    paramCanvas.save();
    paramCanvas.rotate(this.g, rect.exactCenterX(), rect.exactCenterY());
    this.f.a(paramCanvas, rect);
    paramCanvas.restore();
  }
  
  public int getAlpha() { return this.f.d(); }
  
  public int getOpacity() { return -3; }
  
  public boolean isRunning() { return this.i.isRunning(); }
  
  public void setAlpha(int paramInt) {
    this.f.c(paramInt);
    invalidateSelf();
  }
  
  public void setColorFilter(ColorFilter paramColorFilter) {
    this.f.a(paramColorFilter);
    invalidateSelf();
  }
  
  public void start() {
    Animator animator;
    long l;
    this.i.cancel();
    this.f.k();
    if (this.f.i() != this.f.e()) {
      this.b = true;
      animator = this.i;
      l = 666L;
    } else {
      this.f.b(0);
      this.f.l();
      animator = this.i;
      l = 1332L;
    } 
    animator.setDuration(l);
    this.i.start();
  }
  
  public void stop() {
    this.i.cancel();
    d(0.0F);
    this.f.a(false);
    this.f.b(0);
    this.f.l();
    invalidateSelf();
  }
}
