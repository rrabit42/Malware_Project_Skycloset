package android.support.v4.widget;

import android.content.Context;
import android.content.res.TypedArray;
import android.graphics.Canvas;
import android.graphics.Rect;
import android.os.Parcelable;
import android.support.v4.f.j;
import android.support.v4.f.k;
import android.support.v4.f.m;
import android.support.v4.f.n;
import android.support.v4.f.r;
import android.util.AttributeSet;
import android.util.Log;
import android.util.TypedValue;
import android.view.FocusFinder;
import android.view.KeyEvent;
import android.view.MotionEvent;
import android.view.VelocityTracker;
import android.view.View;
import android.view.ViewConfiguration;
import android.view.ViewGroup;
import android.view.ViewParent;
import android.view.animation.AnimationUtils;
import android.widget.EdgeEffect;
import android.widget.FrameLayout;
import android.widget.OverScroller;

public class NestedScrollView extends FrameLayout implements j, m {
  private static final a w = new a();
  
  private static final int[] x = { 16843130 };
  
  private float A;
  
  private b B;
  
  private long a;
  
  private final Rect b = new Rect();
  
  private OverScroller c;
  
  private EdgeEffect d;
  
  private EdgeEffect e;
  
  private int f;
  
  private boolean g = true;
  
  private boolean h = false;
  
  private View i = null;
  
  private boolean j = false;
  
  private VelocityTracker k;
  
  private boolean l;
  
  private boolean m = true;
  
  private int n;
  
  private int o;
  
  private int p;
  
  private int q = -1;
  
  private final int[] r = new int[2];
  
  private final int[] s = new int[2];
  
  private int t;
  
  private int u;
  
  private c v;
  
  private final n y;
  
  private final k z;
  
  public NestedScrollView(Context paramContext, AttributeSet paramAttributeSet) { this(paramContext, paramAttributeSet, 0); }
  
  public NestedScrollView(Context paramContext, AttributeSet paramAttributeSet, int paramInt) {
    super(paramContext, paramAttributeSet, paramInt);
    a();
    TypedArray typedArray = paramContext.obtainStyledAttributes(paramAttributeSet, x, paramInt, 0);
    setFillViewport(typedArray.getBoolean(0, false));
    typedArray.recycle();
    this.y = new n(this);
    this.z = new k(this);
    setNestedScrollingEnabled(true);
    r.a(this, w);
  }
  
  private View a(boolean paramBoolean, int paramInt1, int paramInt2) { // Byte code:
    //   0: aload_0
    //   1: iconst_2
    //   2: invokevirtual getFocusables : (I)Ljava/util/ArrayList;
    //   5: astore #14
    //   7: aload #14
    //   9: invokeinterface size : ()I
    //   14: istore #9
    //   16: iconst_0
    //   17: istore #7
    //   19: aconst_null
    //   20: astore #13
    //   22: iload #7
    //   24: istore #6
    //   26: iload #6
    //   28: iload #9
    //   30: if_icmpge -> 250
    //   33: aload #14
    //   35: iload #6
    //   37: invokeinterface get : (I)Ljava/lang/Object;
    //   42: checkcast android/view/View
    //   45: astore #12
    //   47: aload #12
    //   49: invokevirtual getTop : ()I
    //   52: istore #8
    //   54: aload #12
    //   56: invokevirtual getBottom : ()I
    //   59: istore #10
    //   61: aload #13
    //   63: astore #11
    //   65: iload #7
    //   67: istore #5
    //   69: iload_2
    //   70: iload #10
    //   72: if_icmpge -> 233
    //   75: aload #13
    //   77: astore #11
    //   79: iload #7
    //   81: istore #5
    //   83: iload #8
    //   85: iload_3
    //   86: if_icmpge -> 233
    //   89: iload_2
    //   90: iload #8
    //   92: if_icmpge -> 107
    //   95: iload #10
    //   97: iload_3
    //   98: if_icmpge -> 107
    //   101: iconst_1
    //   102: istore #4
    //   104: goto -> 110
    //   107: iconst_0
    //   108: istore #4
    //   110: aload #13
    //   112: ifnonnull -> 126
    //   115: aload #12
    //   117: astore #11
    //   119: iload #4
    //   121: istore #5
    //   123: goto -> 233
    //   126: iload_1
    //   127: ifeq -> 140
    //   130: iload #8
    //   132: aload #13
    //   134: invokevirtual getTop : ()I
    //   137: if_icmplt -> 154
    //   140: iload_1
    //   141: ifne -> 160
    //   144: iload #10
    //   146: aload #13
    //   148: invokevirtual getBottom : ()I
    //   151: if_icmple -> 160
    //   154: iconst_1
    //   155: istore #8
    //   157: goto -> 163
    //   160: iconst_0
    //   161: istore #8
    //   163: iload #7
    //   165: ifeq -> 197
    //   168: aload #13
    //   170: astore #11
    //   172: iload #7
    //   174: istore #5
    //   176: iload #4
    //   178: ifeq -> 233
    //   181: aload #13
    //   183: astore #11
    //   185: iload #7
    //   187: istore #5
    //   189: iload #8
    //   191: ifeq -> 233
    //   194: goto -> 225
    //   197: iload #4
    //   199: ifeq -> 212
    //   202: aload #12
    //   204: astore #11
    //   206: iconst_1
    //   207: istore #5
    //   209: goto -> 233
    //   212: aload #13
    //   214: astore #11
    //   216: iload #7
    //   218: istore #5
    //   220: iload #8
    //   222: ifeq -> 233
    //   225: aload #12
    //   227: astore #11
    //   229: iload #7
    //   231: istore #5
    //   233: iload #6
    //   235: iconst_1
    //   236: iadd
    //   237: istore #6
    //   239: aload #11
    //   241: astore #13
    //   243: iload #5
    //   245: istore #7
    //   247: goto -> 26
    //   250: aload #13
    //   252: areturn }
  
  private void a() {
    this.c = new OverScroller(getContext());
    setFocusable(true);
    setDescendantFocusability(262144);
    setWillNotDraw(false);
    ViewConfiguration viewConfiguration = ViewConfiguration.get(getContext());
    this.n = viewConfiguration.getScaledTouchSlop();
    this.o = viewConfiguration.getScaledMinimumFlingVelocity();
    this.p = viewConfiguration.getScaledMaximumFlingVelocity();
  }
  
  private void a(MotionEvent paramMotionEvent) {
    int i1 = paramMotionEvent.getActionIndex();
    if (paramMotionEvent.getPointerId(i1) == this.q) {
      if (i1 == 0) {
        i1 = 1;
      } else {
        i1 = 0;
      } 
      this.f = (int)paramMotionEvent.getY(i1);
      this.q = paramMotionEvent.getPointerId(i1);
      VelocityTracker velocityTracker = this.k;
      if (velocityTracker != null)
        velocityTracker.clear(); 
    } 
  }
  
  private boolean a(int paramInt1, int paramInt2, int paramInt3) {
    boolean bool;
    int i2 = getHeight();
    int i1 = getScrollY();
    i2 += i1;
    boolean bool1 = false;
    if (paramInt1 == 33) {
      bool = true;
    } else {
      bool = false;
    } 
    View view = a(bool, paramInt2, paramInt3);
    NestedScrollView nestedScrollView = view;
    if (view == null)
      nestedScrollView = this; 
    if (paramInt2 >= i1 && paramInt3 <= i2) {
      bool = bool1;
    } else {
      if (bool) {
        paramInt2 -= i1;
      } else {
        paramInt2 = paramInt3 - i2;
      } 
      g(paramInt2);
      bool = true;
    } 
    if (nestedScrollView != findFocus())
      nestedScrollView.requestFocus(paramInt1); 
    return bool;
  }
  
  private boolean a(Rect paramRect, boolean paramBoolean) {
    boolean bool;
    int i1 = a(paramRect);
    if (i1 != 0) {
      bool = true;
    } else {
      bool = false;
    } 
    if (bool) {
      if (paramBoolean) {
        scrollBy(0, i1);
        return bool;
      } 
      b(0, i1);
    } 
    return bool;
  }
  
  private boolean a(View paramView) { return a(paramView, 0, getHeight()) ^ true; }
  
  private boolean a(View paramView, int paramInt1, int paramInt2) {
    paramView.getDrawingRect(this.b);
    offsetDescendantRectToMyCoords(paramView, this.b);
    return (this.b.bottom + paramInt1 >= getScrollY() && this.b.top - paramInt1 <= getScrollY() + paramInt2);
  }
  
  private static boolean a(View paramView1, View paramView2) {
    if (paramView1 == paramView2)
      return true; 
    ViewParent viewParent = paramView1.getParent();
    return (viewParent instanceof ViewGroup && a((View)viewParent, paramView2));
  }
  
  private static int b(int paramInt1, int paramInt2, int paramInt3) { return (paramInt2 >= paramInt3 || paramInt1 < 0) ? 0 : ((paramInt2 + paramInt1 > paramInt3) ? (paramInt3 - paramInt2) : paramInt1); }
  
  private void b(View paramView) {
    paramView.getDrawingRect(this.b);
    offsetDescendantRectToMyCoords(paramView, this.b);
    int i1 = a(this.b);
    if (i1 != 0)
      scrollBy(0, i1); 
  }
  
  private boolean b() {
    int i1 = getChildCount();
    byte b1 = 0;
    int i2 = b1;
    if (i1 > 0) {
      View view = getChildAt(0);
      FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams)view.getLayoutParams();
      i2 = b1;
      if (view.getHeight() + layoutParams.topMargin + layoutParams.bottomMargin > getHeight() - getPaddingTop() - getPaddingBottom())
        i2 = 1; 
    } 
    return i2;
  }
  
  private void c() {
    VelocityTracker velocityTracker = this.k;
    if (velocityTracker == null) {
      this.k = VelocityTracker.obtain();
      return;
    } 
    velocityTracker.clear();
  }
  
  private void d() {
    if (this.k == null)
      this.k = VelocityTracker.obtain(); 
  }
  
  private boolean d(int paramInt1, int paramInt2) {
    int i1 = getChildCount();
    byte b1 = 0;
    int i2 = b1;
    if (i1 > 0) {
      i1 = getScrollY();
      View view = getChildAt(0);
      i2 = b1;
      if (paramInt2 >= view.getTop() - i1) {
        i2 = b1;
        if (paramInt2 < view.getBottom() - i1) {
          i2 = b1;
          if (paramInt1 >= view.getLeft()) {
            i2 = b1;
            if (paramInt1 < view.getRight())
              i2 = 1; 
          } 
        } 
      } 
    } 
    return i2;
  }
  
  private void e() {
    VelocityTracker velocityTracker = this.k;
    if (velocityTracker != null) {
      velocityTracker.recycle();
      this.k = null;
    } 
  }
  
  private void f() {
    this.j = false;
    e();
    a(0);
    EdgeEffect edgeEffect = this.d;
    if (edgeEffect != null) {
      edgeEffect.onRelease();
      this.e.onRelease();
    } 
  }
  
  private void g() {
    if (getOverScrollMode() != 2) {
      if (this.d == null) {
        Context context = getContext();
        this.d = new EdgeEffect(context);
        this.e = new EdgeEffect(context);
        return;
      } 
    } else {
      this.d = null;
      this.e = null;
    } 
  }
  
  private void g(int paramInt) {
    if (paramInt != 0) {
      if (this.m) {
        b(0, paramInt);
        return;
      } 
      scrollBy(0, paramInt);
    } 
  }
  
  private float getVerticalScrollFactorCompat() {
    if (this.A == 0.0F) {
      TypedValue typedValue = new TypedValue();
      Context context = getContext();
      if (context.getTheme().resolveAttribute(16842829, typedValue, true)) {
        this.A = typedValue.getDimension(context.getResources().getDisplayMetrics());
      } else {
        throw new IllegalStateException("Expected theme to define listPreferredItemHeight.");
      } 
    } 
    return this.A;
  }
  
  private void h(int paramInt) {
    boolean bool;
    int i1 = getScrollY();
    if ((i1 > 0 || paramInt > 0) && (i1 < getScrollRange() || paramInt < 0)) {
      bool = true;
    } else {
      bool = false;
    } 
    float f1 = paramInt;
    if (!dispatchNestedPreFling(0.0F, f1)) {
      dispatchNestedFling(0.0F, f1, bool);
      f(paramInt);
    } 
  }
  
  protected int a(Rect paramRect) {
    int i1 = getChildCount();
    int i4 = 0;
    if (i1 == 0)
      return 0; 
    int i5 = getHeight();
    int i2 = getScrollY();
    int i3 = i2 + i5;
    int i6 = getVerticalFadingEdgeLength();
    i1 = i2;
    if (paramRect.top > 0)
      i1 = i2 + i6; 
    View view = getChildAt(0);
    FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams)view.getLayoutParams();
    if (paramRect.bottom < view.getHeight() + layoutParams.topMargin + layoutParams.bottomMargin) {
      i2 = i3 - i6;
    } else {
      i2 = i3;
    } 
    if (paramRect.bottom > i2 && paramRect.top > i1) {
      if (paramRect.height() > i5) {
        i1 = paramRect.top - i1;
      } else {
        i1 = paramRect.bottom - i2;
      } 
      return Math.min(i1 + 0, view.getBottom() + layoutParams.bottomMargin - i3);
    } 
    i3 = i4;
    if (paramRect.top < i1) {
      i3 = i4;
      if (paramRect.bottom < i2) {
        if (paramRect.height() > i5) {
          i1 = 0 - i2 - paramRect.bottom;
        } else {
          i1 = 0 - i1 - paramRect.top;
        } 
        i3 = Math.max(i1, -getScrollY());
      } 
    } 
    return i3;
  }
  
  public void a(int paramInt) { this.z.c(paramInt); }
  
  public void a(View paramView, int paramInt) {
    this.y.a(paramView, paramInt);
    a(paramInt);
  }
  
  public void a(View paramView, int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5) {
    paramInt1 = getScrollY();
    scrollBy(0, paramInt4);
    paramInt1 = getScrollY() - paramInt1;
    a(0, paramInt1, 0, paramInt4 - paramInt1, null, paramInt5);
  }
  
  public void a(View paramView, int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3) { a(paramInt1, paramInt2, paramArrayOfInt, null, paramInt3); }
  
  public boolean a(int paramInt1, int paramInt2) { return this.z.a(paramInt1, paramInt2); }
  
  boolean a(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8, boolean paramBoolean) { // Byte code:
    //   0: aload_0
    //   1: invokevirtual getOverScrollMode : ()I
    //   4: istore #12
    //   6: aload_0
    //   7: invokevirtual computeHorizontalScrollRange : ()I
    //   10: istore #10
    //   12: aload_0
    //   13: invokevirtual computeHorizontalScrollExtent : ()I
    //   16: istore #11
    //   18: iconst_0
    //   19: istore #14
    //   21: iload #10
    //   23: iload #11
    //   25: if_icmple -> 34
    //   28: iconst_1
    //   29: istore #10
    //   31: goto -> 37
    //   34: iconst_0
    //   35: istore #10
    //   37: aload_0
    //   38: invokevirtual computeVerticalScrollRange : ()I
    //   41: aload_0
    //   42: invokevirtual computeVerticalScrollExtent : ()I
    //   45: if_icmple -> 54
    //   48: iconst_1
    //   49: istore #11
    //   51: goto -> 57
    //   54: iconst_0
    //   55: istore #11
    //   57: iload #12
    //   59: ifeq -> 82
    //   62: iload #12
    //   64: iconst_1
    //   65: if_icmpne -> 76
    //   68: iload #10
    //   70: ifeq -> 76
    //   73: goto -> 82
    //   76: iconst_0
    //   77: istore #10
    //   79: goto -> 85
    //   82: iconst_1
    //   83: istore #10
    //   85: iload #12
    //   87: ifeq -> 110
    //   90: iload #12
    //   92: iconst_1
    //   93: if_icmpne -> 104
    //   96: iload #11
    //   98: ifeq -> 104
    //   101: goto -> 110
    //   104: iconst_0
    //   105: istore #11
    //   107: goto -> 113
    //   110: iconst_1
    //   111: istore #11
    //   113: iload_3
    //   114: iload_1
    //   115: iadd
    //   116: istore_3
    //   117: iload #10
    //   119: ifne -> 127
    //   122: iconst_0
    //   123: istore_1
    //   124: goto -> 130
    //   127: iload #7
    //   129: istore_1
    //   130: iload #4
    //   132: iload_2
    //   133: iadd
    //   134: istore #4
    //   136: iload #11
    //   138: ifne -> 146
    //   141: iconst_0
    //   142: istore_2
    //   143: goto -> 149
    //   146: iload #8
    //   148: istore_2
    //   149: iload_1
    //   150: ineg
    //   151: istore #7
    //   153: iload_1
    //   154: iload #5
    //   156: iadd
    //   157: istore_1
    //   158: iload_2
    //   159: ineg
    //   160: istore #5
    //   162: iload_2
    //   163: iload #6
    //   165: iadd
    //   166: istore #6
    //   168: iload_3
    //   169: iload_1
    //   170: if_icmple -> 181
    //   173: iconst_1
    //   174: istore #13
    //   176: iload_1
    //   177: istore_2
    //   178: goto -> 198
    //   181: iload_3
    //   182: iload #7
    //   184: if_icmpge -> 193
    //   187: iload #7
    //   189: istore_1
    //   190: goto -> 173
    //   193: iload_3
    //   194: istore_2
    //   195: iconst_0
    //   196: istore #13
    //   198: iload #4
    //   200: iload #6
    //   202: if_icmple -> 214
    //   205: iload #6
    //   207: istore_1
    //   208: iconst_1
    //   209: istore #9
    //   211: goto -> 236
    //   214: iload #4
    //   216: iload #5
    //   218: if_icmpge -> 230
    //   221: iconst_1
    //   222: istore #9
    //   224: iload #5
    //   226: istore_1
    //   227: goto -> 236
    //   230: iconst_0
    //   231: istore #9
    //   233: iload #4
    //   235: istore_1
    //   236: iload #9
    //   238: ifeq -> 266
    //   241: aload_0
    //   242: iconst_1
    //   243: invokevirtual b : (I)Z
    //   246: ifne -> 266
    //   249: aload_0
    //   250: getfield c : Landroid/widget/OverScroller;
    //   253: iload_2
    //   254: iload_1
    //   255: iconst_0
    //   256: iconst_0
    //   257: iconst_0
    //   258: aload_0
    //   259: invokevirtual getScrollRange : ()I
    //   262: invokevirtual springBack : (IIIIII)Z
    //   265: pop
    //   266: aload_0
    //   267: iload_2
    //   268: iload_1
    //   269: iload #13
    //   271: iload #9
    //   273: invokevirtual onOverScrolled : (IIZZ)V
    //   276: iload #13
    //   278: ifne -> 290
    //   281: iload #14
    //   283: istore #13
    //   285: iload #9
    //   287: ifeq -> 293
    //   290: iconst_1
    //   291: istore #13
    //   293: iload #13
    //   295: ireturn }
  
  public boolean a(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int[] paramArrayOfInt, int paramInt5) { return this.z.a(paramInt1, paramInt2, paramInt3, paramInt4, paramArrayOfInt, paramInt5); }
  
  public boolean a(int paramInt1, int paramInt2, int[] paramArrayOfInt1, int[] paramArrayOfInt2, int paramInt3) { return this.z.a(paramInt1, paramInt2, paramArrayOfInt1, paramArrayOfInt2, paramInt3); }
  
  public boolean a(KeyEvent paramKeyEvent) {
    View view;
    this.b.setEmpty();
    boolean bool = b();
    boolean bool1 = false;
    char c1 = '';
    if (!bool) {
      bool = bool1;
      if (isFocused()) {
        bool = bool1;
        if (paramKeyEvent.getKeyCode() != 4) {
          View view1 = findFocus();
          view = view1;
          if (view1 == this)
            view = null; 
          view = FocusFinder.getInstance().findNextFocus(this, view, 130);
          bool = bool1;
          if (view != null) {
            bool = bool1;
            if (view != this) {
              bool = bool1;
              if (view.requestFocus(130))
                bool = true; 
            } 
          } 
        } 
      } 
      return bool;
    } 
    if (view.getAction() == 0) {
      int i1 = view.getKeyCode();
      if (i1 != 62) {
        switch (i1) {
          default:
            return false;
          case 20:
            return !view.isAltPressed() ? e(130) : d(130);
          case 19:
            break;
        } 
        return !view.isAltPressed() ? e(33) : d(33);
      } 
      if (view.isShiftPressed())
        c1 = '!'; 
      c(c1);
    } 
    return false;
  }
  
  public boolean a(View paramView1, View paramView2, int paramInt1, int paramInt2) { return ((paramInt1 & 0x2) != 0); }
  
  public void addView(View paramView) {
    if (getChildCount() <= 0) {
      super.addView(paramView);
      return;
    } 
    throw new IllegalStateException("ScrollView can host only one direct child");
  }
  
  public void addView(View paramView, int paramInt) {
    if (getChildCount() <= 0) {
      super.addView(paramView, paramInt);
      return;
    } 
    throw new IllegalStateException("ScrollView can host only one direct child");
  }
  
  public void addView(View paramView, int paramInt, ViewGroup.LayoutParams paramLayoutParams) {
    if (getChildCount() <= 0) {
      super.addView(paramView, paramInt, paramLayoutParams);
      return;
    } 
    throw new IllegalStateException("ScrollView can host only one direct child");
  }
  
  public void addView(View paramView, ViewGroup.LayoutParams paramLayoutParams) {
    if (getChildCount() <= 0) {
      super.addView(paramView, paramLayoutParams);
      return;
    } 
    throw new IllegalStateException("ScrollView can host only one direct child");
  }
  
  public final void b(int paramInt1, int paramInt2) {
    if (getChildCount() == 0)
      return; 
    if (AnimationUtils.currentAnimationTimeMillis() - this.a > 250L) {
      View view = getChildAt(0);
      FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams)view.getLayoutParams();
      int i1 = view.getHeight();
      int i2 = layoutParams.topMargin;
      int i3 = layoutParams.bottomMargin;
      int i4 = getHeight();
      int i5 = getPaddingTop();
      int i6 = getPaddingBottom();
      paramInt1 = getScrollY();
      paramInt2 = Math.max(0, Math.min(paramInt2 + paramInt1, Math.max(0, i1 + i2 + i3 - i4 - i5 - i6)));
      this.u = getScrollY();
      this.c.startScroll(getScrollX(), paramInt1, 0, paramInt2 - paramInt1);
      r.b(this);
    } else {
      if (!this.c.isFinished())
        this.c.abortAnimation(); 
      scrollBy(paramInt1, paramInt2);
    } 
    this.a = AnimationUtils.currentAnimationTimeMillis();
  }
  
  public void b(View paramView1, View paramView2, int paramInt1, int paramInt2) {
    this.y.a(paramView1, paramView2, paramInt1, paramInt2);
    a(2, paramInt2);
  }
  
  public boolean b(int paramInt) { return this.z.a(paramInt); }
  
  public final void c(int paramInt1, int paramInt2) { b(paramInt1 - getScrollX(), paramInt2 - getScrollY()); }
  
  public boolean c(int paramInt) {
    int i1;
    if (paramInt == 130) {
      i1 = 1;
    } else {
      i1 = 0;
    } 
    int i2 = getHeight();
    if (i1) {
      this.b.top = getScrollY() + i2;
      i1 = getChildCount();
      if (i1 > 0) {
        View view = getChildAt(i1 - 1);
        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams)view.getLayoutParams();
        i1 = view.getBottom() + layoutParams.bottomMargin + getPaddingBottom();
        if (this.b.top + i2 > i1)
          this.b.top = i1 - i2; 
      } 
    } else {
      this.b.top = getScrollY() - i2;
      if (this.b.top < 0)
        this.b.top = 0; 
    } 
    Rect rect = this.b;
    rect.bottom = rect.top + i2;
    return a(paramInt, this.b.top, this.b.bottom);
  }
  
  public int computeHorizontalScrollExtent() { return super.computeHorizontalScrollExtent(); }
  
  public int computeHorizontalScrollOffset() { return super.computeHorizontalScrollOffset(); }
  
  public int computeHorizontalScrollRange() { return super.computeHorizontalScrollRange(); }
  
  public void computeScroll() { // Byte code:
    //   0: aload_0
    //   1: getfield c : Landroid/widget/OverScroller;
    //   4: invokevirtual computeScrollOffset : ()Z
    //   7: ifeq -> 215
    //   10: aload_0
    //   11: getfield c : Landroid/widget/OverScroller;
    //   14: invokevirtual getCurrX : ()I
    //   17: pop
    //   18: aload_0
    //   19: getfield c : Landroid/widget/OverScroller;
    //   22: invokevirtual getCurrY : ()I
    //   25: istore_3
    //   26: iload_3
    //   27: aload_0
    //   28: getfield u : I
    //   31: isub
    //   32: istore_2
    //   33: iload_2
    //   34: istore_1
    //   35: aload_0
    //   36: iconst_0
    //   37: iload_2
    //   38: aload_0
    //   39: getfield s : [I
    //   42: aconst_null
    //   43: iconst_1
    //   44: invokevirtual a : (II[I[II)Z
    //   47: ifeq -> 59
    //   50: iload_2
    //   51: aload_0
    //   52: getfield s : [I
    //   55: iconst_1
    //   56: iaload
    //   57: isub
    //   58: istore_1
    //   59: iload_1
    //   60: ifeq -> 205
    //   63: aload_0
    //   64: invokevirtual getScrollRange : ()I
    //   67: istore_2
    //   68: aload_0
    //   69: invokevirtual getScrollY : ()I
    //   72: istore #4
    //   74: aload_0
    //   75: iconst_0
    //   76: iload_1
    //   77: aload_0
    //   78: invokevirtual getScrollX : ()I
    //   81: iload #4
    //   83: iconst_0
    //   84: iload_2
    //   85: iconst_0
    //   86: iconst_0
    //   87: iconst_0
    //   88: invokevirtual a : (IIIIIIIIZ)Z
    //   91: pop
    //   92: aload_0
    //   93: invokevirtual getScrollY : ()I
    //   96: iload #4
    //   98: isub
    //   99: istore #5
    //   101: aload_0
    //   102: iconst_0
    //   103: iload #5
    //   105: iconst_0
    //   106: iload_1
    //   107: iload #5
    //   109: isub
    //   110: aconst_null
    //   111: iconst_1
    //   112: invokevirtual a : (IIII[II)Z
    //   115: ifne -> 205
    //   118: aload_0
    //   119: invokevirtual getOverScrollMode : ()I
    //   122: istore_1
    //   123: iload_1
    //   124: ifeq -> 144
    //   127: iload_1
    //   128: iconst_1
    //   129: if_icmpne -> 139
    //   132: iload_2
    //   133: ifle -> 139
    //   136: goto -> 144
    //   139: iconst_0
    //   140: istore_1
    //   141: goto -> 146
    //   144: iconst_1
    //   145: istore_1
    //   146: iload_1
    //   147: ifeq -> 205
    //   150: aload_0
    //   151: invokespecial g : ()V
    //   154: iload_3
    //   155: ifgt -> 185
    //   158: iload #4
    //   160: ifle -> 185
    //   163: aload_0
    //   164: getfield d : Landroid/widget/EdgeEffect;
    //   167: astore #6
    //   169: aload #6
    //   171: aload_0
    //   172: getfield c : Landroid/widget/OverScroller;
    //   175: invokevirtual getCurrVelocity : ()F
    //   178: f2i
    //   179: invokevirtual onAbsorb : (I)V
    //   182: goto -> 205
    //   185: iload_3
    //   186: iload_2
    //   187: if_icmplt -> 205
    //   190: iload #4
    //   192: iload_2
    //   193: if_icmpge -> 205
    //   196: aload_0
    //   197: getfield e : Landroid/widget/EdgeEffect;
    //   200: astore #6
    //   202: goto -> 169
    //   205: aload_0
    //   206: iload_3
    //   207: putfield u : I
    //   210: aload_0
    //   211: invokestatic b : (Landroid/view/View;)V
    //   214: return
    //   215: aload_0
    //   216: iconst_1
    //   217: invokevirtual b : (I)Z
    //   220: ifeq -> 228
    //   223: aload_0
    //   224: iconst_1
    //   225: invokevirtual a : (I)V
    //   228: aload_0
    //   229: iconst_0
    //   230: putfield u : I
    //   233: return }
  
  public int computeVerticalScrollExtent() { return super.computeVerticalScrollExtent(); }
  
  public int computeVerticalScrollOffset() { return Math.max(0, super.computeVerticalScrollOffset()); }
  
  public int computeVerticalScrollRange() {
    int i2 = getChildCount();
    int i1 = getHeight() - getPaddingBottom() - getPaddingTop();
    if (i2 == 0)
      return i1; 
    View view = getChildAt(0);
    FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams)view.getLayoutParams();
    i2 = view.getBottom() + layoutParams.bottomMargin;
    int i3 = getScrollY();
    int i4 = Math.max(0, i2 - i1);
    if (i3 < 0)
      return i2 - i3; 
    i1 = i2;
    if (i3 > i4)
      i1 = i2 + i3 - i4; 
    return i1;
  }
  
  public boolean d(int paramInt) {
    int i1;
    if (paramInt == 130) {
      i1 = 1;
    } else {
      i1 = 0;
    } 
    int i2 = getHeight();
    Rect rect = this.b;
    rect.top = 0;
    rect.bottom = i2;
    if (i1) {
      i1 = getChildCount();
      if (i1 > 0) {
        View view = getChildAt(i1 - 1);
        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams)view.getLayoutParams();
        this.b.bottom = view.getBottom() + layoutParams.bottomMargin + getPaddingBottom();
        Rect rect1 = this.b;
        rect1.top = rect1.bottom - i2;
      } 
    } 
    return a(paramInt, this.b.top, this.b.bottom);
  }
  
  public boolean dispatchKeyEvent(KeyEvent paramKeyEvent) { return (super.dispatchKeyEvent(paramKeyEvent) || a(paramKeyEvent)); }
  
  public boolean dispatchNestedFling(float paramFloat1, float paramFloat2, boolean paramBoolean) { return this.z.a(paramFloat1, paramFloat2, paramBoolean); }
  
  public boolean dispatchNestedPreFling(float paramFloat1, float paramFloat2) { return this.z.a(paramFloat1, paramFloat2); }
  
  public boolean dispatchNestedPreScroll(int paramInt1, int paramInt2, int[] paramArrayOfInt1, int[] paramArrayOfInt2) { return a(paramInt1, paramInt2, paramArrayOfInt1, paramArrayOfInt2, 0); }
  
  public boolean dispatchNestedScroll(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int[] paramArrayOfInt) { return a(paramInt1, paramInt2, paramInt3, paramInt4, paramArrayOfInt, 0); }
  
  public void draw(Canvas paramCanvas) { // Byte code:
    //   0: aload_0
    //   1: aload_1
    //   2: invokespecial draw : (Landroid/graphics/Canvas;)V
    //   5: aload_0
    //   6: getfield d : Landroid/widget/EdgeEffect;
    //   9: ifnull -> 385
    //   12: aload_0
    //   13: invokevirtual getScrollY : ()I
    //   16: istore #9
    //   18: aload_0
    //   19: getfield d : Landroid/widget/EdgeEffect;
    //   22: invokevirtual isFinished : ()Z
    //   25: istore #11
    //   27: iconst_0
    //   28: istore #6
    //   30: iload #11
    //   32: ifne -> 196
    //   35: aload_1
    //   36: invokevirtual save : ()I
    //   39: istore #10
    //   41: aload_0
    //   42: invokevirtual getWidth : ()I
    //   45: istore_2
    //   46: aload_0
    //   47: invokevirtual getHeight : ()I
    //   50: istore #8
    //   52: iconst_0
    //   53: iload #9
    //   55: invokestatic min : (II)I
    //   58: istore #7
    //   60: getstatic android/os/Build$VERSION.SDK_INT : I
    //   63: bipush #21
    //   65: if_icmplt -> 83
    //   68: aload_0
    //   69: invokevirtual getClipToPadding : ()Z
    //   72: ifeq -> 78
    //   75: goto -> 83
    //   78: iconst_0
    //   79: istore_3
    //   80: goto -> 102
    //   83: iload_2
    //   84: aload_0
    //   85: invokevirtual getPaddingLeft : ()I
    //   88: aload_0
    //   89: invokevirtual getPaddingRight : ()I
    //   92: iadd
    //   93: isub
    //   94: istore_2
    //   95: aload_0
    //   96: invokevirtual getPaddingLeft : ()I
    //   99: iconst_0
    //   100: iadd
    //   101: istore_3
    //   102: iload #8
    //   104: istore #5
    //   106: iload #7
    //   108: istore #4
    //   110: getstatic android/os/Build$VERSION.SDK_INT : I
    //   113: bipush #21
    //   115: if_icmplt -> 156
    //   118: iload #8
    //   120: istore #5
    //   122: iload #7
    //   124: istore #4
    //   126: aload_0
    //   127: invokevirtual getClipToPadding : ()Z
    //   130: ifeq -> 156
    //   133: iload #8
    //   135: aload_0
    //   136: invokevirtual getPaddingTop : ()I
    //   139: aload_0
    //   140: invokevirtual getPaddingBottom : ()I
    //   143: iadd
    //   144: isub
    //   145: istore #5
    //   147: iload #7
    //   149: aload_0
    //   150: invokevirtual getPaddingTop : ()I
    //   153: iadd
    //   154: istore #4
    //   156: aload_1
    //   157: iload_3
    //   158: i2f
    //   159: iload #4
    //   161: i2f
    //   162: invokevirtual translate : (FF)V
    //   165: aload_0
    //   166: getfield d : Landroid/widget/EdgeEffect;
    //   169: iload_2
    //   170: iload #5
    //   172: invokevirtual setSize : (II)V
    //   175: aload_0
    //   176: getfield d : Landroid/widget/EdgeEffect;
    //   179: aload_1
    //   180: invokevirtual draw : (Landroid/graphics/Canvas;)Z
    //   183: ifeq -> 190
    //   186: aload_0
    //   187: invokestatic b : (Landroid/view/View;)V
    //   190: aload_1
    //   191: iload #10
    //   193: invokevirtual restoreToCount : (I)V
    //   196: aload_0
    //   197: getfield e : Landroid/widget/EdgeEffect;
    //   200: invokevirtual isFinished : ()Z
    //   203: ifne -> 385
    //   206: aload_1
    //   207: invokevirtual save : ()I
    //   210: istore #10
    //   212: aload_0
    //   213: invokevirtual getWidth : ()I
    //   216: istore #4
    //   218: aload_0
    //   219: invokevirtual getHeight : ()I
    //   222: istore #7
    //   224: aload_0
    //   225: invokevirtual getScrollRange : ()I
    //   228: iload #9
    //   230: invokestatic max : (II)I
    //   233: iload #7
    //   235: iadd
    //   236: istore #8
    //   238: getstatic android/os/Build$VERSION.SDK_INT : I
    //   241: bipush #21
    //   243: if_icmplt -> 259
    //   246: iload #6
    //   248: istore_3
    //   249: iload #4
    //   251: istore_2
    //   252: aload_0
    //   253: invokevirtual getClipToPadding : ()Z
    //   256: ifeq -> 279
    //   259: iload #4
    //   261: aload_0
    //   262: invokevirtual getPaddingLeft : ()I
    //   265: aload_0
    //   266: invokevirtual getPaddingRight : ()I
    //   269: iadd
    //   270: isub
    //   271: istore_2
    //   272: iconst_0
    //   273: aload_0
    //   274: invokevirtual getPaddingLeft : ()I
    //   277: iadd
    //   278: istore_3
    //   279: iload #8
    //   281: istore #5
    //   283: iload #7
    //   285: istore #4
    //   287: getstatic android/os/Build$VERSION.SDK_INT : I
    //   290: bipush #21
    //   292: if_icmplt -> 333
    //   295: iload #8
    //   297: istore #5
    //   299: iload #7
    //   301: istore #4
    //   303: aload_0
    //   304: invokevirtual getClipToPadding : ()Z
    //   307: ifeq -> 333
    //   310: iload #7
    //   312: aload_0
    //   313: invokevirtual getPaddingTop : ()I
    //   316: aload_0
    //   317: invokevirtual getPaddingBottom : ()I
    //   320: iadd
    //   321: isub
    //   322: istore #4
    //   324: iload #8
    //   326: aload_0
    //   327: invokevirtual getPaddingBottom : ()I
    //   330: isub
    //   331: istore #5
    //   333: aload_1
    //   334: iload_3
    //   335: iload_2
    //   336: isub
    //   337: i2f
    //   338: iload #5
    //   340: i2f
    //   341: invokevirtual translate : (FF)V
    //   344: aload_1
    //   345: ldc_w 180.0
    //   348: iload_2
    //   349: i2f
    //   350: fconst_0
    //   351: invokevirtual rotate : (FFF)V
    //   354: aload_0
    //   355: getfield e : Landroid/widget/EdgeEffect;
    //   358: iload_2
    //   359: iload #4
    //   361: invokevirtual setSize : (II)V
    //   364: aload_0
    //   365: getfield e : Landroid/widget/EdgeEffect;
    //   368: aload_1
    //   369: invokevirtual draw : (Landroid/graphics/Canvas;)Z
    //   372: ifeq -> 379
    //   375: aload_0
    //   376: invokestatic b : (Landroid/view/View;)V
    //   379: aload_1
    //   380: iload #10
    //   382: invokevirtual restoreToCount : (I)V
    //   385: return }
  
  public boolean e(int paramInt) {
    View view2 = findFocus();
    View view1 = view2;
    if (view2 == this)
      view1 = null; 
    view2 = FocusFinder.getInstance().findNextFocus(this, view1, paramInt);
    int i1 = getMaxScrollAmount();
    if (view2 != null && a(view2, i1, getHeight())) {
      view2.getDrawingRect(this.b);
      offsetDescendantRectToMyCoords(view2, this.b);
      g(a(this.b));
      view2.requestFocus(paramInt);
    } else {
      int i2;
      if (paramInt == 33 && getScrollY() < i1) {
        i2 = getScrollY();
      } else {
        i2 = i1;
        if (paramInt == 130) {
          i2 = i1;
          if (getChildCount() > 0) {
            view2 = getChildAt(0);
            FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams)view2.getLayoutParams();
            i2 = Math.min(view2.getBottom() + layoutParams.bottomMargin - getScrollY() + getHeight() - getPaddingBottom(), i1);
          } 
        } 
      } 
      if (i2 == 0)
        return false; 
      if (paramInt != 130)
        i2 = -i2; 
      g(i2);
    } 
    if (view1 != null && view1.isFocused() && a(view1)) {
      paramInt = getDescendantFocusability();
      setDescendantFocusability(131072);
      requestFocus();
      setDescendantFocusability(paramInt);
    } 
    return true;
  }
  
  public void f(int paramInt) {
    if (getChildCount() > 0) {
      a(2, 1);
      this.c.fling(getScrollX(), getScrollY(), 0, paramInt, 0, 0, -2147483648, 2147483647, 0, 0);
      this.u = getScrollY();
      r.b(this);
    } 
  }
  
  protected float getBottomFadingEdgeStrength() {
    if (getChildCount() == 0)
      return 0.0F; 
    View view = getChildAt(0);
    FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams)view.getLayoutParams();
    int i1 = getVerticalFadingEdgeLength();
    int i2 = getHeight();
    int i3 = getPaddingBottom();
    i2 = view.getBottom() + layoutParams.bottomMargin - getScrollY() - i2 - i3;
    return (i2 < i1) ? (i2 / i1) : 1.0F;
  }
  
  public int getMaxScrollAmount() { return (int)(getHeight() * 0.5F); }
  
  public int getNestedScrollAxes() { return this.y.a(); }
  
  int getScrollRange() {
    int i2 = getChildCount();
    int i1 = 0;
    if (i2 > 0) {
      View view = getChildAt(0);
      FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams)view.getLayoutParams();
      i1 = Math.max(0, view.getHeight() + layoutParams.topMargin + layoutParams.bottomMargin - getHeight() - getPaddingTop() - getPaddingBottom());
    } 
    return i1;
  }
  
  protected float getTopFadingEdgeStrength() {
    if (getChildCount() == 0)
      return 0.0F; 
    int i1 = getVerticalFadingEdgeLength();
    int i2 = getScrollY();
    return (i2 < i1) ? (i2 / i1) : 1.0F;
  }
  
  public boolean hasNestedScrollingParent() { return b(0); }
  
  public boolean isNestedScrollingEnabled() { return this.z.a(); }
  
  protected void measureChild(View paramView, int paramInt1, int paramInt2) {
    ViewGroup.LayoutParams layoutParams = paramView.getLayoutParams();
    paramView.measure(getChildMeasureSpec(paramInt1, getPaddingLeft() + getPaddingRight(), layoutParams.width), View.MeasureSpec.makeMeasureSpec(0, 0));
  }
  
  protected void measureChildWithMargins(View paramView, int paramInt1, int paramInt2, int paramInt3, int paramInt4) {
    ViewGroup.MarginLayoutParams marginLayoutParams = (ViewGroup.MarginLayoutParams)paramView.getLayoutParams();
    paramView.measure(getChildMeasureSpec(paramInt1, getPaddingLeft() + getPaddingRight() + marginLayoutParams.leftMargin + marginLayoutParams.rightMargin + paramInt2, marginLayoutParams.width), View.MeasureSpec.makeMeasureSpec(marginLayoutParams.topMargin + marginLayoutParams.bottomMargin, 0));
  }
  
  public void onAttachedToWindow() {
    super.onAttachedToWindow();
    this.h = false;
  }
  
  public boolean onGenericMotionEvent(MotionEvent paramMotionEvent) {
    if ((paramMotionEvent.getSource() & 0x2) != 0) {
      if (paramMotionEvent.getAction() != 8)
        return false; 
      if (!this.j) {
        float f1 = paramMotionEvent.getAxisValue(9);
        if (f1 != 0.0F) {
          int i1 = (int)(f1 * getVerticalScrollFactorCompat());
          int i2 = getScrollRange();
          int i4 = getScrollY();
          int i3 = i4 - i1;
          if (i3 < 0) {
            i1 = 0;
          } else {
            i1 = i3;
            if (i3 > i2)
              i1 = i2; 
          } 
          if (i1 != i4) {
            super.scrollTo(getScrollX(), i1);
            return true;
          } 
        } 
      } 
    } 
    return false;
  }
  
  public boolean onInterceptTouchEvent(MotionEvent paramMotionEvent) {
    ViewParent viewParent;
    int i1 = paramMotionEvent.getAction();
    if (i1 == 2 && this.j)
      return true; 
    i1 &= 0xFF;
    if (i1 != 6) {
      switch (i1) {
        default:
          return this.j;
        case 2:
          i1 = this.q;
          if (i1 != -1) {
            int i2 = paramMotionEvent.findPointerIndex(i1);
            if (i2 == -1) {
              viewParent = new StringBuilder();
              viewParent.append("Invalid pointerId=");
              viewParent.append(i1);
              viewParent.append(" in onInterceptTouchEvent");
              Log.e("NestedScrollView", viewParent.toString());
            } else {
              i1 = (int)viewParent.getY(i2);
              if (Math.abs(i1 - this.f) > this.n && (0x2 & getNestedScrollAxes()) == 0) {
                this.j = true;
                this.f = i1;
                d();
                this.k.addMovement(viewParent);
                this.t = 0;
                viewParent = getParent();
                if (viewParent != null)
                  viewParent.requestDisallowInterceptTouchEvent(true); 
              } 
            } 
          } 
        case 1:
        case 3:
          this.j = false;
          this.q = -1;
          e();
          if (this.c.springBack(getScrollX(), getScrollY(), 0, 0, 0, getScrollRange()))
            r.b(this); 
          a(0);
        case 0:
          break;
      } 
      i1 = (int)viewParent.getY();
      if (!d((int)viewParent.getX(), i1)) {
        this.j = false;
        e();
      } 
      this.f = i1;
      this.q = viewParent.getPointerId(0);
      c();
      this.k.addMovement(viewParent);
      this.c.computeScrollOffset();
      this.j = this.c.isFinished() ^ true;
      a(2, 0);
    } 
    a(viewParent);
  }
  
  protected void onLayout(boolean paramBoolean, int paramInt1, int paramInt2, int paramInt3, int paramInt4) {
    super.onLayout(paramBoolean, paramInt1, paramInt2, paramInt3, paramInt4);
    paramInt1 = 0;
    this.g = false;
    View view = this.i;
    if (view != null && a(view, this))
      b(this.i); 
    this.i = null;
    if (!this.h) {
      if (this.v != null) {
        scrollTo(getScrollX(), this.v.a);
        this.v = null;
      } 
      if (getChildCount() > 0) {
        view = getChildAt(0);
        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams)view.getLayoutParams();
        paramInt1 = view.getMeasuredHeight() + layoutParams.topMargin + layoutParams.bottomMargin;
      } 
      int i1 = getPaddingTop();
      int i2 = getPaddingBottom();
      paramInt3 = getScrollY();
      paramInt1 = b(paramInt3, paramInt4 - paramInt2 - i1 - i2, paramInt1);
      if (paramInt1 != paramInt3)
        scrollTo(getScrollX(), paramInt1); 
    } 
    scrollTo(getScrollX(), getScrollY());
    this.h = true;
  }
  
  protected void onMeasure(int paramInt1, int paramInt2) {
    super.onMeasure(paramInt1, paramInt2);
    if (!this.l)
      return; 
    if (View.MeasureSpec.getMode(paramInt2) == 0)
      return; 
    if (getChildCount() > 0) {
      View view = getChildAt(0);
      FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams)view.getLayoutParams();
      paramInt2 = view.getMeasuredHeight();
      int i1 = getMeasuredHeight() - getPaddingTop() - getPaddingBottom() - layoutParams.topMargin - layoutParams.bottomMargin;
      if (paramInt2 < i1)
        view.measure(getChildMeasureSpec(paramInt1, getPaddingLeft() + getPaddingRight() + layoutParams.leftMargin + layoutParams.rightMargin, layoutParams.width), View.MeasureSpec.makeMeasureSpec(i1, 1073741824)); 
    } 
  }
  
  public boolean onNestedFling(View paramView, float paramFloat1, float paramFloat2, boolean paramBoolean) {
    if (!paramBoolean) {
      h((int)paramFloat2);
      return true;
    } 
    return false;
  }
  
  public boolean onNestedPreFling(View paramView, float paramFloat1, float paramFloat2) { return dispatchNestedPreFling(paramFloat1, paramFloat2); }
  
  public void onNestedPreScroll(View paramView, int paramInt1, int paramInt2, int[] paramArrayOfInt) { a(paramView, paramInt1, paramInt2, paramArrayOfInt, 0); }
  
  public void onNestedScroll(View paramView, int paramInt1, int paramInt2, int paramInt3, int paramInt4) { a(paramView, paramInt1, paramInt2, paramInt3, paramInt4, 0); }
  
  public void onNestedScrollAccepted(View paramView1, View paramView2, int paramInt) { b(paramView1, paramView2, paramInt, 0); }
  
  protected void onOverScrolled(int paramInt1, int paramInt2, boolean paramBoolean1, boolean paramBoolean2) { super.scrollTo(paramInt1, paramInt2); }
  
  protected boolean onRequestFocusInDescendants(int paramInt, Rect paramRect) {
    View view;
    int i1;
    if (paramInt == 2) {
      i1 = 130;
    } else {
      i1 = paramInt;
      if (paramInt == 1)
        i1 = 33; 
    } 
    if (paramRect == null) {
      view = FocusFinder.getInstance().findNextFocus(this, null, i1);
    } else {
      view = FocusFinder.getInstance().findNextFocusFromRect(this, paramRect, i1);
    } 
    return (view == null) ? false : (a(view) ? false : view.requestFocus(i1, paramRect));
  }
  
  protected void onRestoreInstanceState(Parcelable paramParcelable) {
    if (!(paramParcelable instanceof c)) {
      super.onRestoreInstanceState(paramParcelable);
      return;
    } 
    c c1 = (c)paramParcelable;
    super.onRestoreInstanceState(c1.getSuperState());
    this.v = c1;
    requestLayout();
  }
  
  protected Parcelable onSaveInstanceState() {
    c c1 = new c(super.onSaveInstanceState());
    c1.a = getScrollY();
    return c1;
  }
  
  protected void onScrollChanged(int paramInt1, int paramInt2, int paramInt3, int paramInt4) {
    super.onScrollChanged(paramInt1, paramInt2, paramInt3, paramInt4);
    b b1 = this.B;
    if (b1 != null)
      b1.a(this, paramInt1, paramInt2, paramInt3, paramInt4); 
  }
  
  protected void onSizeChanged(int paramInt1, int paramInt2, int paramInt3, int paramInt4) {
    super.onSizeChanged(paramInt1, paramInt2, paramInt3, paramInt4);
    View view = findFocus();
    if (view != null) {
      if (this == view)
        return; 
      if (a(view, 0, paramInt4)) {
        view.getDrawingRect(this.b);
        offsetDescendantRectToMyCoords(view, this.b);
        g(a(this.b));
      } 
    } 
  }
  
  public boolean onStartNestedScroll(View paramView1, View paramView2, int paramInt) { return a(paramView1, paramView2, paramInt, 0); }
  
  public void onStopNestedScroll(View paramView) { a(paramView, 0); }
  
  public boolean onTouchEvent(MotionEvent paramMotionEvent) { // Byte code:
    //   0: aload_0
    //   1: invokespecial d : ()V
    //   4: aload_1
    //   5: invokestatic obtain : (Landroid/view/MotionEvent;)Landroid/view/MotionEvent;
    //   8: astore #9
    //   10: aload_1
    //   11: invokevirtual getActionMasked : ()I
    //   14: istore_2
    //   15: iload_2
    //   16: ifne -> 24
    //   19: aload_0
    //   20: iconst_0
    //   21: putfield t : I
    //   24: aload #9
    //   26: fconst_0
    //   27: aload_0
    //   28: getfield t : I
    //   31: i2f
    //   32: invokevirtual offsetLocation : (FF)V
    //   35: iload_2
    //   36: tableswitch default -> 80, 0 -> 793, 1 -> 718, 2 -> 190, 3 -> 135, 4 -> 80, 5 -> 108, 6 -> 83
    //   80: goto -> 885
    //   83: aload_0
    //   84: aload_1
    //   85: invokespecial a : (Landroid/view/MotionEvent;)V
    //   88: aload_0
    //   89: aload_1
    //   90: aload_1
    //   91: aload_0
    //   92: getfield q : I
    //   95: invokevirtual findPointerIndex : (I)I
    //   98: invokevirtual getY : (I)F
    //   101: f2i
    //   102: putfield f : I
    //   105: goto -> 885
    //   108: aload_1
    //   109: invokevirtual getActionIndex : ()I
    //   112: istore_2
    //   113: aload_0
    //   114: aload_1
    //   115: iload_2
    //   116: invokevirtual getY : (I)F
    //   119: f2i
    //   120: putfield f : I
    //   123: aload_0
    //   124: aload_1
    //   125: iload_2
    //   126: invokevirtual getPointerId : (I)I
    //   129: putfield q : I
    //   132: goto -> 885
    //   135: aload_0
    //   136: getfield j : Z
    //   139: ifeq -> 178
    //   142: aload_0
    //   143: invokevirtual getChildCount : ()I
    //   146: ifle -> 178
    //   149: aload_0
    //   150: getfield c : Landroid/widget/OverScroller;
    //   153: aload_0
    //   154: invokevirtual getScrollX : ()I
    //   157: aload_0
    //   158: invokevirtual getScrollY : ()I
    //   161: iconst_0
    //   162: iconst_0
    //   163: iconst_0
    //   164: aload_0
    //   165: invokevirtual getScrollRange : ()I
    //   168: invokevirtual springBack : (IIIIII)Z
    //   171: ifeq -> 178
    //   174: aload_0
    //   175: invokestatic b : (Landroid/view/View;)V
    //   178: aload_0
    //   179: iconst_m1
    //   180: putfield q : I
    //   183: aload_0
    //   184: invokespecial f : ()V
    //   187: goto -> 885
    //   190: aload_1
    //   191: aload_0
    //   192: getfield q : I
    //   195: invokevirtual findPointerIndex : (I)I
    //   198: istore #4
    //   200: iload #4
    //   202: iconst_m1
    //   203: if_icmpne -> 253
    //   206: new java/lang/StringBuilder
    //   209: dup
    //   210: invokespecial <init> : ()V
    //   213: astore_1
    //   214: aload_1
    //   215: ldc_w 'Invalid pointerId='
    //   218: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   221: pop
    //   222: aload_1
    //   223: aload_0
    //   224: getfield q : I
    //   227: invokevirtual append : (I)Ljava/lang/StringBuilder;
    //   230: pop
    //   231: aload_1
    //   232: ldc_w ' in onTouchEvent'
    //   235: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   238: pop
    //   239: ldc_w 'NestedScrollView'
    //   242: aload_1
    //   243: invokevirtual toString : ()Ljava/lang/String;
    //   246: invokestatic e : (Ljava/lang/String;Ljava/lang/String;)I
    //   249: pop
    //   250: goto -> 885
    //   253: aload_1
    //   254: iload #4
    //   256: invokevirtual getY : (I)F
    //   259: f2i
    //   260: istore #5
    //   262: aload_0
    //   263: getfield f : I
    //   266: iload #5
    //   268: isub
    //   269: istore_2
    //   270: iload_2
    //   271: istore_3
    //   272: aload_0
    //   273: iconst_0
    //   274: iload_2
    //   275: aload_0
    //   276: getfield s : [I
    //   279: aload_0
    //   280: getfield r : [I
    //   283: iconst_0
    //   284: invokevirtual a : (II[I[II)Z
    //   287: ifeq -> 327
    //   290: iload_2
    //   291: aload_0
    //   292: getfield s : [I
    //   295: iconst_1
    //   296: iaload
    //   297: isub
    //   298: istore_3
    //   299: aload #9
    //   301: fconst_0
    //   302: aload_0
    //   303: getfield r : [I
    //   306: iconst_1
    //   307: iaload
    //   308: i2f
    //   309: invokevirtual offsetLocation : (FF)V
    //   312: aload_0
    //   313: aload_0
    //   314: getfield t : I
    //   317: aload_0
    //   318: getfield r : [I
    //   321: iconst_1
    //   322: iaload
    //   323: iadd
    //   324: putfield t : I
    //   327: iload_3
    //   328: istore_2
    //   329: aload_0
    //   330: getfield j : Z
    //   333: ifne -> 394
    //   336: iload_3
    //   337: istore_2
    //   338: iload_3
    //   339: invokestatic abs : (I)I
    //   342: aload_0
    //   343: getfield n : I
    //   346: if_icmple -> 394
    //   349: aload_0
    //   350: invokevirtual getParent : ()Landroid/view/ViewParent;
    //   353: astore #10
    //   355: aload #10
    //   357: ifnull -> 368
    //   360: aload #10
    //   362: iconst_1
    //   363: invokeinterface requestDisallowInterceptTouchEvent : (Z)V
    //   368: aload_0
    //   369: iconst_1
    //   370: putfield j : Z
    //   373: iload_3
    //   374: ifle -> 387
    //   377: iload_3
    //   378: aload_0
    //   379: getfield n : I
    //   382: isub
    //   383: istore_2
    //   384: goto -> 394
    //   387: iload_3
    //   388: aload_0
    //   389: getfield n : I
    //   392: iadd
    //   393: istore_2
    //   394: aload_0
    //   395: getfield j : Z
    //   398: ifeq -> 885
    //   401: aload_0
    //   402: iload #5
    //   404: aload_0
    //   405: getfield r : [I
    //   408: iconst_1
    //   409: iaload
    //   410: isub
    //   411: putfield f : I
    //   414: aload_0
    //   415: invokevirtual getScrollY : ()I
    //   418: istore #6
    //   420: aload_0
    //   421: invokevirtual getScrollRange : ()I
    //   424: istore #5
    //   426: aload_0
    //   427: invokevirtual getOverScrollMode : ()I
    //   430: istore_3
    //   431: iload_3
    //   432: ifeq -> 453
    //   435: iload_3
    //   436: iconst_1
    //   437: if_icmpne -> 448
    //   440: iload #5
    //   442: ifle -> 448
    //   445: goto -> 453
    //   448: iconst_0
    //   449: istore_3
    //   450: goto -> 455
    //   453: iconst_1
    //   454: istore_3
    //   455: aload_0
    //   456: iconst_0
    //   457: iload_2
    //   458: iconst_0
    //   459: aload_0
    //   460: invokevirtual getScrollY : ()I
    //   463: iconst_0
    //   464: iload #5
    //   466: iconst_0
    //   467: iconst_0
    //   468: iconst_1
    //   469: invokevirtual a : (IIIIIIIIZ)Z
    //   472: ifeq -> 490
    //   475: aload_0
    //   476: iconst_0
    //   477: invokevirtual b : (I)Z
    //   480: ifne -> 490
    //   483: aload_0
    //   484: getfield k : Landroid/view/VelocityTracker;
    //   487: invokevirtual clear : ()V
    //   490: aload_0
    //   491: invokevirtual getScrollY : ()I
    //   494: iload #6
    //   496: isub
    //   497: istore #7
    //   499: aload_0
    //   500: iconst_0
    //   501: iload #7
    //   503: iconst_0
    //   504: iload_2
    //   505: iload #7
    //   507: isub
    //   508: aload_0
    //   509: getfield r : [I
    //   512: iconst_0
    //   513: invokevirtual a : (IIII[II)Z
    //   516: ifeq -> 566
    //   519: aload_0
    //   520: getfield f : I
    //   523: istore_2
    //   524: aload_0
    //   525: getfield r : [I
    //   528: astore_1
    //   529: aload_0
    //   530: iload_2
    //   531: aload_1
    //   532: iconst_1
    //   533: iaload
    //   534: isub
    //   535: putfield f : I
    //   538: aload #9
    //   540: fconst_0
    //   541: aload_1
    //   542: iconst_1
    //   543: iaload
    //   544: i2f
    //   545: invokevirtual offsetLocation : (FF)V
    //   548: aload_0
    //   549: aload_0
    //   550: getfield t : I
    //   553: aload_0
    //   554: getfield r : [I
    //   557: iconst_1
    //   558: iaload
    //   559: iadd
    //   560: putfield t : I
    //   563: goto -> 885
    //   566: iload_3
    //   567: ifeq -> 885
    //   570: aload_0
    //   571: invokespecial g : ()V
    //   574: iload #6
    //   576: iload_2
    //   577: iadd
    //   578: istore_3
    //   579: iload_3
    //   580: ifge -> 632
    //   583: aload_0
    //   584: getfield d : Landroid/widget/EdgeEffect;
    //   587: iload_2
    //   588: i2f
    //   589: aload_0
    //   590: invokevirtual getHeight : ()I
    //   593: i2f
    //   594: fdiv
    //   595: aload_1
    //   596: iload #4
    //   598: invokevirtual getX : (I)F
    //   601: aload_0
    //   602: invokevirtual getWidth : ()I
    //   605: i2f
    //   606: fdiv
    //   607: invokestatic a : (Landroid/widget/EdgeEffect;FF)V
    //   610: aload_0
    //   611: getfield e : Landroid/widget/EdgeEffect;
    //   614: invokevirtual isFinished : ()Z
    //   617: ifne -> 685
    //   620: aload_0
    //   621: getfield e : Landroid/widget/EdgeEffect;
    //   624: astore_1
    //   625: aload_1
    //   626: invokevirtual onRelease : ()V
    //   629: goto -> 685
    //   632: iload_3
    //   633: iload #5
    //   635: if_icmple -> 685
    //   638: aload_0
    //   639: getfield e : Landroid/widget/EdgeEffect;
    //   642: iload_2
    //   643: i2f
    //   644: aload_0
    //   645: invokevirtual getHeight : ()I
    //   648: i2f
    //   649: fdiv
    //   650: fconst_1
    //   651: aload_1
    //   652: iload #4
    //   654: invokevirtual getX : (I)F
    //   657: aload_0
    //   658: invokevirtual getWidth : ()I
    //   661: i2f
    //   662: fdiv
    //   663: fsub
    //   664: invokestatic a : (Landroid/widget/EdgeEffect;FF)V
    //   667: aload_0
    //   668: getfield d : Landroid/widget/EdgeEffect;
    //   671: invokevirtual isFinished : ()Z
    //   674: ifne -> 685
    //   677: aload_0
    //   678: getfield d : Landroid/widget/EdgeEffect;
    //   681: astore_1
    //   682: goto -> 625
    //   685: aload_0
    //   686: getfield d : Landroid/widget/EdgeEffect;
    //   689: astore_1
    //   690: aload_1
    //   691: ifnull -> 885
    //   694: aload_1
    //   695: invokevirtual isFinished : ()Z
    //   698: ifeq -> 711
    //   701: aload_0
    //   702: getfield e : Landroid/widget/EdgeEffect;
    //   705: invokevirtual isFinished : ()Z
    //   708: ifne -> 885
    //   711: aload_0
    //   712: invokestatic b : (Landroid/view/View;)V
    //   715: goto -> 885
    //   718: aload_0
    //   719: getfield k : Landroid/view/VelocityTracker;
    //   722: astore_1
    //   723: aload_1
    //   724: sipush #1000
    //   727: aload_0
    //   728: getfield p : I
    //   731: i2f
    //   732: invokevirtual computeCurrentVelocity : (IF)V
    //   735: aload_1
    //   736: aload_0
    //   737: getfield q : I
    //   740: invokevirtual getYVelocity : (I)F
    //   743: f2i
    //   744: istore_2
    //   745: iload_2
    //   746: invokestatic abs : (I)I
    //   749: aload_0
    //   750: getfield o : I
    //   753: if_icmple -> 765
    //   756: aload_0
    //   757: iload_2
    //   758: ineg
    //   759: invokespecial h : (I)V
    //   762: goto -> 178
    //   765: aload_0
    //   766: getfield c : Landroid/widget/OverScroller;
    //   769: aload_0
    //   770: invokevirtual getScrollX : ()I
    //   773: aload_0
    //   774: invokevirtual getScrollY : ()I
    //   777: iconst_0
    //   778: iconst_0
    //   779: iconst_0
    //   780: aload_0
    //   781: invokevirtual getScrollRange : ()I
    //   784: invokevirtual springBack : (IIIIII)Z
    //   787: ifeq -> 178
    //   790: goto -> 174
    //   793: aload_0
    //   794: invokevirtual getChildCount : ()I
    //   797: ifne -> 802
    //   800: iconst_0
    //   801: ireturn
    //   802: aload_0
    //   803: getfield c : Landroid/widget/OverScroller;
    //   806: invokevirtual isFinished : ()Z
    //   809: iconst_1
    //   810: ixor
    //   811: istore #8
    //   813: aload_0
    //   814: iload #8
    //   816: putfield j : Z
    //   819: iload #8
    //   821: ifeq -> 843
    //   824: aload_0
    //   825: invokevirtual getParent : ()Landroid/view/ViewParent;
    //   828: astore #10
    //   830: aload #10
    //   832: ifnull -> 843
    //   835: aload #10
    //   837: iconst_1
    //   838: invokeinterface requestDisallowInterceptTouchEvent : (Z)V
    //   843: aload_0
    //   844: getfield c : Landroid/widget/OverScroller;
    //   847: invokevirtual isFinished : ()Z
    //   850: ifne -> 860
    //   853: aload_0
    //   854: getfield c : Landroid/widget/OverScroller;
    //   857: invokevirtual abortAnimation : ()V
    //   860: aload_0
    //   861: aload_1
    //   862: invokevirtual getY : ()F
    //   865: f2i
    //   866: putfield f : I
    //   869: aload_0
    //   870: aload_1
    //   871: iconst_0
    //   872: invokevirtual getPointerId : (I)I
    //   875: putfield q : I
    //   878: aload_0
    //   879: iconst_2
    //   880: iconst_0
    //   881: invokevirtual a : (II)Z
    //   884: pop
    //   885: aload_0
    //   886: getfield k : Landroid/view/VelocityTracker;
    //   889: astore_1
    //   890: aload_1
    //   891: ifnull -> 900
    //   894: aload_1
    //   895: aload #9
    //   897: invokevirtual addMovement : (Landroid/view/MotionEvent;)V
    //   900: aload #9
    //   902: invokevirtual recycle : ()V
    //   905: iconst_1
    //   906: ireturn }
  
  public void requestChildFocus(View paramView1, View paramView2) {
    if (!this.g) {
      b(paramView2);
    } else {
      this.i = paramView2;
    } 
    super.requestChildFocus(paramView1, paramView2);
  }
  
  public boolean requestChildRectangleOnScreen(View paramView, Rect paramRect, boolean paramBoolean) {
    paramRect.offset(paramView.getLeft() - paramView.getScrollX(), paramView.getTop() - paramView.getScrollY());
    return a(paramRect, paramBoolean);
  }
  
  public void requestDisallowInterceptTouchEvent(boolean paramBoolean) {
    if (paramBoolean)
      e(); 
    super.requestDisallowInterceptTouchEvent(paramBoolean);
  }
  
  public void requestLayout() {
    this.g = true;
    super.requestLayout();
  }
  
  public void scrollTo(int paramInt1, int paramInt2) {
    if (getChildCount() > 0) {
      View view = getChildAt(0);
      FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams)view.getLayoutParams();
      int i7 = getWidth();
      int i8 = getPaddingLeft();
      int i9 = getPaddingRight();
      int i10 = view.getWidth();
      int i11 = layoutParams.leftMargin;
      int i12 = layoutParams.rightMargin;
      int i1 = getHeight();
      int i2 = getPaddingTop();
      int i3 = getPaddingBottom();
      int i4 = view.getHeight();
      int i5 = layoutParams.topMargin;
      int i6 = layoutParams.bottomMargin;
      paramInt1 = b(paramInt1, i7 - i8 - i9, i10 + i11 + i12);
      paramInt2 = b(paramInt2, i1 - i2 - i3, i4 + i5 + i6);
      if (paramInt1 != getScrollX() || paramInt2 != getScrollY())
        super.scrollTo(paramInt1, paramInt2); 
    } 
  }
  
  public void setFillViewport(boolean paramBoolean) {
    if (paramBoolean != this.l) {
      this.l = paramBoolean;
      requestLayout();
    } 
  }
  
  public void setNestedScrollingEnabled(boolean paramBoolean) { this.z.a(paramBoolean); }
  
  public void setOnScrollChangeListener(b paramb) { this.B = paramb; }
  
  public void setSmoothScrollingEnabled(boolean paramBoolean) { this.m = paramBoolean; }
  
  public boolean shouldDelayChildPressedState() { return true; }
  
  public boolean startNestedScroll(int paramInt) { return a(paramInt, 0); }
  
  public void stopNestedScroll() { a(0); }
}
