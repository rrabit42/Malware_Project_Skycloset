package android.support.v4.util;

import java.lang.reflect.Array;
import java.util.Collection;
import java.util.Iterator;
import java.util.Set;

public final class b<E> extends Object implements Collection<E>, Set<E> {
  private static final int[] c = new int[0];
  
  private static final Object[] d = new Object[0];
  
  private static Object[] e;
  
  private static int f;
  
  private static Object[] g;
  
  private static int h;
  
  Object[] a;
  
  int b;
  
  private int[] i;
  
  private h<E, E> j;
  
  public b() { this(0); }
  
  public b(int paramInt) {
    if (paramInt == 0) {
      this.i = c;
      this.a = d;
    } else {
      d(paramInt);
    } 
    this.b = 0;
  }
  
  private int a() {
    int m = this.b;
    if (m == 0)
      return -1; 
    int n = c.a(this.i, m, 0);
    if (n < 0)
      return n; 
    if (this.a[n] == null)
      return n; 
    int k;
    for (k = n + 1; k < m && this.i[k] == 0; k++) {
      if (this.a[k] == null)
        return k; 
    } 
    for (m = n - 1; m >= 0 && this.i[m] == 0; m--) {
      if (this.a[m] == null)
        return m; 
    } 
    return k;
  }
  
  private int a(Object paramObject, int paramInt) {
    int m = this.b;
    if (m == 0)
      return -1; 
    int n = c.a(this.i, m, paramInt);
    if (n < 0)
      return n; 
    if (paramObject.equals(this.a[n]))
      return n; 
    int k;
    for (k = n + 1; k < m && this.i[k] == paramInt; k++) {
      if (paramObject.equals(this.a[k]))
        return k; 
    } 
    for (m = n - 1; m >= 0 && this.i[m] == paramInt; m--) {
      if (paramObject.equals(this.a[m]))
        return m; 
    } 
    return k;
  }
  
  private static void a(int[] paramArrayOfInt, Object[] paramArrayOfObject, int paramInt) { // Byte code:
    //   0: aload_0
    //   1: arraylength
    //   2: bipush #8
    //   4: if_icmpne -> 57
    //   7: ldc android/support/v4/util/b
    //   9: monitorenter
    //   10: getstatic android/support/v4/util/b.h : I
    //   13: bipush #10
    //   15: if_icmpge -> 47
    //   18: aload_1
    //   19: iconst_0
    //   20: getstatic android/support/v4/util/b.g : [Ljava/lang/Object;
    //   23: aastore
    //   24: aload_1
    //   25: iconst_1
    //   26: aload_0
    //   27: aastore
    //   28: iload_2
    //   29: iconst_1
    //   30: isub
    //   31: istore_2
    //   32: goto -> 114
    //   35: aload_1
    //   36: putstatic android/support/v4/util/b.g : [Ljava/lang/Object;
    //   39: getstatic android/support/v4/util/b.h : I
    //   42: iconst_1
    //   43: iadd
    //   44: putstatic android/support/v4/util/b.h : I
    //   47: ldc android/support/v4/util/b
    //   49: monitorexit
    //   50: return
    //   51: astore_0
    //   52: ldc android/support/v4/util/b
    //   54: monitorexit
    //   55: aload_0
    //   56: athrow
    //   57: aload_0
    //   58: arraylength
    //   59: iconst_4
    //   60: if_icmpne -> 113
    //   63: ldc android/support/v4/util/b
    //   65: monitorenter
    //   66: getstatic android/support/v4/util/b.f : I
    //   69: bipush #10
    //   71: if_icmpge -> 103
    //   74: aload_1
    //   75: iconst_0
    //   76: getstatic android/support/v4/util/b.e : [Ljava/lang/Object;
    //   79: aastore
    //   80: aload_1
    //   81: iconst_1
    //   82: aload_0
    //   83: aastore
    //   84: iload_2
    //   85: iconst_1
    //   86: isub
    //   87: istore_2
    //   88: goto -> 130
    //   91: aload_1
    //   92: putstatic android/support/v4/util/b.e : [Ljava/lang/Object;
    //   95: getstatic android/support/v4/util/b.f : I
    //   98: iconst_1
    //   99: iadd
    //   100: putstatic android/support/v4/util/b.f : I
    //   103: ldc android/support/v4/util/b
    //   105: monitorexit
    //   106: return
    //   107: astore_0
    //   108: ldc android/support/v4/util/b
    //   110: monitorexit
    //   111: aload_0
    //   112: athrow
    //   113: return
    //   114: iload_2
    //   115: iconst_2
    //   116: if_icmplt -> 35
    //   119: aload_1
    //   120: iload_2
    //   121: aconst_null
    //   122: aastore
    //   123: iload_2
    //   124: iconst_1
    //   125: isub
    //   126: istore_2
    //   127: goto -> 114
    //   130: iload_2
    //   131: iconst_2
    //   132: if_icmplt -> 91
    //   135: aload_1
    //   136: iload_2
    //   137: aconst_null
    //   138: aastore
    //   139: iload_2
    //   140: iconst_1
    //   141: isub
    //   142: istore_2
    //   143: goto -> 130
    // Exception table:
    //   from	to	target	type
    //   10	24	51	finally
    //   35	47	51	finally
    //   47	50	51	finally
    //   52	55	51	finally
    //   66	80	107	finally
    //   91	103	107	finally
    //   103	106	107	finally
    //   108	111	107	finally }
  
  private h<E, E> b() {
    if (this.j == null)
      this.j = new Object(this); 
    return this.j;
  }
  
  private void d(int paramInt) { // Byte code:
    //   0: iload_1
    //   1: bipush #8
    //   3: if_icmpne -> 81
    //   6: ldc android/support/v4/util/b
    //   8: monitorenter
    //   9: getstatic android/support/v4/util/b.g : [Ljava/lang/Object;
    //   12: ifnull -> 69
    //   15: getstatic android/support/v4/util/b.g : [Ljava/lang/Object;
    //   18: astore_2
    //   19: aload_0
    //   20: aload_2
    //   21: putfield a : [Ljava/lang/Object;
    //   24: aload_2
    //   25: iconst_0
    //   26: aaload
    //   27: checkcast [Ljava/lang/Object;
    //   30: checkcast [Ljava/lang/Object;
    //   33: putstatic android/support/v4/util/b.g : [Ljava/lang/Object;
    //   36: aload_0
    //   37: aload_2
    //   38: iconst_1
    //   39: aaload
    //   40: checkcast [I
    //   43: checkcast [I
    //   46: putfield i : [I
    //   49: aload_2
    //   50: iconst_1
    //   51: aconst_null
    //   52: aastore
    //   53: aload_2
    //   54: iconst_0
    //   55: aconst_null
    //   56: aastore
    //   57: getstatic android/support/v4/util/b.h : I
    //   60: iconst_1
    //   61: isub
    //   62: putstatic android/support/v4/util/b.h : I
    //   65: ldc android/support/v4/util/b
    //   67: monitorexit
    //   68: return
    //   69: ldc android/support/v4/util/b
    //   71: monitorexit
    //   72: goto -> 161
    //   75: astore_2
    //   76: ldc android/support/v4/util/b
    //   78: monitorexit
    //   79: aload_2
    //   80: athrow
    //   81: iload_1
    //   82: iconst_4
    //   83: if_icmpne -> 161
    //   86: ldc android/support/v4/util/b
    //   88: monitorenter
    //   89: getstatic android/support/v4/util/b.e : [Ljava/lang/Object;
    //   92: ifnull -> 149
    //   95: getstatic android/support/v4/util/b.e : [Ljava/lang/Object;
    //   98: astore_2
    //   99: aload_0
    //   100: aload_2
    //   101: putfield a : [Ljava/lang/Object;
    //   104: aload_2
    //   105: iconst_0
    //   106: aaload
    //   107: checkcast [Ljava/lang/Object;
    //   110: checkcast [Ljava/lang/Object;
    //   113: putstatic android/support/v4/util/b.e : [Ljava/lang/Object;
    //   116: aload_0
    //   117: aload_2
    //   118: iconst_1
    //   119: aaload
    //   120: checkcast [I
    //   123: checkcast [I
    //   126: putfield i : [I
    //   129: aload_2
    //   130: iconst_1
    //   131: aconst_null
    //   132: aastore
    //   133: aload_2
    //   134: iconst_0
    //   135: aconst_null
    //   136: aastore
    //   137: getstatic android/support/v4/util/b.f : I
    //   140: iconst_1
    //   141: isub
    //   142: putstatic android/support/v4/util/b.f : I
    //   145: ldc android/support/v4/util/b
    //   147: monitorexit
    //   148: return
    //   149: ldc android/support/v4/util/b
    //   151: monitorexit
    //   152: goto -> 161
    //   155: astore_2
    //   156: ldc android/support/v4/util/b
    //   158: monitorexit
    //   159: aload_2
    //   160: athrow
    //   161: aload_0
    //   162: iload_1
    //   163: newarray int
    //   165: putfield i : [I
    //   168: aload_0
    //   169: iload_1
    //   170: anewarray java/lang/Object
    //   173: putfield a : [Ljava/lang/Object;
    //   176: return
    // Exception table:
    //   from	to	target	type
    //   9	49	75	finally
    //   57	68	75	finally
    //   69	72	75	finally
    //   76	79	75	finally
    //   89	129	155	finally
    //   137	148	155	finally
    //   149	152	155	finally
    //   156	159	155	finally }
  
  public int a(Object paramObject) { return (paramObject == null) ? a() : a(paramObject, paramObject.hashCode()); }
  
  public void a(int paramInt) {
    int[] arrayOfInt = this.i;
    if (arrayOfInt.length < paramInt) {
      Object[] arrayOfObject = this.a;
      d(paramInt);
      paramInt = this.b;
      if (paramInt > 0) {
        System.arraycopy(arrayOfInt, 0, this.i, 0, paramInt);
        System.arraycopy(arrayOfObject, 0, this.a, 0, this.b);
      } 
      a(arrayOfInt, arrayOfObject, this.b);
    } 
  }
  
  public boolean add(E paramE) {
    int m;
    if (paramE == null) {
      k = a();
      m = 0;
    } else {
      m = paramE.hashCode();
      k = a(paramE, m);
    } 
    if (k >= 0)
      return false; 
    int n = k;
    int i1 = this.b;
    if (i1 >= this.i.length) {
      k = 4;
      if (i1 >= 8) {
        k = (i1 >> 1) + i1;
      } else if (i1 >= 4) {
        k = 8;
      } 
      int[] arrayOfInt1 = this.i;
      Object[] arrayOfObject = this.a;
      d(k);
      int[] arrayOfInt2 = this.i;
      if (arrayOfInt2.length > 0) {
        System.arraycopy(arrayOfInt1, 0, arrayOfInt2, 0, arrayOfInt1.length);
        System.arraycopy(arrayOfObject, 0, this.a, 0, arrayOfObject.length);
      } 
      a(arrayOfInt1, arrayOfObject, this.b);
    } 
    int k = this.b;
    if (n < k) {
      int[] arrayOfInt = this.i;
      i1 = n + 1;
      System.arraycopy(arrayOfInt, n, arrayOfInt, i1, k - n);
      Object[] arrayOfObject = this.a;
      System.arraycopy(arrayOfObject, n, arrayOfObject, i1, this.b - n);
    } 
    this.i[n] = m;
    this.a[n] = paramE;
    this.b++;
    return true;
  }
  
  public boolean addAll(Collection<? extends E> paramCollection) {
    a(this.b + paramCollection.size());
    Iterator iterator = paramCollection.iterator();
    boolean bool;
    for (bool = false; iterator.hasNext(); bool |= add(iterator.next()));
    return bool;
  }
  
  public E b(int paramInt) { return (E)this.a[paramInt]; }
  
  public E c(int paramInt) {
    Object[] arrayOfObject = this.a;
    Object object = arrayOfObject[paramInt];
    int m = this.b;
    if (m <= 1) {
      a(this.i, arrayOfObject, m);
      this.i = c;
      this.a = d;
      this.b = 0;
      return (E)object;
    } 
    int[] arrayOfInt = this.i;
    int n = arrayOfInt.length;
    int k = 8;
    if (n > 8 && m < arrayOfInt.length / 3) {
      if (m > 8)
        k = m + (m >> 1); 
      arrayOfInt = this.i;
      Object[] arrayOfObject1 = this.a;
      d(k);
      this.b--;
      if (paramInt > 0) {
        System.arraycopy(arrayOfInt, 0, this.i, 0, paramInt);
        System.arraycopy(arrayOfObject1, 0, this.a, 0, paramInt);
      } 
      k = this.b;
      if (paramInt < k) {
        m = paramInt + 1;
        System.arraycopy(arrayOfInt, m, this.i, paramInt, k - paramInt);
        System.arraycopy(arrayOfObject1, m, this.a, paramInt, this.b - paramInt);
        return (E)object;
      } 
    } else {
      k = --this.b;
      if (paramInt < k) {
        arrayOfInt = this.i;
        m = paramInt + 1;
        System.arraycopy(arrayOfInt, m, arrayOfInt, paramInt, k - paramInt);
        Object[] arrayOfObject1 = this.a;
        System.arraycopy(arrayOfObject1, m, arrayOfObject1, paramInt, this.b - paramInt);
      } 
      this.a[this.b] = null;
    } 
    return (E)object;
  }
  
  public void clear() {
    int k = this.b;
    if (k != 0) {
      a(this.i, this.a, k);
      this.i = c;
      this.a = d;
      this.b = 0;
    } 
  }
  
  public boolean contains(Object paramObject) { return (a(paramObject) >= 0); }
  
  public boolean containsAll(Collection<?> paramCollection) {
    Iterator iterator = paramCollection.iterator();
    while (iterator.hasNext()) {
      if (!contains(iterator.next()))
        return false; 
    } 
    return true;
  }
  
  public boolean equals(Object paramObject) {
    if (this == paramObject)
      return true; 
    if (paramObject instanceof Set) {
      paramObject = (Set)paramObject;
      if (size() != paramObject.size())
        return false; 
      byte b1 = 0;
      try {
        while (b1 < this.b) {
          boolean bool = paramObject.contains(b(b1));
          if (!bool)
            return false; 
          b1++;
        } 
        return true;
      } catch (NullPointerException|ClassCastException paramObject) {
        return false;
      } 
    } 
    return false;
  }
  
  public int hashCode() {
    int[] arrayOfInt = this.i;
    int m = this.b;
    byte b1 = 0;
    int k = 0;
    while (b1 < m) {
      k += arrayOfInt[b1];
      b1++;
    } 
    return k;
  }
  
  public boolean isEmpty() { return (this.b <= 0); }
  
  public Iterator<E> iterator() { return b().e().iterator(); }
  
  public boolean remove(Object paramObject) {
    int k = a(paramObject);
    if (k >= 0) {
      c(k);
      return true;
    } 
    return false;
  }
  
  public boolean removeAll(Collection<?> paramCollection) {
    Iterator iterator = paramCollection.iterator();
    boolean bool;
    for (bool = false; iterator.hasNext(); bool |= remove(iterator.next()));
    return bool;
  }
  
  public boolean retainAll(Collection<?> paramCollection) {
    int k = this.b - 1;
    boolean bool = false;
    while (k >= 0) {
      if (!paramCollection.contains(this.a[k])) {
        c(k);
        bool = true;
      } 
      k--;
    } 
    return bool;
  }
  
  public int size() { return this.b; }
  
  public Object[] toArray() {
    int k = this.b;
    Object[] arrayOfObject = new Object[k];
    System.arraycopy(this.a, 0, arrayOfObject, 0, k);
    return arrayOfObject;
  }
  
  public <T> T[] toArray(T[] paramArrayOfT) {
    T[] arrayOfT = paramArrayOfT;
    if (paramArrayOfT.length < this.b)
      arrayOfT = (T[])(Object[])Array.newInstance(paramArrayOfT.getClass().getComponentType(), this.b); 
    System.arraycopy(this.a, 0, arrayOfT, 0, this.b);
    int k = arrayOfT.length;
    int m = this.b;
    if (k > m)
      arrayOfT[m] = null; 
    return arrayOfT;
  }
  
  public String toString() {
    if (isEmpty())
      return "{}"; 
    StringBuilder stringBuilder = new StringBuilder(this.b * 14);
    stringBuilder.append('{');
    for (byte b1 = 0; b1 < this.b; b1++) {
      if (b1)
        stringBuilder.append(", "); 
      Object object = b(b1);
      if (object != this) {
        stringBuilder.append(object);
      } else {
        stringBuilder.append("(this Set)");
      } 
    } 
    stringBuilder.append('}');
    return stringBuilder.toString();
  }
}
