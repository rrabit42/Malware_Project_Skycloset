package android.support.v4.f;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Rect;
import android.graphics.drawable.Drawable;
import android.os.Parcelable;
import android.support.v4.a.a;
import android.util.AttributeSet;
import android.util.Log;
import android.view.KeyEvent;
import android.view.MotionEvent;
import android.view.VelocityTracker;
import android.view.View;
import android.view.ViewConfiguration;
import android.view.ViewGroup;
import android.view.ViewParent;
import android.view.accessibility.AccessibilityEvent;
import android.view.animation.Interpolator;
import android.widget.EdgeEffect;
import android.widget.Scroller;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

public class u extends ViewGroup {
  static final int[] a = { 16842931 };
  
  private static final j ai;
  
  private static final Comparator<b> e = new Object();
  
  private static final Interpolator f = new Object();
  
  private int A = 1;
  
  private boolean B;
  
  private boolean C;
  
  private int D;
  
  private int E;
  
  private int F;
  
  private float G;
  
  private float H;
  
  private float I;
  
  private float J;
  
  private int K = -1;
  
  private VelocityTracker L;
  
  private int M;
  
  private int N;
  
  private int O;
  
  private int P;
  
  private boolean Q;
  
  private EdgeEffect R;
  
  private EdgeEffect S;
  
  private boolean T = true;
  
  private boolean U = false;
  
  private boolean V;
  
  private int W;
  
  private List<f> aa;
  
  private f ab;
  
  private f ac;
  
  private List<e> ad;
  
  private g ae;
  
  private int af;
  
  private int ag;
  
  private ArrayList<View> ah;
  
  private final Runnable aj = new Object(this);
  
  private int ak = 0;
  
  p b;
  
  int c;
  
  private int d;
  
  private final ArrayList<b> g = new ArrayList();
  
  private final b h = new b();
  
  private final Rect i = new Rect();
  
  private int j = -1;
  
  private Parcelable k = null;
  
  private ClassLoader l = null;
  
  private Scroller m;
  
  private boolean n;
  
  private h o;
  
  private int p;
  
  private Drawable q;
  
  private int r;
  
  private int s;
  
  private float t = -3.4028235E38F;
  
  private float u = Float.MAX_VALUE;
  
  private int v;
  
  private int w;
  
  private boolean x;
  
  private boolean y;
  
  private boolean z;
  
  static  {
    ai = new j();
  }
  
  public u(Context paramContext) {
    super(paramContext);
    a();
  }
  
  private int a(int paramInt1, float paramFloat, int paramInt2, int paramInt3) {
    if (Math.abs(paramInt3) > this.O && Math.abs(paramInt2) > this.M) {
      if (paramInt2 <= 0)
        paramInt1++; 
    } else {
      float f1;
      if (paramInt1 >= this.c) {
        f1 = 0.4F;
      } else {
        f1 = 0.6F;
      } 
      paramInt1 += (int)(paramFloat + f1);
    } 
    paramInt2 = paramInt1;
    if (this.g.size() > 0) {
      b b1 = (b)this.g.get(0);
      ArrayList arrayList = this.g;
      b b2 = (b)arrayList.get(arrayList.size() - 1);
      paramInt2 = Math.max(b1.b, Math.min(paramInt1, b2.b));
    } 
    return paramInt2;
  }
  
  private Rect a(Rect paramRect, View paramView) {
    Rect rect = paramRect;
    if (paramRect == null)
      rect = new Rect(); 
    if (paramView == null) {
      rect.set(0, 0, 0, 0);
      return rect;
    } 
    rect.left = paramView.getLeft();
    rect.right = paramView.getRight();
    rect.top = paramView.getTop();
    rect.bottom = paramView.getBottom();
    ViewParent viewParent = paramView.getParent();
    while (viewParent instanceof ViewGroup && viewParent != this) {
      ViewGroup viewGroup = (ViewGroup)viewParent;
      rect.left += viewGroup.getLeft();
      rect.right += viewGroup.getRight();
      rect.top += viewGroup.getTop();
      rect.bottom += viewGroup.getBottom();
      ViewParent viewParent1 = viewGroup.getParent();
    } 
    return rect;
  }
  
  private void a(int paramInt1, int paramInt2, int paramInt3, int paramInt4) {
    if (paramInt2 > 0 && !this.g.isEmpty()) {
      if (!this.m.isFinished()) {
        this.m.setFinalX(getCurrentItem() * getClientWidth());
        return;
      } 
      int i1 = getPaddingLeft();
      int i2 = getPaddingRight();
      int i3 = getPaddingLeft();
      int i4 = getPaddingRight();
      paramInt1 = (int)(getScrollX() / (paramInt2 - i3 - i4 + paramInt4) * (paramInt1 - i1 - i2 + paramInt3));
    } else {
      float f1;
      b b1 = b(this.c);
      if (b1 != null) {
        f1 = Math.min(b1.e, this.u);
      } else {
        f1 = 0.0F;
      } 
      paramInt1 = (int)(f1 * (paramInt1 - getPaddingLeft() - getPaddingRight()));
      if (paramInt1 != getScrollX()) {
        a(false);
      } else {
        return;
      } 
    } 
    scrollTo(paramInt1, getScrollY());
  }
  
  private void a(int paramInt1, boolean paramBoolean1, int paramInt2, boolean paramBoolean2) {
    byte b1;
    b b2 = b(paramInt1);
    if (b2 != null) {
      b1 = (int)(getClientWidth() * Math.max(this.t, Math.min(b2.e, this.u)));
    } else {
      b1 = 0;
    } 
    if (paramBoolean1) {
      a(b1, 0, paramInt2);
      if (paramBoolean2) {
        e(paramInt1);
        return;
      } 
    } else {
      if (paramBoolean2)
        e(paramInt1); 
      a(false);
      scrollTo(b1, 0);
      d(b1);
    } 
  }
  
  private void a(b paramb1, int paramInt, b paramb2) {
    float f2;
    int i4 = this.b.a();
    int i1 = getClientWidth();
    if (i1 > 0) {
      f2 = this.p / i1;
    } else {
      f2 = 0.0F;
    } 
    if (paramb2 != null) {
      i1 = paramb2.b;
      if (i1 < paramb1.b) {
        f1 = paramb2.e + paramb2.d + f2;
        i1++;
        byte b1 = 0;
        while (i1 <= paramb1.b && b1 < this.g.size()) {
          int i5;
          float f4;
          while (true) {
            paramb2 = (b)this.g.get(b1);
            i5 = i1;
            f4 = f1;
            if (i1 > paramb2.b) {
              i5 = i1;
              f4 = f1;
              if (b1 < this.g.size() - 1) {
                b1++;
                continue;
              } 
            } 
            break;
          } 
          while (i5 < paramb2.b) {
            f4 += this.b.a(i5) + f2;
            i5++;
          } 
          paramb2.e = f4;
          f1 = f4 + paramb2.d + f2;
          i1 = i5 + 1;
        } 
      } else if (i1 > paramb1.b) {
        int i5 = this.g.size() - 1;
        f1 = paramb2.e;
        while (--i1 >= paramb1.b && i5 >= 0) {
          int i6;
          float f4;
          while (true) {
            paramb2 = (b)this.g.get(i5);
            i6 = i1;
            f4 = f1;
            if (i1 < paramb2.b) {
              i6 = i1;
              f4 = f1;
              if (i5 > 0) {
                i5--;
                continue;
              } 
            } 
            break;
          } 
          while (i6 > paramb2.b) {
            f4 -= this.b.a(i6) + f2;
            i6--;
          } 
          f1 = f4 - paramb2.d + f2;
          paramb2.e = f1;
          i1 = i6 - 1;
        } 
      } 
    } 
    int i3 = this.g.size();
    float f3 = paramb1.e;
    i1 = paramb1.b - 1;
    if (paramb1.b == 0) {
      f1 = paramb1.e;
    } else {
      f1 = -3.4028235E38F;
    } 
    this.t = f1;
    int i2 = paramb1.b;
    if (i2 == --i4) {
      f1 = paramb1.e + paramb1.d - 1.0F;
    } else {
      f1 = Float.MAX_VALUE;
    } 
    this.u = f1;
    i2 = paramInt - 1;
    float f1 = f3;
    while (i2 >= 0) {
      paramb2 = (b)this.g.get(i2);
      while (i1 > paramb2.b) {
        f1 -= this.b.a(i1) + f2;
        i1--;
      } 
      f1 -= paramb2.d + f2;
      paramb2.e = f1;
      if (paramb2.b == 0)
        this.t = f1; 
      i2--;
      i1--;
    } 
    f1 = paramb1.e + paramb1.d + f2;
    i2 = paramb1.b + 1;
    i1 = paramInt + 1;
    for (paramInt = i2; i1 < i3; paramInt++) {
      paramb1 = (b)this.g.get(i1);
      while (paramInt < paramb1.b) {
        f1 += this.b.a(paramInt) + f2;
        paramInt++;
      } 
      if (paramb1.b == i4)
        this.u = paramb1.d + f1 - 1.0F; 
      paramb1.e = f1;
      f1 += paramb1.d + f2;
      i1++;
    } 
    this.U = false;
  }
  
  private void a(MotionEvent paramMotionEvent) {
    int i1 = paramMotionEvent.getActionIndex();
    if (paramMotionEvent.getPointerId(i1) == this.K) {
      if (i1 == 0) {
        i1 = 1;
      } else {
        i1 = 0;
      } 
      this.G = paramMotionEvent.getX(i1);
      this.K = paramMotionEvent.getPointerId(i1);
      VelocityTracker velocityTracker = this.L;
      if (velocityTracker != null)
        velocityTracker.clear(); 
    } 
  }
  
  private void a(boolean paramBoolean) {
    if (this.ak == 2) {
      b1 = 1;
    } else {
      b1 = 0;
    } 
    if (b1) {
      setScrollingCacheEnabled(false);
      if (this.m.isFinished() ^ true) {
        this.m.abortAnimation();
        int i1 = getScrollX();
        int i2 = getScrollY();
        int i3 = this.m.getCurrX();
        int i4 = this.m.getCurrY();
        if (i1 != i3 || i2 != i4) {
          scrollTo(i3, i4);
          if (i3 != i1)
            d(i3); 
        } 
      } 
    } 
    this.z = false;
    byte b2 = 0;
    boolean bool = b1;
    for (byte b1 = b2; b1 < this.g.size(); b1++) {
      b b3 = (b)this.g.get(b1);
      if (b3.c) {
        b3.c = false;
        bool = true;
      } 
    } 
    if (bool) {
      if (paramBoolean) {
        r.a(this, this.aj);
        return;
      } 
      this.aj.run();
    } 
  }
  
  private boolean a(float paramFloat1, float paramFloat2) { return ((paramFloat1 < this.E && paramFloat2 > 0.0F) || (paramFloat1 > (getWidth() - this.E) && paramFloat2 < 0.0F)); }
  
  private void b(int paramInt1, float paramFloat, int paramInt2) {
    f f2 = this.ab;
    if (f2 != null)
      f2.a(paramInt1, paramFloat, paramInt2); 
    List list = this.aa;
    if (list != null) {
      byte b1 = 0;
      int i1 = list.size();
      while (b1 < i1) {
        f f3 = (f)this.aa.get(b1);
        if (f3 != null)
          f3.a(paramInt1, paramFloat, paramInt2); 
        b1++;
      } 
    } 
    f f1 = this.ac;
    if (f1 != null)
      f1.a(paramInt1, paramFloat, paramInt2); 
  }
  
  private void b(boolean paramBoolean) {
    int i1 = getChildCount();
    for (byte b1 = 0; b1 < i1; b1++) {
      byte b2;
      if (paramBoolean) {
        b2 = this.af;
      } else {
        b2 = 0;
      } 
      getChildAt(b1).setLayerType(b2, null);
    } 
  }
  
  private boolean b(float paramFloat) {
    boolean bool;
    float f1 = this.G;
    this.G = paramFloat;
    float f2 = getScrollX() + f1 - paramFloat;
    float f3 = getClientWidth();
    paramFloat = this.t * f3;
    f1 = this.u * f3;
    ArrayList arrayList1 = this.g;
    byte b1 = 0;
    byte b2 = 0;
    int i2 = 0;
    b b3 = (b)arrayList1.get(0);
    ArrayList arrayList2 = this.g;
    b b4 = (b)arrayList2.get(arrayList2.size() - 1);
    if (b3.b != 0) {
      paramFloat = b3.e * f3;
      i1 = 0;
    } else {
      i1 = 1;
    } 
    if (b4.b != this.b.a() - 1) {
      f1 = b4.e * f3;
      bool = false;
    } else {
      bool = true;
    } 
    if (f2 < paramFloat) {
      if (i1) {
        this.R.onPull(Math.abs(paramFloat - f2) / f3);
        i2 = 1;
      } 
    } else {
      i2 = b2;
      paramFloat = f2;
      if (f2 > f1) {
        i2 = b1;
        if (bool) {
          this.S.onPull(Math.abs(f2 - f1) / f3);
          i2 = 1;
        } 
        paramFloat = f1;
      } 
    } 
    f1 = this.G;
    int i1 = (int)paramFloat;
    this.G = f1 + paramFloat - i1;
    scrollTo(i1, getScrollY());
    d(i1);
    return i2;
  }
  
  private void c(boolean paramBoolean) {
    ViewParent viewParent = getParent();
    if (viewParent != null)
      viewParent.requestDisallowInterceptTouchEvent(paramBoolean); 
  }
  
  private static boolean c(View paramView) { return (paramView.getClass().getAnnotation(a.class) != null); }
  
  private boolean d(int paramInt) {
    if (this.g.size() == 0) {
      if (this.T)
        return false; 
      this.V = false;
      a(0, 0.0F, 0);
      if (this.V)
        return false; 
      throw new IllegalStateException("onPageScrolled did not call superclass implementation");
    } 
    b b1 = i();
    int i2 = getClientWidth();
    int i3 = this.p;
    float f2 = i3;
    float f1 = i2;
    f2 /= f1;
    int i1 = b1.b;
    f1 = (paramInt / f1 - b1.e) / (b1.d + f2);
    paramInt = (int)((i2 + i3) * f1);
    this.V = false;
    a(i1, f1, paramInt);
    if (this.V)
      return true; 
    throw new IllegalStateException("onPageScrolled did not call superclass implementation");
  }
  
  private void e(int paramInt) {
    f f2 = this.ab;
    if (f2 != null)
      f2.a(paramInt); 
    List list = this.aa;
    if (list != null) {
      byte b1 = 0;
      int i1 = list.size();
      while (b1 < i1) {
        f f3 = (f)this.aa.get(b1);
        if (f3 != null)
          f3.a(paramInt); 
        b1++;
      } 
    } 
    f f1 = this.ac;
    if (f1 != null)
      f1.a(paramInt); 
  }
  
  private void f() {
    for (byte b1 = 0; b1 < getChildCount(); b1 = b2 + 1) {
      byte b2 = b1;
      if (!((c)getChildAt(b1).getLayoutParams()).a) {
        removeViewAt(b1);
        b2 = b1 - 1;
      } 
    } 
  }
  
  private void f(int paramInt) {
    f f2 = this.ab;
    if (f2 != null)
      f2.b(paramInt); 
    List list = this.aa;
    if (list != null) {
      byte b1 = 0;
      int i1 = list.size();
      while (b1 < i1) {
        f f3 = (f)this.aa.get(b1);
        if (f3 != null)
          f3.b(paramInt); 
        b1++;
      } 
    } 
    f f1 = this.ac;
    if (f1 != null)
      f1.b(paramInt); 
  }
  
  private void g() {
    if (this.ag != 0) {
      ArrayList arrayList = this.ah;
      if (arrayList == null) {
        this.ah = new ArrayList();
      } else {
        arrayList.clear();
      } 
      int i1 = getChildCount();
      for (byte b1 = 0; b1 < i1; b1++) {
        View view = getChildAt(b1);
        this.ah.add(view);
      } 
      Collections.sort(this.ah, ai);
    } 
  }
  
  private int getClientWidth() { return getMeasuredWidth() - getPaddingLeft() - getPaddingRight(); }
  
  private boolean h() {
    this.K = -1;
    j();
    this.R.onRelease();
    this.S.onRelease();
    return (this.R.isFinished() || this.S.isFinished());
  }
  
  private b i() {
    float f2;
    float f1;
    int i1 = getClientWidth();
    if (i1 > 0) {
      f1 = getScrollX() / i1;
    } else {
      f1 = 0.0F;
    } 
    if (i1 > 0) {
      f2 = this.p / i1;
    } else {
      f2 = 0.0F;
    } 
    b b1 = null;
    float f3 = 0.0F;
    float f4 = f3;
    i1 = 0;
    int i2 = -1;
    boolean bool = true;
    while (i1 < this.g.size()) {
      b b3 = (b)this.g.get(i1);
      int i3 = i1;
      b b2 = b3;
      if (!bool) {
        int i4 = b3.b;
        i2++;
        i3 = i1;
        b2 = b3;
        if (i4 != i2) {
          b2 = this.h;
          b2.e = f3 + f4 + f2;
          b2.b = i2;
          b2.d = this.b.a(b2.b);
          i3 = i1 - 1;
        } 
      } 
      f3 = b2.e;
      f4 = b2.d;
      if (bool || f1 >= f3) {
        if (f1 >= f4 + f3 + f2) {
          if (i3 == this.g.size() - 1)
            return b2; 
          i2 = b2.b;
          f4 = b2.d;
          i1 = i3 + 1;
          bool = false;
          b1 = b2;
          continue;
        } 
        return b2;
      } 
      return b1;
    } 
    return b1;
  }
  
  private void j() {
    this.B = false;
    this.C = false;
    VelocityTracker velocityTracker = this.L;
    if (velocityTracker != null) {
      velocityTracker.recycle();
      this.L = null;
    } 
  }
  
  private void setScrollingCacheEnabled(boolean paramBoolean) {
    if (this.y != paramBoolean)
      this.y = paramBoolean; 
  }
  
  float a(float paramFloat) { return (float)Math.sin(((paramFloat - 0.5F) * 0.47123894F)); }
  
  b a(int paramInt1, int paramInt2) {
    b b1 = new b();
    b1.b = paramInt1;
    b1.a = this.b.a(this, paramInt1);
    b1.d = this.b.a(paramInt1);
    if (paramInt2 < 0 || paramInt2 >= this.g.size()) {
      this.g.add(b1);
      return b1;
    } 
    this.g.add(paramInt2, b1);
    return b1;
  }
  
  b a(View paramView) {
    for (byte b1 = 0; b1 < this.g.size(); b1++) {
      b b2 = (b)this.g.get(b1);
      if (this.b.a(paramView, b2.a))
        return b2; 
    } 
    return null;
  }
  
  void a() {
    setWillNotDraw(false);
    setDescendantFocusability(262144);
    setFocusable(true);
    Context context = getContext();
    this.m = new Scroller(context, f);
    ViewConfiguration viewConfiguration = ViewConfiguration.get(context);
    float f1 = (context.getResources().getDisplayMetrics()).density;
    this.F = viewConfiguration.getScaledPagingTouchSlop();
    this.M = (int)(400.0F * f1);
    this.N = viewConfiguration.getScaledMaximumFlingVelocity();
    this.R = new EdgeEffect(context);
    this.S = new EdgeEffect(context);
    this.O = (int)(25.0F * f1);
    this.P = (int)(2.0F * f1);
    this.D = (int)(f1 * 16.0F);
    r.a(this, new d(this));
    if (r.c(this) == 0)
      r.a(this, 1); 
    r.a(this, new Object(this));
  }
  
  void a(int paramInt) { // Byte code:
    //   0: aload_0
    //   1: getfield c : I
    //   4: istore #5
    //   6: iload #5
    //   8: iload_1
    //   9: if_icmpeq -> 28
    //   12: aload_0
    //   13: iload #5
    //   15: invokevirtual b : (I)Landroid/support/v4/f/u$b;
    //   18: astore #14
    //   20: aload_0
    //   21: iload_1
    //   22: putfield c : I
    //   25: goto -> 31
    //   28: aconst_null
    //   29: astore #14
    //   31: aload_0
    //   32: getfield b : Landroid/support/v4/f/p;
    //   35: ifnonnull -> 43
    //   38: aload_0
    //   39: invokespecial g : ()V
    //   42: return
    //   43: aload_0
    //   44: getfield z : Z
    //   47: ifeq -> 55
    //   50: aload_0
    //   51: invokespecial g : ()V
    //   54: return
    //   55: aload_0
    //   56: invokevirtual getWindowToken : ()Landroid/os/IBinder;
    //   59: ifnonnull -> 63
    //   62: return
    //   63: aload_0
    //   64: getfield b : Landroid/support/v4/f/p;
    //   67: aload_0
    //   68: invokevirtual a : (Landroid/view/ViewGroup;)V
    //   71: aload_0
    //   72: getfield A : I
    //   75: istore_1
    //   76: iconst_0
    //   77: aload_0
    //   78: getfield c : I
    //   81: iload_1
    //   82: isub
    //   83: invokestatic max : (II)I
    //   86: istore #11
    //   88: aload_0
    //   89: getfield b : Landroid/support/v4/f/p;
    //   92: invokevirtual a : ()I
    //   95: istore #9
    //   97: iload #9
    //   99: iconst_1
    //   100: isub
    //   101: aload_0
    //   102: getfield c : I
    //   105: iload_1
    //   106: iadd
    //   107: invokestatic min : (II)I
    //   110: istore #10
    //   112: iload #9
    //   114: aload_0
    //   115: getfield d : I
    //   118: if_icmpne -> 1141
    //   121: iconst_0
    //   122: istore_1
    //   123: iload_1
    //   124: aload_0
    //   125: getfield g : Ljava/util/ArrayList;
    //   128: invokevirtual size : ()I
    //   131: if_icmpge -> 181
    //   134: aload_0
    //   135: getfield g : Ljava/util/ArrayList;
    //   138: iload_1
    //   139: invokevirtual get : (I)Ljava/lang/Object;
    //   142: checkcast android/support/v4/f/u$b
    //   145: astore #13
    //   147: aload #13
    //   149: getfield b : I
    //   152: aload_0
    //   153: getfield c : I
    //   156: if_icmplt -> 174
    //   159: aload #13
    //   161: getfield b : I
    //   164: aload_0
    //   165: getfield c : I
    //   168: if_icmpne -> 181
    //   171: goto -> 184
    //   174: iload_1
    //   175: iconst_1
    //   176: iadd
    //   177: istore_1
    //   178: goto -> 123
    //   181: aconst_null
    //   182: astore #13
    //   184: aload #13
    //   186: astore #15
    //   188: aload #13
    //   190: ifnonnull -> 213
    //   193: aload #13
    //   195: astore #15
    //   197: iload #9
    //   199: ifle -> 213
    //   202: aload_0
    //   203: aload_0
    //   204: getfield c : I
    //   207: iload_1
    //   208: invokevirtual a : (II)Landroid/support/v4/f/u$b;
    //   211: astore #15
    //   213: aload #15
    //   215: ifnull -> 925
    //   218: iload_1
    //   219: iconst_1
    //   220: isub
    //   221: istore #5
    //   223: iload #5
    //   225: iflt -> 245
    //   228: aload_0
    //   229: getfield g : Ljava/util/ArrayList;
    //   232: iload #5
    //   234: invokevirtual get : (I)Ljava/lang/Object;
    //   237: checkcast android/support/v4/f/u$b
    //   240: astore #13
    //   242: goto -> 248
    //   245: aconst_null
    //   246: astore #13
    //   248: aload_0
    //   249: invokespecial getClientWidth : ()I
    //   252: istore #12
    //   254: iload #12
    //   256: ifgt -> 265
    //   259: fconst_0
    //   260: fstore #4
    //   262: goto -> 284
    //   265: fconst_2
    //   266: aload #15
    //   268: getfield d : F
    //   271: fsub
    //   272: aload_0
    //   273: invokevirtual getPaddingLeft : ()I
    //   276: i2f
    //   277: iload #12
    //   279: i2f
    //   280: fdiv
    //   281: fadd
    //   282: fstore #4
    //   284: aload_0
    //   285: getfield c : I
    //   288: iconst_1
    //   289: isub
    //   290: istore #8
    //   292: fconst_0
    //   293: fstore_3
    //   294: iload #8
    //   296: iflt -> 559
    //   299: fload_3
    //   300: fload #4
    //   302: fcmpl
    //   303: iflt -> 417
    //   306: iload #8
    //   308: iload #11
    //   310: if_icmpge -> 417
    //   313: aload #13
    //   315: ifnonnull -> 321
    //   318: goto -> 559
    //   321: fload_3
    //   322: fstore_2
    //   323: iload_1
    //   324: istore #7
    //   326: aload #13
    //   328: astore #16
    //   330: iload #5
    //   332: istore #6
    //   334: iload #8
    //   336: aload #13
    //   338: getfield b : I
    //   341: if_icmpne -> 537
    //   344: fload_3
    //   345: fstore_2
    //   346: iload_1
    //   347: istore #7
    //   349: aload #13
    //   351: astore #16
    //   353: iload #5
    //   355: istore #6
    //   357: aload #13
    //   359: getfield c : Z
    //   362: ifne -> 537
    //   365: aload_0
    //   366: getfield g : Ljava/util/ArrayList;
    //   369: iload #5
    //   371: invokevirtual remove : (I)Ljava/lang/Object;
    //   374: pop
    //   375: aload_0
    //   376: getfield b : Landroid/support/v4/f/p;
    //   379: aload_0
    //   380: iload #8
    //   382: aload #13
    //   384: getfield a : Ljava/lang/Object;
    //   387: invokevirtual a : (Landroid/view/ViewGroup;ILjava/lang/Object;)V
    //   390: iload #5
    //   392: iconst_1
    //   393: isub
    //   394: istore #5
    //   396: iload_1
    //   397: iconst_1
    //   398: isub
    //   399: istore_1
    //   400: fload_3
    //   401: fstore_2
    //   402: iload_1
    //   403: istore #6
    //   405: iload #5
    //   407: istore #7
    //   409: iload #5
    //   411: iflt -> 516
    //   414: goto -> 497
    //   417: aload #13
    //   419: ifnull -> 463
    //   422: iload #8
    //   424: aload #13
    //   426: getfield b : I
    //   429: if_icmpne -> 463
    //   432: fload_3
    //   433: aload #13
    //   435: getfield d : F
    //   438: fadd
    //   439: fstore_3
    //   440: iload #5
    //   442: iconst_1
    //   443: isub
    //   444: istore #5
    //   446: fload_3
    //   447: fstore_2
    //   448: iload_1
    //   449: istore #6
    //   451: iload #5
    //   453: istore #7
    //   455: iload #5
    //   457: iflt -> 516
    //   460: goto -> 497
    //   463: fload_3
    //   464: aload_0
    //   465: iload #8
    //   467: iload #5
    //   469: iconst_1
    //   470: iadd
    //   471: invokevirtual a : (II)Landroid/support/v4/f/u$b;
    //   474: getfield d : F
    //   477: fadd
    //   478: fstore_3
    //   479: iload_1
    //   480: iconst_1
    //   481: iadd
    //   482: istore_1
    //   483: fload_3
    //   484: fstore_2
    //   485: iload_1
    //   486: istore #6
    //   488: iload #5
    //   490: istore #7
    //   492: iload #5
    //   494: iflt -> 516
    //   497: aload_0
    //   498: getfield g : Ljava/util/ArrayList;
    //   501: iload #5
    //   503: invokevirtual get : (I)Ljava/lang/Object;
    //   506: checkcast android/support/v4/f/u$b
    //   509: astore #13
    //   511: fload_3
    //   512: fstore_2
    //   513: goto -> 526
    //   516: aconst_null
    //   517: astore #13
    //   519: iload #7
    //   521: istore #5
    //   523: iload #6
    //   525: istore_1
    //   526: iload #5
    //   528: istore #6
    //   530: aload #13
    //   532: astore #16
    //   534: iload_1
    //   535: istore #7
    //   537: iload #8
    //   539: iconst_1
    //   540: isub
    //   541: istore #8
    //   543: fload_2
    //   544: fstore_3
    //   545: iload #7
    //   547: istore_1
    //   548: aload #16
    //   550: astore #13
    //   552: iload #6
    //   554: istore #5
    //   556: goto -> 294
    //   559: aload #15
    //   561: getfield d : F
    //   564: fstore_3
    //   565: iload_1
    //   566: iconst_1
    //   567: iadd
    //   568: istore #5
    //   570: fload_3
    //   571: fconst_2
    //   572: fcmpg
    //   573: ifge -> 899
    //   576: iload #5
    //   578: aload_0
    //   579: getfield g : Ljava/util/ArrayList;
    //   582: invokevirtual size : ()I
    //   585: if_icmpge -> 605
    //   588: aload_0
    //   589: getfield g : Ljava/util/ArrayList;
    //   592: iload #5
    //   594: invokevirtual get : (I)Ljava/lang/Object;
    //   597: checkcast android/support/v4/f/u$b
    //   600: astore #13
    //   602: goto -> 608
    //   605: aconst_null
    //   606: astore #13
    //   608: iload #12
    //   610: ifgt -> 619
    //   613: fconst_0
    //   614: fstore #4
    //   616: goto -> 632
    //   619: aload_0
    //   620: invokevirtual getPaddingRight : ()I
    //   623: i2f
    //   624: iload #12
    //   626: i2f
    //   627: fdiv
    //   628: fconst_2
    //   629: fadd
    //   630: fstore #4
    //   632: aload_0
    //   633: getfield c : I
    //   636: istore #6
    //   638: aload #13
    //   640: astore #16
    //   642: iload #6
    //   644: iconst_1
    //   645: iadd
    //   646: istore #7
    //   648: iload #7
    //   650: iload #9
    //   652: if_icmpge -> 899
    //   655: fload_3
    //   656: fload #4
    //   658: fcmpl
    //   659: iflt -> 787
    //   662: iload #7
    //   664: iload #10
    //   666: if_icmple -> 787
    //   669: aload #16
    //   671: ifnonnull -> 677
    //   674: goto -> 899
    //   677: fload_3
    //   678: fstore_2
    //   679: iload #5
    //   681: istore #6
    //   683: aload #16
    //   685: astore #13
    //   687: iload #7
    //   689: aload #16
    //   691: getfield b : I
    //   694: if_icmpne -> 882
    //   697: fload_3
    //   698: fstore_2
    //   699: iload #5
    //   701: istore #6
    //   703: aload #16
    //   705: astore #13
    //   707: aload #16
    //   709: getfield c : Z
    //   712: ifne -> 882
    //   715: aload_0
    //   716: getfield g : Ljava/util/ArrayList;
    //   719: iload #5
    //   721: invokevirtual remove : (I)Ljava/lang/Object;
    //   724: pop
    //   725: aload_0
    //   726: getfield b : Landroid/support/v4/f/p;
    //   729: aload_0
    //   730: iload #7
    //   732: aload #16
    //   734: getfield a : Ljava/lang/Object;
    //   737: invokevirtual a : (Landroid/view/ViewGroup;ILjava/lang/Object;)V
    //   740: fload_3
    //   741: fstore_2
    //   742: iload #5
    //   744: istore #6
    //   746: iload #5
    //   748: aload_0
    //   749: getfield g : Ljava/util/ArrayList;
    //   752: invokevirtual size : ()I
    //   755: if_icmpge -> 781
    //   758: aload_0
    //   759: getfield g : Ljava/util/ArrayList;
    //   762: iload #5
    //   764: invokevirtual get : (I)Ljava/lang/Object;
    //   767: checkcast android/support/v4/f/u$b
    //   770: astore #13
    //   772: fload_3
    //   773: fstore_2
    //   774: iload #5
    //   776: istore #6
    //   778: goto -> 882
    //   781: aconst_null
    //   782: astore #13
    //   784: goto -> 882
    //   787: aload #16
    //   789: ifnull -> 837
    //   792: iload #7
    //   794: aload #16
    //   796: getfield b : I
    //   799: if_icmpne -> 837
    //   802: fload_3
    //   803: aload #16
    //   805: getfield d : F
    //   808: fadd
    //   809: fstore_3
    //   810: iload #5
    //   812: iconst_1
    //   813: iadd
    //   814: istore #5
    //   816: fload_3
    //   817: fstore_2
    //   818: iload #5
    //   820: istore #6
    //   822: iload #5
    //   824: aload_0
    //   825: getfield g : Ljava/util/ArrayList;
    //   828: invokevirtual size : ()I
    //   831: if_icmpge -> 781
    //   834: goto -> 758
    //   837: aload_0
    //   838: iload #7
    //   840: iload #5
    //   842: invokevirtual a : (II)Landroid/support/v4/f/u$b;
    //   845: astore #13
    //   847: iload #5
    //   849: iconst_1
    //   850: iadd
    //   851: istore #5
    //   853: fload_3
    //   854: aload #13
    //   856: getfield d : F
    //   859: fadd
    //   860: fstore_3
    //   861: fload_3
    //   862: fstore_2
    //   863: iload #5
    //   865: istore #6
    //   867: iload #5
    //   869: aload_0
    //   870: getfield g : Ljava/util/ArrayList;
    //   873: invokevirtual size : ()I
    //   876: if_icmpge -> 781
    //   879: goto -> 758
    //   882: fload_2
    //   883: fstore_3
    //   884: iload #6
    //   886: istore #5
    //   888: aload #13
    //   890: astore #16
    //   892: iload #7
    //   894: istore #6
    //   896: goto -> 642
    //   899: aload_0
    //   900: aload #15
    //   902: iload_1
    //   903: aload #14
    //   905: invokespecial a : (Landroid/support/v4/f/u$b;ILandroid/support/v4/f/u$b;)V
    //   908: aload_0
    //   909: getfield b : Landroid/support/v4/f/p;
    //   912: aload_0
    //   913: aload_0
    //   914: getfield c : I
    //   917: aload #15
    //   919: getfield a : Ljava/lang/Object;
    //   922: invokevirtual b : (Landroid/view/ViewGroup;ILjava/lang/Object;)V
    //   925: aload_0
    //   926: getfield b : Landroid/support/v4/f/p;
    //   929: aload_0
    //   930: invokevirtual b : (Landroid/view/ViewGroup;)V
    //   933: aload_0
    //   934: invokevirtual getChildCount : ()I
    //   937: istore #5
    //   939: iconst_0
    //   940: istore_1
    //   941: iload_1
    //   942: iload #5
    //   944: if_icmpge -> 1028
    //   947: aload_0
    //   948: iload_1
    //   949: invokevirtual getChildAt : (I)Landroid/view/View;
    //   952: astore #14
    //   954: aload #14
    //   956: invokevirtual getLayoutParams : ()Landroid/view/ViewGroup$LayoutParams;
    //   959: checkcast android/support/v4/f/u$c
    //   962: astore #13
    //   964: aload #13
    //   966: iload_1
    //   967: putfield f : I
    //   970: aload #13
    //   972: getfield a : Z
    //   975: ifne -> 1021
    //   978: aload #13
    //   980: getfield c : F
    //   983: fconst_0
    //   984: fcmpl
    //   985: ifne -> 1021
    //   988: aload_0
    //   989: aload #14
    //   991: invokevirtual a : (Landroid/view/View;)Landroid/support/v4/f/u$b;
    //   994: astore #14
    //   996: aload #14
    //   998: ifnull -> 1021
    //   1001: aload #13
    //   1003: aload #14
    //   1005: getfield d : F
    //   1008: putfield c : F
    //   1011: aload #13
    //   1013: aload #14
    //   1015: getfield b : I
    //   1018: putfield e : I
    //   1021: iload_1
    //   1022: iconst_1
    //   1023: iadd
    //   1024: istore_1
    //   1025: goto -> 941
    //   1028: aload_0
    //   1029: invokespecial g : ()V
    //   1032: aload_0
    //   1033: invokevirtual hasFocus : ()Z
    //   1036: ifeq -> 1140
    //   1039: aload_0
    //   1040: invokevirtual findFocus : ()Landroid/view/View;
    //   1043: astore #13
    //   1045: aload #13
    //   1047: ifnull -> 1061
    //   1050: aload_0
    //   1051: aload #13
    //   1053: invokevirtual b : (Landroid/view/View;)Landroid/support/v4/f/u$b;
    //   1056: astore #13
    //   1058: goto -> 1064
    //   1061: aconst_null
    //   1062: astore #13
    //   1064: aload #13
    //   1066: ifnull -> 1081
    //   1069: aload #13
    //   1071: getfield b : I
    //   1074: aload_0
    //   1075: getfield c : I
    //   1078: if_icmpeq -> 1140
    //   1081: iconst_0
    //   1082: istore_1
    //   1083: iload_1
    //   1084: aload_0
    //   1085: invokevirtual getChildCount : ()I
    //   1088: if_icmpge -> 1140
    //   1091: aload_0
    //   1092: iload_1
    //   1093: invokevirtual getChildAt : (I)Landroid/view/View;
    //   1096: astore #13
    //   1098: aload_0
    //   1099: aload #13
    //   1101: invokevirtual a : (Landroid/view/View;)Landroid/support/v4/f/u$b;
    //   1104: astore #14
    //   1106: aload #14
    //   1108: ifnull -> 1133
    //   1111: aload #14
    //   1113: getfield b : I
    //   1116: aload_0
    //   1117: getfield c : I
    //   1120: if_icmpne -> 1133
    //   1123: aload #13
    //   1125: iconst_2
    //   1126: invokevirtual requestFocus : (I)Z
    //   1129: ifeq -> 1133
    //   1132: return
    //   1133: iload_1
    //   1134: iconst_1
    //   1135: iadd
    //   1136: istore_1
    //   1137: goto -> 1083
    //   1140: return
    //   1141: aload_0
    //   1142: invokevirtual getResources : ()Landroid/content/res/Resources;
    //   1145: aload_0
    //   1146: invokevirtual getId : ()I
    //   1149: invokevirtual getResourceName : (I)Ljava/lang/String;
    //   1152: astore #13
    //   1154: goto -> 1166
    //   1157: aload_0
    //   1158: invokevirtual getId : ()I
    //   1161: invokestatic toHexString : (I)Ljava/lang/String;
    //   1164: astore #13
    //   1166: new java/lang/StringBuilder
    //   1169: dup
    //   1170: invokespecial <init> : ()V
    //   1173: astore #14
    //   1175: aload #14
    //   1177: ldc_w 'The application's PagerAdapter changed the adapter's contents without calling PagerAdapter#notifyDataSetChanged! Expected adapter item count: '
    //   1180: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1183: pop
    //   1184: aload #14
    //   1186: aload_0
    //   1187: getfield d : I
    //   1190: invokevirtual append : (I)Ljava/lang/StringBuilder;
    //   1193: pop
    //   1194: aload #14
    //   1196: ldc_w ', found: '
    //   1199: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1202: pop
    //   1203: aload #14
    //   1205: iload #9
    //   1207: invokevirtual append : (I)Ljava/lang/StringBuilder;
    //   1210: pop
    //   1211: aload #14
    //   1213: ldc_w ' Pager id: '
    //   1216: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1219: pop
    //   1220: aload #14
    //   1222: aload #13
    //   1224: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1227: pop
    //   1228: aload #14
    //   1230: ldc_w ' Pager class: '
    //   1233: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1236: pop
    //   1237: aload #14
    //   1239: aload_0
    //   1240: invokevirtual getClass : ()Ljava/lang/Class;
    //   1243: invokevirtual append : (Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   1246: pop
    //   1247: aload #14
    //   1249: ldc_w ' Problematic adapter: '
    //   1252: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1255: pop
    //   1256: aload #14
    //   1258: aload_0
    //   1259: getfield b : Landroid/support/v4/f/p;
    //   1262: invokevirtual getClass : ()Ljava/lang/Class;
    //   1265: invokevirtual append : (Ljava/lang/Object;)Ljava/lang/StringBuilder;
    //   1268: pop
    //   1269: new java/lang/IllegalStateException
    //   1272: dup
    //   1273: aload #14
    //   1275: invokevirtual toString : ()Ljava/lang/String;
    //   1278: invokespecial <init> : (Ljava/lang/String;)V
    //   1281: athrow
    //   1282: astore #13
    //   1284: goto -> 1157
    // Exception table:
    //   from	to	target	type
    //   1141	1154	1282	android/content/res/Resources$NotFoundException }
  
  protected void a(int paramInt1, float paramFloat, int paramInt2) {
    int i1 = this.W;
    int i2 = 0;
    if (i1 > 0) {
      int i4 = getScrollX();
      i1 = getPaddingLeft();
      int i3 = getPaddingRight();
      int i5 = getWidth();
      int i6 = getChildCount();
      byte b1;
      for (b1 = 0; b1 < i6; b1++) {
        View view = getChildAt(b1);
        c c1 = (c)view.getLayoutParams();
        if (c1.a) {
          int i7 = c1.b & 0x7;
          if (i7 != 1) {
            if (i7 != 3) {
              if (i7 != 5) {
                int i8 = i1;
                i7 = i1;
                i1 = i8;
              } else {
                i7 = i5 - i3 - view.getMeasuredWidth();
                i3 += view.getMeasuredWidth();
              } 
            } else {
              int i8 = view.getWidth() + i1;
              i7 = i1;
              i1 = i8;
            } 
          } else {
            i7 = Math.max((i5 - view.getMeasuredWidth()) / 2, i1);
          } 
          i7 = i7 + i4 - view.getLeft();
          if (i7 != 0)
            view.offsetLeftAndRight(i7); 
        } 
      } 
    } 
    b(paramInt1, paramFloat, paramInt2);
    if (this.ae != null) {
      paramInt2 = getScrollX();
      i1 = getChildCount();
      for (paramInt1 = i2; paramInt1 < i1; paramInt1++) {
        View view = getChildAt(paramInt1);
        if (!((c)view.getLayoutParams()).a) {
          paramFloat = (view.getLeft() - paramInt2) / getClientWidth();
          this.ae.a(view, paramFloat);
        } 
      } 
    } 
    this.V = true;
  }
  
  void a(int paramInt1, int paramInt2, int paramInt3) {
    int i1;
    if (getChildCount() == 0) {
      setScrollingCacheEnabled(false);
      return;
    } 
    Scroller scroller = this.m;
    if (scroller != null && !scroller.isFinished()) {
      i1 = 1;
    } else {
      i1 = 0;
    } 
    if (i1) {
      if (this.n) {
        i1 = this.m.getCurrX();
      } else {
        i1 = this.m.getStartX();
      } 
      this.m.abortAnimation();
      setScrollingCacheEnabled(false);
    } else {
      i1 = getScrollX();
    } 
    int i2 = getScrollY();
    int i3 = paramInt1 - i1;
    paramInt2 -= i2;
    if (i3 == 0 && paramInt2 == 0) {
      a(false);
      c();
      setScrollState(0);
      return;
    } 
    setScrollingCacheEnabled(true);
    setScrollState(2);
    paramInt1 = getClientWidth();
    int i4 = paramInt1 / 2;
    float f2 = Math.abs(i3);
    float f1 = paramInt1;
    float f3 = Math.min(1.0F, f2 * 1.0F / f1);
    f2 = i4;
    f3 = a(f3);
    paramInt1 = Math.abs(paramInt3);
    if (paramInt1 > 0) {
      paramInt1 = Math.round(Math.abs((f2 + f3 * f2) / paramInt1) * 1000.0F) * 4;
    } else {
      f2 = this.b.a(this.c);
      paramInt1 = (int)((Math.abs(i3) / (f1 * f2 + this.p) + 1.0F) * 100.0F);
    } 
    paramInt1 = Math.min(paramInt1, 600);
    this.n = false;
    this.m.startScroll(i1, i2, i3, paramInt2, paramInt1);
    r.b(this);
  }
  
  public void a(int paramInt, boolean paramBoolean) {
    this.z = false;
    a(paramInt, paramBoolean, false);
  }
  
  void a(int paramInt, boolean paramBoolean1, boolean paramBoolean2) { a(paramInt, paramBoolean1, paramBoolean2, 0); }
  
  void a(int paramInt1, boolean paramBoolean1, boolean paramBoolean2, int paramInt2) {
    int i1;
    p p1 = this.b;
    if (p1 == null || p1.a() <= 0) {
      setScrollingCacheEnabled(false);
      return;
    } 
    if (!paramBoolean2 && this.c == paramInt1 && this.g.size() != 0) {
      setScrollingCacheEnabled(false);
      return;
    } 
    paramBoolean2 = true;
    if (paramInt1 < 0) {
      i1 = 0;
    } else {
      i1 = paramInt1;
      if (paramInt1 >= this.b.a())
        i1 = this.b.a() - 1; 
    } 
    paramInt1 = this.A;
    int i2 = this.c;
    if (i1 > i2 + paramInt1 || i1 < i2 - paramInt1)
      for (paramInt1 = 0; paramInt1 < this.g.size(); paramInt1++)
        ((b)this.g.get(paramInt1)).c = true;  
    if (this.c == i1)
      paramBoolean2 = false; 
    if (this.T) {
      this.c = i1;
      if (paramBoolean2)
        e(i1); 
      requestLayout();
      return;
    } 
    a(i1);
    a(i1, paramBoolean1, paramInt2, paramBoolean2);
  }
  
  public boolean a(KeyEvent paramKeyEvent) {
    if (paramKeyEvent.getAction() == 0) {
      int i1 = paramKeyEvent.getKeyCode();
      if (i1 != 61) {
        switch (i1) {
          default:
            return false;
          case 22:
            if (paramKeyEvent.hasModifiers(2))
              return e(); 
            i1 = 66;
            return c(i1);
          case 21:
            break;
        } 
        if (paramKeyEvent.hasModifiers(2))
          return d(); 
        i1 = 17;
        return c(i1);
      } 
      if (paramKeyEvent.hasNoModifiers())
        return c(2); 
      if (paramKeyEvent.hasModifiers(1))
        return c(1); 
    } 
  }
  
  protected boolean a(View paramView, boolean paramBoolean, int paramInt1, int paramInt2, int paramInt3) {
    if (paramView instanceof ViewGroup) {
      ViewGroup viewGroup = (ViewGroup)paramView;
      int i2 = paramView.getScrollX();
      int i3 = paramView.getScrollY();
      int i1;
      for (i1 = viewGroup.getChildCount() - 1; i1 >= 0; i1--) {
        View view = viewGroup.getChildAt(i1);
        int i4 = paramInt2 + i2;
        if (i4 >= view.getLeft() && i4 < view.getRight()) {
          int i5 = paramInt3 + i3;
          if (i5 >= view.getTop() && i5 < view.getBottom() && a(view, true, paramInt1, i4 - view.getLeft(), i5 - view.getTop()))
            return true; 
        } 
      } 
    } 
    return (paramBoolean && paramView.canScrollHorizontally(-paramInt1));
  }
  
  public void addFocusables(ArrayList<View> paramArrayList, int paramInt1, int paramInt2) {
    int i1 = paramArrayList.size();
    int i2 = getDescendantFocusability();
    if (i2 != 393216) {
      byte b1;
      for (b1 = 0; b1 < getChildCount(); b1++) {
        View view = getChildAt(b1);
        if (view.getVisibility() == 0) {
          b b2 = a(view);
          if (b2 != null && b2.b == this.c)
            view.addFocusables(paramArrayList, paramInt1, paramInt2); 
        } 
      } 
    } 
    if (i2 != 262144 || i1 == paramArrayList.size()) {
      if (!isFocusable())
        return; 
      if ((paramInt2 & true) == 1 && isInTouchMode() && !isFocusableInTouchMode())
        return; 
      if (paramArrayList != null)
        paramArrayList.add(this); 
    } 
  }
  
  public void addTouchables(ArrayList<View> paramArrayList) {
    for (byte b1 = 0; b1 < getChildCount(); b1++) {
      View view = getChildAt(b1);
      if (view.getVisibility() == 0) {
        b b2 = a(view);
        if (b2 != null && b2.b == this.c)
          view.addTouchables(paramArrayList); 
      } 
    } 
  }
  
  public void addView(View paramView, int paramInt, ViewGroup.LayoutParams paramLayoutParams) {
    ViewGroup.LayoutParams layoutParams = paramLayoutParams;
    if (!checkLayoutParams(paramLayoutParams))
      layoutParams = generateLayoutParams(paramLayoutParams); 
    c c1 = (c)layoutParams;
    c1.a |= c(paramView);
    if (this.x) {
      if (c1 == null || !c1.a) {
        c1.d = true;
        addViewInLayout(paramView, paramInt, layoutParams);
        return;
      } 
      throw new IllegalStateException("Cannot add pager decor view during layout");
    } 
    super.addView(paramView, paramInt, layoutParams);
  }
  
  b b(int paramInt) {
    for (byte b1 = 0; b1 < this.g.size(); b1++) {
      b b2 = (b)this.g.get(b1);
      if (b2.b == paramInt)
        return b2; 
    } 
    return null;
  }
  
  b b(View paramView) {
    while (true) {
      ViewParent viewParent = paramView.getParent();
      if (viewParent != this) {
        if (viewParent == null || !(viewParent instanceof View))
          return null; 
        paramView = (View)viewParent;
        continue;
      } 
      break;
    } 
    return a(paramView);
  }
  
  void b() { // Byte code:
    //   0: aload_0
    //   1: getfield b : Landroid/support/v4/f/p;
    //   4: invokevirtual a : ()I
    //   7: istore #9
    //   9: aload_0
    //   10: iload #9
    //   12: putfield d : I
    //   15: aload_0
    //   16: getfield g : Ljava/util/ArrayList;
    //   19: invokevirtual size : ()I
    //   22: aload_0
    //   23: getfield A : I
    //   26: iconst_2
    //   27: imul
    //   28: iconst_1
    //   29: iadd
    //   30: if_icmpge -> 50
    //   33: aload_0
    //   34: getfield g : Ljava/util/ArrayList;
    //   37: invokevirtual size : ()I
    //   40: iload #9
    //   42: if_icmpge -> 50
    //   45: iconst_1
    //   46: istore_1
    //   47: goto -> 52
    //   50: iconst_0
    //   51: istore_1
    //   52: aload_0
    //   53: getfield c : I
    //   56: istore_2
    //   57: iload_1
    //   58: istore #6
    //   60: iload_2
    //   61: istore_1
    //   62: iconst_0
    //   63: istore_3
    //   64: iload_3
    //   65: istore_2
    //   66: iload_3
    //   67: aload_0
    //   68: getfield g : Ljava/util/ArrayList;
    //   71: invokevirtual size : ()I
    //   74: if_icmpge -> 292
    //   77: aload_0
    //   78: getfield g : Ljava/util/ArrayList;
    //   81: iload_3
    //   82: invokevirtual get : (I)Ljava/lang/Object;
    //   85: checkcast android/support/v4/f/u$b
    //   88: astore #10
    //   90: aload_0
    //   91: getfield b : Landroid/support/v4/f/p;
    //   94: aload #10
    //   96: getfield a : Ljava/lang/Object;
    //   99: invokevirtual a : (Ljava/lang/Object;)I
    //   102: istore #8
    //   104: iload #8
    //   106: iconst_m1
    //   107: if_icmpne -> 122
    //   110: iload_3
    //   111: istore #4
    //   113: iload_2
    //   114: istore #5
    //   116: iload_1
    //   117: istore #7
    //   119: goto -> 278
    //   122: iload #8
    //   124: bipush #-2
    //   126: if_icmpne -> 234
    //   129: aload_0
    //   130: getfield g : Ljava/util/ArrayList;
    //   133: iload_3
    //   134: invokevirtual remove : (I)Ljava/lang/Object;
    //   137: pop
    //   138: iload_3
    //   139: iconst_1
    //   140: isub
    //   141: istore #5
    //   143: iload_2
    //   144: istore #4
    //   146: iload_2
    //   147: ifne -> 161
    //   150: aload_0
    //   151: getfield b : Landroid/support/v4/f/p;
    //   154: aload_0
    //   155: invokevirtual a : (Landroid/view/ViewGroup;)V
    //   158: iconst_1
    //   159: istore #4
    //   161: aload_0
    //   162: getfield b : Landroid/support/v4/f/p;
    //   165: aload_0
    //   166: aload #10
    //   168: getfield b : I
    //   171: aload #10
    //   173: getfield a : Ljava/lang/Object;
    //   176: invokevirtual a : (Landroid/view/ViewGroup;ILjava/lang/Object;)V
    //   179: iload #5
    //   181: istore_3
    //   182: iload #4
    //   184: istore_2
    //   185: aload_0
    //   186: getfield c : I
    //   189: aload #10
    //   191: getfield b : I
    //   194: if_icmpne -> 219
    //   197: iconst_0
    //   198: aload_0
    //   199: getfield c : I
    //   202: iload #9
    //   204: iconst_1
    //   205: isub
    //   206: invokestatic min : (II)I
    //   209: invokestatic max : (II)I
    //   212: istore_1
    //   213: iload #4
    //   215: istore_2
    //   216: iload #5
    //   218: istore_3
    //   219: iconst_1
    //   220: istore #6
    //   222: iload_3
    //   223: istore #4
    //   225: iload_2
    //   226: istore #5
    //   228: iload_1
    //   229: istore #7
    //   231: goto -> 278
    //   234: iload_3
    //   235: istore #4
    //   237: iload_2
    //   238: istore #5
    //   240: iload_1
    //   241: istore #7
    //   243: aload #10
    //   245: getfield b : I
    //   248: iload #8
    //   250: if_icmpeq -> 278
    //   253: aload #10
    //   255: getfield b : I
    //   258: aload_0
    //   259: getfield c : I
    //   262: if_icmpne -> 268
    //   265: iload #8
    //   267: istore_1
    //   268: aload #10
    //   270: iload #8
    //   272: putfield b : I
    //   275: goto -> 219
    //   278: iload #4
    //   280: iconst_1
    //   281: iadd
    //   282: istore_3
    //   283: iload #5
    //   285: istore_2
    //   286: iload #7
    //   288: istore_1
    //   289: goto -> 66
    //   292: iload_2
    //   293: ifeq -> 304
    //   296: aload_0
    //   297: getfield b : Landroid/support/v4/f/p;
    //   300: aload_0
    //   301: invokevirtual b : (Landroid/view/ViewGroup;)V
    //   304: aload_0
    //   305: getfield g : Ljava/util/ArrayList;
    //   308: getstatic android/support/v4/f/u.e : Ljava/util/Comparator;
    //   311: invokestatic sort : (Ljava/util/List;Ljava/util/Comparator;)V
    //   314: iload #6
    //   316: ifeq -> 376
    //   319: aload_0
    //   320: invokevirtual getChildCount : ()I
    //   323: istore_3
    //   324: iconst_0
    //   325: istore_2
    //   326: iload_2
    //   327: iload_3
    //   328: if_icmpge -> 365
    //   331: aload_0
    //   332: iload_2
    //   333: invokevirtual getChildAt : (I)Landroid/view/View;
    //   336: invokevirtual getLayoutParams : ()Landroid/view/ViewGroup$LayoutParams;
    //   339: checkcast android/support/v4/f/u$c
    //   342: astore #10
    //   344: aload #10
    //   346: getfield a : Z
    //   349: ifne -> 358
    //   352: aload #10
    //   354: fconst_0
    //   355: putfield c : F
    //   358: iload_2
    //   359: iconst_1
    //   360: iadd
    //   361: istore_2
    //   362: goto -> 326
    //   365: aload_0
    //   366: iload_1
    //   367: iconst_0
    //   368: iconst_1
    //   369: invokevirtual a : (IZZ)V
    //   372: aload_0
    //   373: invokevirtual requestLayout : ()V
    //   376: return }
  
  void c() { a(this.c); }
  
  public boolean c(int paramInt) { // Byte code:
    //   0: aload_0
    //   1: invokevirtual findFocus : ()Landroid/view/View;
    //   4: astore #7
    //   6: iconst_0
    //   7: istore #4
    //   9: aconst_null
    //   10: astore #6
    //   12: aload #7
    //   14: aload_0
    //   15: if_acmpne -> 25
    //   18: aload #6
    //   20: astore #5
    //   22: goto -> 199
    //   25: aload #7
    //   27: ifnull -> 195
    //   30: aload #7
    //   32: invokevirtual getParent : ()Landroid/view/ViewParent;
    //   35: astore #5
    //   37: aload #5
    //   39: instanceof android/view/ViewGroup
    //   42: ifeq -> 68
    //   45: aload #5
    //   47: aload_0
    //   48: if_acmpne -> 56
    //   51: iconst_1
    //   52: istore_2
    //   53: goto -> 70
    //   56: aload #5
    //   58: invokeinterface getParent : ()Landroid/view/ViewParent;
    //   63: astore #5
    //   65: goto -> 37
    //   68: iconst_0
    //   69: istore_2
    //   70: iload_2
    //   71: ifne -> 195
    //   74: new java/lang/StringBuilder
    //   77: dup
    //   78: invokespecial <init> : ()V
    //   81: astore #8
    //   83: aload #8
    //   85: aload #7
    //   87: invokevirtual getClass : ()Ljava/lang/Class;
    //   90: invokevirtual getSimpleName : ()Ljava/lang/String;
    //   93: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   96: pop
    //   97: aload #7
    //   99: invokevirtual getParent : ()Landroid/view/ViewParent;
    //   102: astore #5
    //   104: aload #5
    //   106: instanceof android/view/ViewGroup
    //   109: ifeq -> 147
    //   112: aload #8
    //   114: ldc_w ' => '
    //   117: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   120: pop
    //   121: aload #8
    //   123: aload #5
    //   125: invokevirtual getClass : ()Ljava/lang/Class;
    //   128: invokevirtual getSimpleName : ()Ljava/lang/String;
    //   131: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   134: pop
    //   135: aload #5
    //   137: invokeinterface getParent : ()Landroid/view/ViewParent;
    //   142: astore #5
    //   144: goto -> 104
    //   147: new java/lang/StringBuilder
    //   150: dup
    //   151: invokespecial <init> : ()V
    //   154: astore #5
    //   156: aload #5
    //   158: ldc_w 'arrowScroll tried to find focus based on non-child current focused view '
    //   161: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   164: pop
    //   165: aload #5
    //   167: aload #8
    //   169: invokevirtual toString : ()Ljava/lang/String;
    //   172: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   175: pop
    //   176: ldc_w 'ViewPager'
    //   179: aload #5
    //   181: invokevirtual toString : ()Ljava/lang/String;
    //   184: invokestatic e : (Ljava/lang/String;Ljava/lang/String;)I
    //   187: pop
    //   188: aload #6
    //   190: astore #5
    //   192: goto -> 199
    //   195: aload #7
    //   197: astore #5
    //   199: invokestatic getInstance : ()Landroid/view/FocusFinder;
    //   202: aload_0
    //   203: aload #5
    //   205: iload_1
    //   206: invokevirtual findNextFocus : (Landroid/view/ViewGroup;Landroid/view/View;I)Landroid/view/View;
    //   209: astore #6
    //   211: aload #6
    //   213: ifnull -> 339
    //   216: aload #6
    //   218: aload #5
    //   220: if_acmpeq -> 339
    //   223: iload_1
    //   224: bipush #17
    //   226: if_icmpne -> 286
    //   229: aload_0
    //   230: aload_0
    //   231: getfield i : Landroid/graphics/Rect;
    //   234: aload #6
    //   236: invokespecial a : (Landroid/graphics/Rect;Landroid/view/View;)Landroid/graphics/Rect;
    //   239: getfield left : I
    //   242: istore_2
    //   243: aload_0
    //   244: aload_0
    //   245: getfield i : Landroid/graphics/Rect;
    //   248: aload #5
    //   250: invokespecial a : (Landroid/graphics/Rect;Landroid/view/View;)Landroid/graphics/Rect;
    //   253: getfield left : I
    //   256: istore_3
    //   257: aload #5
    //   259: ifnull -> 276
    //   262: iload_2
    //   263: iload_3
    //   264: if_icmplt -> 276
    //   267: aload_0
    //   268: invokevirtual d : ()Z
    //   271: istore #4
    //   273: goto -> 283
    //   276: aload #6
    //   278: invokevirtual requestFocus : ()Z
    //   281: istore #4
    //   283: goto -> 379
    //   286: iload_1
    //   287: bipush #66
    //   289: if_icmpne -> 379
    //   292: aload_0
    //   293: aload_0
    //   294: getfield i : Landroid/graphics/Rect;
    //   297: aload #6
    //   299: invokespecial a : (Landroid/graphics/Rect;Landroid/view/View;)Landroid/graphics/Rect;
    //   302: getfield left : I
    //   305: istore_2
    //   306: aload_0
    //   307: aload_0
    //   308: getfield i : Landroid/graphics/Rect;
    //   311: aload #5
    //   313: invokespecial a : (Landroid/graphics/Rect;Landroid/view/View;)Landroid/graphics/Rect;
    //   316: getfield left : I
    //   319: istore_3
    //   320: aload #5
    //   322: ifnull -> 276
    //   325: iload_2
    //   326: iload_3
    //   327: if_icmpgt -> 276
    //   330: aload_0
    //   331: invokevirtual e : ()Z
    //   334: istore #4
    //   336: goto -> 283
    //   339: iload_1
    //   340: bipush #17
    //   342: if_icmpeq -> 373
    //   345: iload_1
    //   346: iconst_1
    //   347: if_icmpne -> 353
    //   350: goto -> 373
    //   353: iload_1
    //   354: bipush #66
    //   356: if_icmpeq -> 364
    //   359: iload_1
    //   360: iconst_2
    //   361: if_icmpne -> 379
    //   364: aload_0
    //   365: invokevirtual e : ()Z
    //   368: istore #4
    //   370: goto -> 379
    //   373: aload_0
    //   374: invokevirtual d : ()Z
    //   377: istore #4
    //   379: iload #4
    //   381: ifeq -> 392
    //   384: aload_0
    //   385: iload_1
    //   386: invokestatic getContantForFocusDirection : (I)I
    //   389: invokevirtual playSoundEffect : (I)V
    //   392: iload #4
    //   394: ireturn }
  
  public boolean canScrollHorizontally(int paramInt) {
    p p1 = this.b;
    boolean bool1 = false;
    boolean bool = false;
    if (p1 == null)
      return false; 
    int i1 = getClientWidth();
    int i2 = getScrollX();
    if (paramInt < 0) {
      if (i2 > (int)(i1 * this.t))
        bool = true; 
      return bool;
    } 
    bool = bool1;
    if (paramInt > 0) {
      bool = bool1;
      if (i2 < (int)(i1 * this.u))
        bool = true; 
    } 
    return bool;
  }
  
  protected boolean checkLayoutParams(ViewGroup.LayoutParams paramLayoutParams) { return (paramLayoutParams instanceof c && super.checkLayoutParams(paramLayoutParams)); }
  
  public void computeScroll() {
    this.n = true;
    if (!this.m.isFinished() && this.m.computeScrollOffset()) {
      int i1 = getScrollX();
      int i2 = getScrollY();
      int i3 = this.m.getCurrX();
      int i4 = this.m.getCurrY();
      if (i1 != i3 || i2 != i4) {
        scrollTo(i3, i4);
        if (!d(i3)) {
          this.m.abortAnimation();
          scrollTo(0, i4);
        } 
      } 
      r.b(this);
      return;
    } 
    a(true);
  }
  
  boolean d() {
    int i1 = this.c;
    if (i1 > 0) {
      a(i1 - 1, true);
      return true;
    } 
    return false;
  }
  
  public boolean dispatchKeyEvent(KeyEvent paramKeyEvent) { return (super.dispatchKeyEvent(paramKeyEvent) || a(paramKeyEvent)); }
  
  public boolean dispatchPopulateAccessibilityEvent(AccessibilityEvent paramAccessibilityEvent) {
    if (paramAccessibilityEvent.getEventType() == 4096)
      return super.dispatchPopulateAccessibilityEvent(paramAccessibilityEvent); 
    int i1 = getChildCount();
    for (byte b1 = 0; b1 < i1; b1++) {
      View view = getChildAt(b1);
      if (view.getVisibility() == 0) {
        b b2 = a(view);
        if (b2 != null && b2.b == this.c && view.dispatchPopulateAccessibilityEvent(paramAccessibilityEvent))
          return true; 
      } 
    } 
    return false;
  }
  
  public void draw(Canvas paramCanvas) { // Byte code:
    //   0: aload_0
    //   1: aload_1
    //   2: invokespecial draw : (Landroid/graphics/Canvas;)V
    //   5: aload_0
    //   6: invokevirtual getOverScrollMode : ()I
    //   9: istore #4
    //   11: iconst_0
    //   12: istore_3
    //   13: iconst_0
    //   14: istore_2
    //   15: iload #4
    //   17: ifeq -> 66
    //   20: iload #4
    //   22: iconst_1
    //   23: if_icmpne -> 49
    //   26: aload_0
    //   27: getfield b : Landroid/support/v4/f/p;
    //   30: astore #8
    //   32: aload #8
    //   34: ifnull -> 49
    //   37: aload #8
    //   39: invokevirtual a : ()I
    //   42: iconst_1
    //   43: if_icmple -> 49
    //   46: goto -> 66
    //   49: aload_0
    //   50: getfield R : Landroid/widget/EdgeEffect;
    //   53: invokevirtual finish : ()V
    //   56: aload_0
    //   57: getfield S : Landroid/widget/EdgeEffect;
    //   60: invokevirtual finish : ()V
    //   63: goto -> 256
    //   66: aload_0
    //   67: getfield R : Landroid/widget/EdgeEffect;
    //   70: invokevirtual isFinished : ()Z
    //   73: ifne -> 155
    //   76: aload_1
    //   77: invokevirtual save : ()I
    //   80: istore_3
    //   81: aload_0
    //   82: invokevirtual getHeight : ()I
    //   85: aload_0
    //   86: invokevirtual getPaddingTop : ()I
    //   89: isub
    //   90: aload_0
    //   91: invokevirtual getPaddingBottom : ()I
    //   94: isub
    //   95: istore_2
    //   96: aload_0
    //   97: invokevirtual getWidth : ()I
    //   100: istore #4
    //   102: aload_1
    //   103: ldc_w 270.0
    //   106: invokevirtual rotate : (F)V
    //   109: aload_1
    //   110: iload_2
    //   111: ineg
    //   112: aload_0
    //   113: invokevirtual getPaddingTop : ()I
    //   116: iadd
    //   117: i2f
    //   118: aload_0
    //   119: getfield t : F
    //   122: iload #4
    //   124: i2f
    //   125: fmul
    //   126: invokevirtual translate : (FF)V
    //   129: aload_0
    //   130: getfield R : Landroid/widget/EdgeEffect;
    //   133: iload_2
    //   134: iload #4
    //   136: invokevirtual setSize : (II)V
    //   139: iconst_0
    //   140: aload_0
    //   141: getfield R : Landroid/widget/EdgeEffect;
    //   144: aload_1
    //   145: invokevirtual draw : (Landroid/graphics/Canvas;)Z
    //   148: ior
    //   149: istore_2
    //   150: aload_1
    //   151: iload_3
    //   152: invokevirtual restoreToCount : (I)V
    //   155: iload_2
    //   156: istore_3
    //   157: aload_0
    //   158: getfield S : Landroid/widget/EdgeEffect;
    //   161: invokevirtual isFinished : ()Z
    //   164: ifne -> 256
    //   167: aload_1
    //   168: invokevirtual save : ()I
    //   171: istore #4
    //   173: aload_0
    //   174: invokevirtual getWidth : ()I
    //   177: istore_3
    //   178: aload_0
    //   179: invokevirtual getHeight : ()I
    //   182: istore #5
    //   184: aload_0
    //   185: invokevirtual getPaddingTop : ()I
    //   188: istore #6
    //   190: aload_0
    //   191: invokevirtual getPaddingBottom : ()I
    //   194: istore #7
    //   196: aload_1
    //   197: ldc_w 90.0
    //   200: invokevirtual rotate : (F)V
    //   203: aload_1
    //   204: aload_0
    //   205: invokevirtual getPaddingTop : ()I
    //   208: ineg
    //   209: i2f
    //   210: aload_0
    //   211: getfield u : F
    //   214: fconst_1
    //   215: fadd
    //   216: fneg
    //   217: iload_3
    //   218: i2f
    //   219: fmul
    //   220: invokevirtual translate : (FF)V
    //   223: aload_0
    //   224: getfield S : Landroid/widget/EdgeEffect;
    //   227: iload #5
    //   229: iload #6
    //   231: isub
    //   232: iload #7
    //   234: isub
    //   235: iload_3
    //   236: invokevirtual setSize : (II)V
    //   239: iload_2
    //   240: aload_0
    //   241: getfield S : Landroid/widget/EdgeEffect;
    //   244: aload_1
    //   245: invokevirtual draw : (Landroid/graphics/Canvas;)Z
    //   248: ior
    //   249: istore_3
    //   250: aload_1
    //   251: iload #4
    //   253: invokevirtual restoreToCount : (I)V
    //   256: iload_3
    //   257: ifeq -> 264
    //   260: aload_0
    //   261: invokestatic b : (Landroid/view/View;)V
    //   264: return }
  
  protected void drawableStateChanged() {
    super.drawableStateChanged();
    Drawable drawable = this.q;
    if (drawable != null && drawable.isStateful())
      drawable.setState(getDrawableState()); 
  }
  
  boolean e() {
    p p1 = this.b;
    if (p1 != null && this.c < p1.a() - 1) {
      a(this.c + 1, true);
      return true;
    } 
    return false;
  }
  
  protected ViewGroup.LayoutParams generateDefaultLayoutParams() { return new c(); }
  
  public ViewGroup.LayoutParams generateLayoutParams(AttributeSet paramAttributeSet) { return new c(getContext(), paramAttributeSet); }
  
  protected ViewGroup.LayoutParams generateLayoutParams(ViewGroup.LayoutParams paramLayoutParams) { return generateDefaultLayoutParams(); }
  
  public p getAdapter() { return this.b; }
  
  protected int getChildDrawingOrder(int paramInt1, int paramInt2) {
    int i1 = paramInt2;
    if (this.ag == 2)
      i1 = paramInt1 - 1 - paramInt2; 
    return ((c)((View)this.ah.get(i1)).getLayoutParams()).f;
  }
  
  public int getCurrentItem() { return this.c; }
  
  public int getOffscreenPageLimit() { return this.A; }
  
  public int getPageMargin() { return this.p; }
  
  protected void onAttachedToWindow() {
    super.onAttachedToWindow();
    this.T = true;
  }
  
  protected void onDetachedFromWindow() {
    removeCallbacks(this.aj);
    Scroller scroller = this.m;
    if (scroller != null && !scroller.isFinished())
      this.m.abortAnimation(); 
    super.onDetachedFromWindow();
  }
  
  protected void onDraw(Canvas paramCanvas) {
    super.onDraw(paramCanvas);
    if (this.p > 0 && this.q != null && this.g.size() > 0 && this.b != null) {
      int i2 = getScrollX();
      int i3 = getWidth();
      float f1 = this.p;
      float f3 = i3;
      float f2 = f1 / f3;
      ArrayList arrayList = this.g;
      byte b1 = 0;
      b b2 = (b)arrayList.get(0);
      f1 = b2.e;
      int i4 = this.g.size();
      int i1 = b2.b;
      int i5 = ((b)this.g.get(i4 - 1)).b;
      while (i1 < i5) {
        b b3;
        float f4;
        while (i1 > b2.b && b1 < i4) {
          ArrayList arrayList1 = this.g;
          b3 = (b)arrayList1.get(++b1);
        } 
        if (i1 == b3.b) {
          f4 = (b3.e + b3.d) * f3;
          f1 = b3.e + b3.d + f2;
        } else {
          float f5 = this.b.a(i1);
          f4 = f1 + f5 + f2;
          f5 = (f1 + f5) * f3;
          f1 = f4;
          f4 = f5;
        } 
        if (this.p + f4 > i2) {
          this.q.setBounds(Math.round(f4), this.r, Math.round(this.p + f4), this.s);
          this.q.draw(paramCanvas);
        } 
        if (f4 > (i2 + i3))
          return; 
        i1++;
      } 
    } 
  }
  
  public boolean onInterceptTouchEvent(MotionEvent paramMotionEvent) {
    int i1 = paramMotionEvent.getAction() & 0xFF;
    if (i1 == 3 || i1 == 1) {
      h();
      return false;
    } 
    if (i1 != 0) {
      if (this.B)
        return true; 
      if (this.C)
        return false; 
    } 
    if (i1 != 0) {
      if (i1 != 2) {
        if (i1 == 6)
          a(paramMotionEvent); 
      } else {
        i1 = this.K;
        if (i1 != -1) {
          i1 = paramMotionEvent.findPointerIndex(i1);
          float f2 = paramMotionEvent.getX(i1);
          float f1 = f2 - this.G;
          float f4 = Math.abs(f1);
          float f3 = paramMotionEvent.getY(i1);
          float f5 = Math.abs(f3 - this.J);
          i1 = f1 cmp 0.0F;
          if (i1 != 0 && !a(this.G, f1) && a(this, false, (int)f1, (int)f2, (int)f3)) {
            this.G = f2;
            this.H = f3;
            this.C = true;
            return false;
          } 
          if (f4 > this.F && f4 * 0.5F > f5) {
            this.B = true;
            c(true);
            setScrollState(1);
            if (i1 > 0) {
              f1 = this.I + this.F;
            } else {
              f1 = this.I - this.F;
            } 
            this.G = f1;
            this.H = f3;
            setScrollingCacheEnabled(true);
          } else if (f5 > this.F) {
            this.C = true;
          } 
          if (this.B && b(f2))
            r.b(this); 
        } 
      } 
    } else {
      float f1 = paramMotionEvent.getX();
      this.I = f1;
      this.G = f1;
      f1 = paramMotionEvent.getY();
      this.J = f1;
      this.H = f1;
      this.K = paramMotionEvent.getPointerId(0);
      this.C = false;
      this.n = true;
      this.m.computeScrollOffset();
      if (this.ak == 2 && Math.abs(this.m.getFinalX() - this.m.getCurrX()) > this.P) {
        this.m.abortAnimation();
        this.z = false;
        c();
        this.B = true;
        c(true);
        setScrollState(1);
      } else {
        a(false);
        this.B = false;
      } 
    } 
    if (this.L == null)
      this.L = VelocityTracker.obtain(); 
    this.L.addMovement(paramMotionEvent);
    return this.B;
  }
  
  protected void onLayout(boolean paramBoolean, int paramInt1, int paramInt2, int paramInt3, int paramInt4) {
    int i3 = getChildCount();
    int i4 = paramInt3 - paramInt1;
    int i5 = paramInt4 - paramInt2;
    paramInt2 = getPaddingLeft();
    paramInt1 = getPaddingTop();
    int i1 = getPaddingRight();
    paramInt4 = getPaddingBottom();
    int i6 = getScrollX();
    int i2 = 0;
    byte b1 = 0;
    while (b1 < i3) {
      View view = getChildAt(b1);
      int i7 = paramInt2;
      int i10 = i1;
      int i9 = paramInt1;
      int i8 = paramInt4;
      paramInt3 = i2;
      if (view.getVisibility() != 8) {
        c c1 = (c)view.getLayoutParams();
        i7 = paramInt2;
        i10 = i1;
        i9 = paramInt1;
        i8 = paramInt4;
        paramInt3 = i2;
        if (c1.a) {
          paramInt3 = c1.b & 0x7;
          i8 = c1.b & 0x70;
          if (paramInt3 != 1) {
            if (paramInt3 != 3) {
              if (paramInt3 != 5) {
                paramInt3 = paramInt2;
                i7 = paramInt2;
              } else {
                paramInt3 = i4 - i1 - view.getMeasuredWidth();
                i1 += view.getMeasuredWidth();
                i7 = paramInt2;
              } 
            } else {
              i7 = view.getMeasuredWidth();
              paramInt3 = paramInt2;
              i7 += paramInt2;
            } 
          } else {
            paramInt3 = Math.max((i4 - view.getMeasuredWidth()) / 2, paramInt2);
            i7 = paramInt2;
          } 
          if (i8 != 16) {
            if (i8 != 48) {
              if (i8 != 80) {
                paramInt2 = paramInt1;
              } else {
                paramInt2 = i5 - paramInt4 - view.getMeasuredHeight();
                paramInt4 += view.getMeasuredHeight();
              } 
            } else {
              i8 = view.getMeasuredHeight();
              paramInt2 = paramInt1;
              paramInt1 = i8 + paramInt1;
            } 
          } else {
            paramInt2 = Math.max((i5 - view.getMeasuredHeight()) / 2, paramInt1);
          } 
          paramInt3 += i6;
          view.layout(paramInt3, paramInt2, view.getMeasuredWidth() + paramInt3, paramInt2 + view.getMeasuredHeight());
          paramInt3 = i2 + 1;
          i8 = paramInt4;
          i9 = paramInt1;
          i10 = i1;
        } 
      } 
      b1++;
      paramInt2 = i7;
      i1 = i10;
      paramInt1 = i9;
      paramInt4 = i8;
      i2 = paramInt3;
    } 
    for (paramInt3 = 0; paramInt3 < i3; paramInt3++) {
      View view = getChildAt(paramInt3);
      if (view.getVisibility() != 8) {
        c c1 = (c)view.getLayoutParams();
        if (!c1.a) {
          b b2 = a(view);
          if (b2 != null) {
            float f1 = (i4 - paramInt2 - i1);
            int i7 = (int)(b2.e * f1) + paramInt2;
            if (c1.d) {
              c1.d = false;
              view.measure(View.MeasureSpec.makeMeasureSpec((int)(f1 * c1.c), 1073741824), View.MeasureSpec.makeMeasureSpec(i5 - paramInt1 - paramInt4, 1073741824));
            } 
            view.layout(i7, paramInt1, view.getMeasuredWidth() + i7, view.getMeasuredHeight() + paramInt1);
          } 
        } 
      } 
    } 
    this.r = paramInt1;
    this.s = i5 - paramInt4;
    this.W = i2;
    if (this.T)
      a(this.c, false, 0, false); 
    this.T = false;
  }
  
  protected void onMeasure(int paramInt1, int paramInt2) {
    setMeasuredDimension(getDefaultSize(0, paramInt1), getDefaultSize(0, paramInt2));
    paramInt1 = getMeasuredWidth();
    this.E = Math.min(paramInt1 / 10, this.D);
    int i1 = getPaddingLeft();
    int i2 = getPaddingRight();
    paramInt2 = getMeasuredHeight();
    int i3 = getPaddingTop();
    int i4 = getPaddingBottom();
    int i5 = getChildCount();
    paramInt2 = paramInt2 - i3 - i4;
    paramInt1 = paramInt1 - i1 - i2;
    i3 = 0;
    while (true) {
      int i6 = 1;
      int i7 = 1073741824;
      if (i3 < i5) {
        View view = getChildAt(i3);
        i1 = paramInt1;
        i2 = paramInt2;
        if (view.getVisibility() != 8) {
          c c1 = (c)view.getLayoutParams();
          i1 = paramInt1;
          i2 = paramInt2;
          if (c1 != null) {
            i1 = paramInt1;
            i2 = paramInt2;
            if (c1.a) {
              int i8;
              boolean bool;
              i1 = c1.b & 0x7;
              i2 = c1.b & 0x70;
              if (i2 == 48 || i2 == 80) {
                bool = true;
              } else {
                bool = false;
              } 
              i4 = i6;
              if (i1 != 3)
                if (i1 == 5) {
                  i4 = i6;
                } else {
                  i4 = 0;
                }  
              i2 = Integer.MIN_VALUE;
              if (bool) {
                i1 = Integer.MIN_VALUE;
                i2 = 1073741824;
              } else if (i4 != 0) {
                i1 = 1073741824;
              } else {
                i1 = Integer.MIN_VALUE;
              } 
              if (c1.width != -2) {
                if (c1.width != -1) {
                  i2 = c1.width;
                } else {
                  i2 = paramInt1;
                } 
                i6 = 1073741824;
                i8 = i2;
              } else {
                i8 = paramInt1;
                i6 = i2;
              } 
              if (c1.height != -2) {
                if (c1.height != -1) {
                  i1 = c1.height;
                } else {
                  i1 = paramInt2;
                } 
              } else {
                i2 = paramInt2;
                i7 = i1;
                i1 = i2;
              } 
              view.measure(View.MeasureSpec.makeMeasureSpec(i8, i6), View.MeasureSpec.makeMeasureSpec(i1, i7));
              if (bool) {
                i2 = paramInt2 - view.getMeasuredHeight();
                i1 = paramInt1;
              } else {
                i1 = paramInt1;
                i2 = paramInt2;
                if (i4 != 0) {
                  i1 = paramInt1 - view.getMeasuredWidth();
                  i2 = paramInt2;
                } 
              } 
            } 
          } 
        } 
        i3++;
        paramInt1 = i1;
        paramInt2 = i2;
        continue;
      } 
      break;
    } 
    this.v = View.MeasureSpec.makeMeasureSpec(paramInt1, 1073741824);
    this.w = View.MeasureSpec.makeMeasureSpec(paramInt2, 1073741824);
    this.x = true;
    c();
    paramInt2 = 0;
    this.x = false;
    i1 = getChildCount();
    while (paramInt2 < i1) {
      View view = getChildAt(paramInt2);
      if (view.getVisibility() != 8) {
        c c1 = (c)view.getLayoutParams();
        if (c1 == null || !c1.a)
          view.measure(View.MeasureSpec.makeMeasureSpec((int)(paramInt1 * c1.c), 1073741824), this.w); 
      } 
      paramInt2++;
    } 
  }
  
  protected boolean onRequestFocusInDescendants(int paramInt, Rect paramRect) {
    int i2;
    int i1 = getChildCount();
    int i3 = -1;
    if ((paramInt & 0x2) != 0) {
      i3 = i1;
      i1 = 0;
      i2 = 1;
    } else {
      i1--;
      i2 = -1;
    } 
    while (i1 != i3) {
      View view = getChildAt(i1);
      if (view.getVisibility() == 0) {
        b b1 = a(view);
        if (b1 != null && b1.b == this.c && view.requestFocus(paramInt, paramRect))
          return true; 
      } 
      i1 += i2;
    } 
    return false;
  }
  
  public void onRestoreInstanceState(Parcelable paramParcelable) {
    if (!(paramParcelable instanceof i)) {
      super.onRestoreInstanceState(paramParcelable);
      return;
    } 
    i i1 = (i)paramParcelable;
    super.onRestoreInstanceState(i1.a());
    p p1 = this.b;
    if (p1 != null) {
      p1.a(i1.c, i1.d);
      a(i1.b, false, true);
      return;
    } 
    this.j = i1.b;
    this.k = i1.c;
    this.l = i1.d;
  }
  
  public Parcelable onSaveInstanceState() {
    i i1 = new i(super.onSaveInstanceState());
    i1.b = this.c;
    p p1 = this.b;
    if (p1 != null)
      i1.c = p1.b(); 
    return i1;
  }
  
  protected void onSizeChanged(int paramInt1, int paramInt2, int paramInt3, int paramInt4) {
    super.onSizeChanged(paramInt1, paramInt2, paramInt3, paramInt4);
    if (paramInt1 != paramInt3) {
      paramInt2 = this.p;
      a(paramInt1, paramInt3, paramInt2, paramInt2);
    } 
  }
  
  public boolean onTouchEvent(MotionEvent paramMotionEvent) { // Byte code:
    //   0: aload_0
    //   1: getfield Q : Z
    //   4: ifeq -> 9
    //   7: iconst_1
    //   8: ireturn
    //   9: aload_1
    //   10: invokevirtual getAction : ()I
    //   13: istore #6
    //   15: iconst_0
    //   16: istore #9
    //   18: iload #6
    //   20: ifne -> 32
    //   23: aload_1
    //   24: invokevirtual getEdgeFlags : ()I
    //   27: ifeq -> 32
    //   30: iconst_0
    //   31: ireturn
    //   32: aload_0
    //   33: getfield b : Landroid/support/v4/f/p;
    //   36: astore #10
    //   38: aload #10
    //   40: ifnull -> 605
    //   43: aload #10
    //   45: invokevirtual a : ()I
    //   48: ifne -> 53
    //   51: iconst_0
    //   52: ireturn
    //   53: aload_0
    //   54: getfield L : Landroid/view/VelocityTracker;
    //   57: ifnonnull -> 67
    //   60: aload_0
    //   61: invokestatic obtain : ()Landroid/view/VelocityTracker;
    //   64: putfield L : Landroid/view/VelocityTracker;
    //   67: aload_0
    //   68: getfield L : Landroid/view/VelocityTracker;
    //   71: aload_1
    //   72: invokevirtual addMovement : (Landroid/view/MotionEvent;)V
    //   75: aload_1
    //   76: invokevirtual getAction : ()I
    //   79: sipush #255
    //   82: iand
    //   83: tableswitch default -> 124, 0 -> 535, 1 -> 395, 2 -> 199, 3 -> 178, 4 -> 124, 5 -> 151, 6 -> 127
    //   124: goto -> 594
    //   127: aload_0
    //   128: aload_1
    //   129: invokespecial a : (Landroid/view/MotionEvent;)V
    //   132: aload_0
    //   133: aload_1
    //   134: aload_1
    //   135: aload_0
    //   136: getfield K : I
    //   139: invokevirtual findPointerIndex : (I)I
    //   142: invokevirtual getX : (I)F
    //   145: putfield G : F
    //   148: goto -> 594
    //   151: aload_1
    //   152: invokevirtual getActionIndex : ()I
    //   155: istore #6
    //   157: aload_0
    //   158: aload_1
    //   159: iload #6
    //   161: invokevirtual getX : (I)F
    //   164: putfield G : F
    //   167: aload_1
    //   168: iload #6
    //   170: invokevirtual getPointerId : (I)I
    //   173: istore #6
    //   175: goto -> 588
    //   178: aload_0
    //   179: getfield B : Z
    //   182: ifeq -> 594
    //   185: aload_0
    //   186: aload_0
    //   187: getfield c : I
    //   190: iconst_1
    //   191: iconst_0
    //   192: iconst_0
    //   193: invokespecial a : (IZIZ)V
    //   196: goto -> 526
    //   199: aload_0
    //   200: getfield B : Z
    //   203: ifne -> 365
    //   206: aload_1
    //   207: aload_0
    //   208: getfield K : I
    //   211: invokevirtual findPointerIndex : (I)I
    //   214: istore #6
    //   216: iload #6
    //   218: iconst_m1
    //   219: if_icmpne -> 225
    //   222: goto -> 526
    //   225: aload_1
    //   226: iload #6
    //   228: invokevirtual getX : (I)F
    //   231: fstore_2
    //   232: fload_2
    //   233: aload_0
    //   234: getfield G : F
    //   237: fsub
    //   238: invokestatic abs : (F)F
    //   241: fstore #4
    //   243: aload_1
    //   244: iload #6
    //   246: invokevirtual getY : (I)F
    //   249: fstore_3
    //   250: fload_3
    //   251: aload_0
    //   252: getfield H : F
    //   255: fsub
    //   256: invokestatic abs : (F)F
    //   259: fstore #5
    //   261: fload #4
    //   263: aload_0
    //   264: getfield F : I
    //   267: i2f
    //   268: fcmpl
    //   269: ifle -> 365
    //   272: fload #4
    //   274: fload #5
    //   276: fcmpl
    //   277: ifle -> 365
    //   280: aload_0
    //   281: iconst_1
    //   282: putfield B : Z
    //   285: aload_0
    //   286: iconst_1
    //   287: invokespecial c : (Z)V
    //   290: aload_0
    //   291: getfield I : F
    //   294: fstore #4
    //   296: fload_2
    //   297: fload #4
    //   299: fsub
    //   300: fconst_0
    //   301: fcmpl
    //   302: ifle -> 317
    //   305: fload #4
    //   307: aload_0
    //   308: getfield F : I
    //   311: i2f
    //   312: fadd
    //   313: fstore_2
    //   314: goto -> 326
    //   317: fload #4
    //   319: aload_0
    //   320: getfield F : I
    //   323: i2f
    //   324: fsub
    //   325: fstore_2
    //   326: aload_0
    //   327: fload_2
    //   328: putfield G : F
    //   331: aload_0
    //   332: fload_3
    //   333: putfield H : F
    //   336: aload_0
    //   337: iconst_1
    //   338: invokevirtual setScrollState : (I)V
    //   341: aload_0
    //   342: iconst_1
    //   343: invokespecial setScrollingCacheEnabled : (Z)V
    //   346: aload_0
    //   347: invokevirtual getParent : ()Landroid/view/ViewParent;
    //   350: astore #10
    //   352: aload #10
    //   354: ifnull -> 365
    //   357: aload #10
    //   359: iconst_1
    //   360: invokeinterface requestDisallowInterceptTouchEvent : (Z)V
    //   365: aload_0
    //   366: getfield B : Z
    //   369: ifeq -> 594
    //   372: iconst_0
    //   373: aload_0
    //   374: aload_1
    //   375: aload_1
    //   376: aload_0
    //   377: getfield K : I
    //   380: invokevirtual findPointerIndex : (I)I
    //   383: invokevirtual getX : (I)F
    //   386: invokespecial b : (F)Z
    //   389: ior
    //   390: istore #9
    //   392: goto -> 594
    //   395: aload_0
    //   396: getfield B : Z
    //   399: ifeq -> 594
    //   402: aload_0
    //   403: getfield L : Landroid/view/VelocityTracker;
    //   406: astore #10
    //   408: aload #10
    //   410: sipush #1000
    //   413: aload_0
    //   414: getfield N : I
    //   417: i2f
    //   418: invokevirtual computeCurrentVelocity : (IF)V
    //   421: aload #10
    //   423: aload_0
    //   424: getfield K : I
    //   427: invokevirtual getXVelocity : (I)F
    //   430: f2i
    //   431: istore #6
    //   433: aload_0
    //   434: iconst_1
    //   435: putfield z : Z
    //   438: aload_0
    //   439: invokespecial getClientWidth : ()I
    //   442: istore #7
    //   444: aload_0
    //   445: invokevirtual getScrollX : ()I
    //   448: istore #8
    //   450: aload_0
    //   451: invokespecial i : ()Landroid/support/v4/f/u$b;
    //   454: astore #10
    //   456: aload_0
    //   457: getfield p : I
    //   460: i2f
    //   461: fstore_3
    //   462: iload #7
    //   464: i2f
    //   465: fstore_2
    //   466: fload_3
    //   467: fload_2
    //   468: fdiv
    //   469: fstore_3
    //   470: aload_0
    //   471: aload_0
    //   472: aload #10
    //   474: getfield b : I
    //   477: iload #8
    //   479: i2f
    //   480: fload_2
    //   481: fdiv
    //   482: aload #10
    //   484: getfield e : F
    //   487: fsub
    //   488: aload #10
    //   490: getfield d : F
    //   493: fload_3
    //   494: fadd
    //   495: fdiv
    //   496: iload #6
    //   498: aload_1
    //   499: aload_1
    //   500: aload_0
    //   501: getfield K : I
    //   504: invokevirtual findPointerIndex : (I)I
    //   507: invokevirtual getX : (I)F
    //   510: aload_0
    //   511: getfield I : F
    //   514: fsub
    //   515: f2i
    //   516: invokespecial a : (IFII)I
    //   519: iconst_1
    //   520: iconst_1
    //   521: iload #6
    //   523: invokevirtual a : (IZZI)V
    //   526: aload_0
    //   527: invokespecial h : ()Z
    //   530: istore #9
    //   532: goto -> 594
    //   535: aload_0
    //   536: getfield m : Landroid/widget/Scroller;
    //   539: invokevirtual abortAnimation : ()V
    //   542: aload_0
    //   543: iconst_0
    //   544: putfield z : Z
    //   547: aload_0
    //   548: invokevirtual c : ()V
    //   551: aload_1
    //   552: invokevirtual getX : ()F
    //   555: fstore_2
    //   556: aload_0
    //   557: fload_2
    //   558: putfield I : F
    //   561: aload_0
    //   562: fload_2
    //   563: putfield G : F
    //   566: aload_1
    //   567: invokevirtual getY : ()F
    //   570: fstore_2
    //   571: aload_0
    //   572: fload_2
    //   573: putfield J : F
    //   576: aload_0
    //   577: fload_2
    //   578: putfield H : F
    //   581: aload_1
    //   582: iconst_0
    //   583: invokevirtual getPointerId : (I)I
    //   586: istore #6
    //   588: aload_0
    //   589: iload #6
    //   591: putfield K : I
    //   594: iload #9
    //   596: ifeq -> 603
    //   599: aload_0
    //   600: invokestatic b : (Landroid/view/View;)V
    //   603: iconst_1
    //   604: ireturn
    //   605: iconst_0
    //   606: ireturn }
  
  public void removeView(View paramView) {
    if (this.x) {
      removeViewInLayout(paramView);
      return;
    } 
    super.removeView(paramView);
  }
  
  public void setAdapter(p paramp) {
    p p1 = this.b;
    boolean bool = false;
    if (p1 != null) {
      p1.a(null);
      this.b.a(this);
      for (byte b1 = 0; b1 < this.g.size(); b1++) {
        b b2 = (b)this.g.get(b1);
        this.b.a(this, b2.b, b2.a);
      } 
      this.b.b(this);
      this.g.clear();
      f();
      this.c = 0;
      scrollTo(0, 0);
    } 
    p1 = this.b;
    this.b = paramp;
    this.d = 0;
    if (this.b != null) {
      if (this.o == null)
        this.o = new h(this); 
      this.b.a(this.o);
      this.z = false;
      boolean bool1 = this.T;
      this.T = true;
      this.d = this.b.a();
      if (this.j >= 0) {
        this.b.a(this.k, this.l);
        a(this.j, false, true);
        this.j = -1;
        this.k = null;
        this.l = null;
      } else if (!bool1) {
        c();
      } else {
        requestLayout();
      } 
    } 
    List list = this.ad;
    if (list != null && !list.isEmpty()) {
      int i1 = this.ad.size();
      for (byte b1 = bool; b1 < i1; b1++)
        ((e)this.ad.get(b1)).a(this, p1, paramp); 
    } 
  }
  
  public void setCurrentItem(int paramInt) {
    this.z = false;
    a(paramInt, this.T ^ true, false);
  }
  
  public void setOffscreenPageLimit(int paramInt) {
    int i1 = paramInt;
    if (paramInt < 1) {
      StringBuilder stringBuilder = new StringBuilder();
      stringBuilder.append("Requested offscreen page limit ");
      stringBuilder.append(paramInt);
      stringBuilder.append(" too small; defaulting to ");
      stringBuilder.append(1);
      Log.w("ViewPager", stringBuilder.toString());
      i1 = 1;
    } 
    if (i1 != this.A) {
      this.A = i1;
      c();
    } 
  }
  
  @Deprecated
  public void setOnPageChangeListener(f paramf) { this.ab = paramf; }
  
  public void setPageMargin(int paramInt) {
    int i1 = this.p;
    this.p = paramInt;
    int i2 = getWidth();
    a(i2, i2, paramInt, i1);
    requestLayout();
  }
  
  public void setPageMarginDrawable(int paramInt) { setPageMarginDrawable(a.a(getContext(), paramInt)); }
  
  public void setPageMarginDrawable(Drawable paramDrawable) {
    boolean bool;
    this.q = paramDrawable;
    if (paramDrawable != null)
      refreshDrawableState(); 
    if (paramDrawable == null) {
      bool = true;
    } else {
      bool = false;
    } 
    setWillNotDraw(bool);
    invalidate();
  }
  
  void setScrollState(int paramInt) {
    if (this.ak == paramInt)
      return; 
    this.ak = paramInt;
    if (this.ae != null) {
      boolean bool;
      if (paramInt != 0) {
        bool = true;
      } else {
        bool = false;
      } 
      b(bool);
    } 
    f(paramInt);
  }
  
  protected boolean verifyDrawable(Drawable paramDrawable) { return (super.verifyDrawable(paramDrawable) || paramDrawable == this.q); }
}
