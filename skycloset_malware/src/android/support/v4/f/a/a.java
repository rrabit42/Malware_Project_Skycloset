package android.support.v4.f.a;

import android.graphics.Rect;
import android.os.Build;
import android.view.View;
import android.view.accessibility.AccessibilityNodeInfo;

public class a {
  public int a = -1;
  
  private final AccessibilityNodeInfo b;
  
  private a(AccessibilityNodeInfo paramAccessibilityNodeInfo) { this.b = paramAccessibilityNodeInfo; }
  
  public static a a(a parama) { return a(AccessibilityNodeInfo.obtain(parama.b)); }
  
  public static a a(AccessibilityNodeInfo paramAccessibilityNodeInfo) { return new a(paramAccessibilityNodeInfo); }
  
  private static String b(int paramInt) {
    switch (paramInt) {
      default:
        return "ACTION_UNKNOWN";
      case 131072:
        return "ACTION_SET_SELECTION";
      case 65536:
        return "ACTION_CUT";
      case 32768:
        return "ACTION_PASTE";
      case 16384:
        return "ACTION_COPY";
      case 8192:
        return "ACTION_SCROLL_BACKWARD";
      case 4096:
        return "ACTION_SCROLL_FORWARD";
      case 2048:
        return "ACTION_PREVIOUS_HTML_ELEMENT";
      case 1024:
        return "ACTION_NEXT_HTML_ELEMENT";
      case 512:
        return "ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY";
      case 256:
        return "ACTION_NEXT_AT_MOVEMENT_GRANULARITY";
      case 128:
        return "ACTION_CLEAR_ACCESSIBILITY_FOCUS";
      case 64:
        return "ACTION_ACCESSIBILITY_FOCUS";
      case 32:
        return "ACTION_LONG_CLICK";
      case 16:
        return "ACTION_CLICK";
      case 8:
        return "ACTION_CLEAR_SELECTION";
      case 4:
        return "ACTION_SELECT";
      case 2:
        return "ACTION_CLEAR_FOCUS";
      case 1:
        break;
    } 
    return "ACTION_FOCUS";
  }
  
  public AccessibilityNodeInfo a() { return this.b; }
  
  public void a(int paramInt) { this.b.addAction(paramInt); }
  
  public void a(Rect paramRect) { this.b.getBoundsInParent(paramRect); }
  
  public void a(View paramView) { this.b.setSource(paramView); }
  
  public void a(CharSequence paramCharSequence) { this.b.setPackageName(paramCharSequence); }
  
  public void a(Object paramObject) {
    if (Build.VERSION.SDK_INT >= 19) {
      AccessibilityNodeInfo accessibilityNodeInfo = this.b;
      if (paramObject == null) {
        paramObject = null;
      } else {
        paramObject = (AccessibilityNodeInfo.CollectionItemInfo)((b)paramObject).a;
      } 
      accessibilityNodeInfo.setCollectionItemInfo(paramObject);
    } 
  }
  
  public void a(boolean paramBoolean) { this.b.setFocusable(paramBoolean); }
  
  public boolean a(a parama) { return (Build.VERSION.SDK_INT >= 21) ? this.b.removeAction((AccessibilityNodeInfo.AccessibilityAction)parama.H) : 0; }
  
  public int b() { return this.b.getActions(); }
  
  public void b(Rect paramRect) { this.b.setBoundsInParent(paramRect); }
  
  public void b(View paramView) { this.b.addChild(paramView); }
  
  public void b(CharSequence paramCharSequence) { this.b.setClassName(paramCharSequence); }
  
  public void b(boolean paramBoolean) { this.b.setFocused(paramBoolean); }
  
  public void c(Rect paramRect) { this.b.getBoundsInScreen(paramRect); }
  
  public void c(View paramView) { this.b.setParent(paramView); }
  
  public void c(CharSequence paramCharSequence) { this.b.setText(paramCharSequence); }
  
  public void c(boolean paramBoolean) {
    if (Build.VERSION.SDK_INT >= 16)
      this.b.setVisibleToUser(paramBoolean); 
  }
  
  public boolean c() { return this.b.isCheckable(); }
  
  public void d(Rect paramRect) { this.b.setBoundsInScreen(paramRect); }
  
  public void d(CharSequence paramCharSequence) { this.b.setContentDescription(paramCharSequence); }
  
  public void d(boolean paramBoolean) {
    if (Build.VERSION.SDK_INT >= 16)
      this.b.setAccessibilityFocused(paramBoolean); 
  }
  
  public boolean d() { return this.b.isChecked(); }
  
  public void e(CharSequence paramCharSequence) {
    if (Build.VERSION.SDK_INT >= 19)
      this.b.getExtras().putCharSequence("AccessibilityNodeInfo.roleDescription", paramCharSequence); 
  }
  
  public void e(boolean paramBoolean) { this.b.setSelected(paramBoolean); }
  
  public boolean e() { return this.b.isFocusable(); }
  
  public boolean equals(Object paramObject) {
    if (this == paramObject)
      return true; 
    if (paramObject == null)
      return false; 
    if (getClass() != paramObject.getClass())
      return false; 
    paramObject = (a)paramObject;
    AccessibilityNodeInfo accessibilityNodeInfo = this.b;
    if (accessibilityNodeInfo == null) {
      if (paramObject.b != null)
        return false; 
    } else if (!accessibilityNodeInfo.equals(paramObject.b)) {
      return false;
    } 
    return true;
  }
  
  public void f(boolean paramBoolean) { this.b.setClickable(paramBoolean); }
  
  public boolean f() { return this.b.isFocused(); }
  
  public void g(boolean paramBoolean) { this.b.setLongClickable(paramBoolean); }
  
  public boolean g() { return (Build.VERSION.SDK_INT >= 16) ? this.b.isVisibleToUser() : 0; }
  
  public void h(boolean paramBoolean) { this.b.setEnabled(paramBoolean); }
  
  public boolean h() { return (Build.VERSION.SDK_INT >= 16) ? this.b.isAccessibilityFocused() : 0; }
  
  public int hashCode() {
    AccessibilityNodeInfo accessibilityNodeInfo = this.b;
    return (accessibilityNodeInfo == null) ? 0 : accessibilityNodeInfo.hashCode();
  }
  
  public void i(boolean paramBoolean) { this.b.setScrollable(paramBoolean); }
  
  public boolean i() { return this.b.isSelected(); }
  
  public boolean j() { return this.b.isClickable(); }
  
  public boolean k() { return this.b.isLongClickable(); }
  
  public boolean l() { return this.b.isEnabled(); }
  
  public boolean m() { return this.b.isPassword(); }
  
  public boolean n() { return this.b.isScrollable(); }
  
  public CharSequence o() { return this.b.getPackageName(); }
  
  public CharSequence p() { return this.b.getClassName(); }
  
  public CharSequence q() { return this.b.getText(); }
  
  public CharSequence r() { return this.b.getContentDescription(); }
  
  public void s() { this.b.recycle(); }
  
  public String t() { return (Build.VERSION.SDK_INT >= 18) ? this.b.getViewIdResourceName() : null; }
  
  public String toString() {
    StringBuilder stringBuilder1 = new StringBuilder();
    stringBuilder1.append(super.toString());
    Rect rect = new Rect();
    a(rect);
    StringBuilder stringBuilder3 = new StringBuilder();
    stringBuilder3.append("; boundsInParent: ");
    stringBuilder3.append(rect);
    stringBuilder1.append(stringBuilder3.toString());
    c(rect);
    stringBuilder3 = new StringBuilder();
    stringBuilder3.append("; boundsInScreen: ");
    stringBuilder3.append(rect);
    stringBuilder1.append(stringBuilder3.toString());
    stringBuilder1.append("; packageName: ");
    stringBuilder1.append(o());
    stringBuilder1.append("; className: ");
    stringBuilder1.append(p());
    stringBuilder1.append("; text: ");
    stringBuilder1.append(q());
    stringBuilder1.append("; contentDescription: ");
    stringBuilder1.append(r());
    stringBuilder1.append("; viewId: ");
    stringBuilder1.append(t());
    stringBuilder1.append("; checkable: ");
    stringBuilder1.append(c());
    stringBuilder1.append("; checked: ");
    stringBuilder1.append(d());
    stringBuilder1.append("; focusable: ");
    stringBuilder1.append(e());
    stringBuilder1.append("; focused: ");
    stringBuilder1.append(f());
    stringBuilder1.append("; selected: ");
    stringBuilder1.append(i());
    stringBuilder1.append("; clickable: ");
    stringBuilder1.append(j());
    stringBuilder1.append("; longClickable: ");
    stringBuilder1.append(k());
    stringBuilder1.append("; enabled: ");
    stringBuilder1.append(l());
    stringBuilder1.append("; password: ");
    stringBuilder1.append(m());
    StringBuilder stringBuilder2 = new StringBuilder();
    stringBuilder2.append("; scrollable: ");
    stringBuilder2.append(n());
    stringBuilder1.append(stringBuilder2.toString());
    stringBuilder1.append("; [");
    int i = b();
    while (i != 0) {
      int k = 1 << Integer.numberOfTrailingZeros(i);
      int j = i & k;
      stringBuilder1.append(b(k));
      i = j;
      if (j != 0) {
        stringBuilder1.append(", ");
        i = j;
      } 
    } 
    stringBuilder1.append("]");
    return stringBuilder1.toString();
  }
}
