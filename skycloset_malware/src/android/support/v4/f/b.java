package android.support.v4.f;

import android.os.Build;
import android.os.Bundle;
import android.support.v4.f.a.a;
import android.support.v4.f.a.b;
import android.view.View;
import android.view.ViewGroup;
import android.view.accessibility.AccessibilityEvent;
import android.view.accessibility.AccessibilityNodeProvider;

public class b {
  private static final View.AccessibilityDelegate a = new View.AccessibilityDelegate();
  
  private final View.AccessibilityDelegate b = new a(this);
  
  public b a(View paramView) {
    if (Build.VERSION.SDK_INT >= 16) {
      AccessibilityNodeProvider accessibilityNodeProvider = a.getAccessibilityNodeProvider(paramView);
      if (accessibilityNodeProvider != null)
        return new b(accessibilityNodeProvider); 
    } 
    return null;
  }
  
  View.AccessibilityDelegate a() { return this.b; }
  
  public void a(View paramView, int paramInt) { a.sendAccessibilityEvent(paramView, paramInt); }
  
  public void a(View paramView, a parama) { a.onInitializeAccessibilityNodeInfo(paramView, parama.a()); }
  
  public void a(View paramView, AccessibilityEvent paramAccessibilityEvent) { a.sendAccessibilityEventUnchecked(paramView, paramAccessibilityEvent); }
  
  public boolean a(View paramView, int paramInt, Bundle paramBundle) { return (Build.VERSION.SDK_INT >= 16) ? a.performAccessibilityAction(paramView, paramInt, paramBundle) : 0; }
  
  public boolean a(ViewGroup paramViewGroup, View paramView, AccessibilityEvent paramAccessibilityEvent) { return a.onRequestSendAccessibilityEvent(paramViewGroup, paramView, paramAccessibilityEvent); }
  
  public boolean b(View paramView, AccessibilityEvent paramAccessibilityEvent) { return a.dispatchPopulateAccessibilityEvent(paramView, paramAccessibilityEvent); }
  
  public void c(View paramView, AccessibilityEvent paramAccessibilityEvent) { a.onPopulateAccessibilityEvent(paramView, paramAccessibilityEvent); }
  
  public void d(View paramView, AccessibilityEvent paramAccessibilityEvent) { a.onInitializeAccessibilityEvent(paramView, paramAccessibilityEvent); }
}
