package android.support.v4.a.a;

import android.content.res.ColorStateList;
import android.content.res.Resources;
import android.content.res.TypedArray;
import android.graphics.Color;
import android.util.AttributeSet;
import android.util.Xml;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;

public final class a {
  private static int a(int paramInt, float paramFloat) { return paramInt & 0xFFFFFF | Math.round(Color.alpha(paramInt) * paramFloat) << 24; }
  
  public static ColorStateList a(Resources paramResources, XmlPullParser paramXmlPullParser, Resources.Theme paramTheme) {
    int i;
    AttributeSet attributeSet = Xml.asAttributeSet(paramXmlPullParser);
    while (true) {
      i = paramXmlPullParser.next();
      if (i != 2 && i != 1)
        continue; 
      break;
    } 
    if (i == 2)
      return a(paramResources, paramXmlPullParser, attributeSet, paramTheme); 
    throw new XmlPullParserException("No start tag found");
  }
  
  public static ColorStateList a(Resources paramResources, XmlPullParser paramXmlPullParser, AttributeSet paramAttributeSet, Resources.Theme paramTheme) {
    String str = paramXmlPullParser.getName();
    if (str.equals("selector"))
      return b(paramResources, paramXmlPullParser, paramAttributeSet, paramTheme); 
    StringBuilder stringBuilder = new StringBuilder();
    stringBuilder.append(paramXmlPullParser.getPositionDescription());
    stringBuilder.append(": invalid color state list tag ");
    stringBuilder.append(str);
    throw new XmlPullParserException(stringBuilder.toString());
  }
  
  private static TypedArray a(Resources paramResources, Resources.Theme paramTheme, AttributeSet paramAttributeSet, int[] paramArrayOfInt) { return (paramTheme == null) ? paramResources.obtainAttributes(paramAttributeSet, paramArrayOfInt) : paramTheme.obtainStyledAttributes(paramAttributeSet, paramArrayOfInt, 0, 0); }
  
  private static ColorStateList b(Resources paramResources, XmlPullParser paramXmlPullParser, AttributeSet paramAttributeSet, Resources.Theme paramTheme) { // Byte code:
    //   0: aload_1
    //   1: invokeinterface getDepth : ()I
    //   6: iconst_1
    //   7: iadd
    //   8: istore #10
    //   10: bipush #20
    //   12: anewarray [I
    //   15: astore #13
    //   17: aload #13
    //   19: arraylength
    //   20: newarray int
    //   22: astore #14
    //   24: iconst_0
    //   25: istore #5
    //   27: aload_1
    //   28: invokeinterface next : ()I
    //   33: istore #6
    //   35: iload #6
    //   37: iconst_1
    //   38: if_icmpeq -> 358
    //   41: aload_1
    //   42: invokeinterface getDepth : ()I
    //   47: istore #7
    //   49: iload #7
    //   51: iload #10
    //   53: if_icmpge -> 62
    //   56: iload #6
    //   58: iconst_3
    //   59: if_icmpeq -> 358
    //   62: iload #6
    //   64: iconst_2
    //   65: if_icmpne -> 355
    //   68: iload #7
    //   70: iload #10
    //   72: if_icmpgt -> 355
    //   75: aload_1
    //   76: invokeinterface getName : ()Ljava/lang/String;
    //   81: ldc 'item'
    //   83: invokevirtual equals : (Ljava/lang/Object;)Z
    //   86: ifne -> 92
    //   89: goto -> 355
    //   92: aload_0
    //   93: aload_3
    //   94: aload_2
    //   95: getstatic android/support/a/a$c.ColorStateListItem : [I
    //   98: invokestatic a : (Landroid/content/res/Resources;Landroid/content/res/Resources$Theme;Landroid/util/AttributeSet;[I)Landroid/content/res/TypedArray;
    //   101: astore #15
    //   103: aload #15
    //   105: getstatic android/support/a/a$c.ColorStateListItem_android_color : I
    //   108: ldc -65281
    //   110: invokevirtual getColor : (II)I
    //   113: istore #11
    //   115: fconst_1
    //   116: fstore #4
    //   118: aload #15
    //   120: getstatic android/support/a/a$c.ColorStateListItem_android_alpha : I
    //   123: invokevirtual hasValue : (I)Z
    //   126: ifeq -> 147
    //   129: getstatic android/support/a/a$c.ColorStateListItem_android_alpha : I
    //   132: istore #6
    //   134: aload #15
    //   136: iload #6
    //   138: fconst_1
    //   139: invokevirtual getFloat : (IF)F
    //   142: fstore #4
    //   144: goto -> 166
    //   147: aload #15
    //   149: getstatic android/support/a/a$c.ColorStateListItem_alpha : I
    //   152: invokevirtual hasValue : (I)Z
    //   155: ifeq -> 166
    //   158: getstatic android/support/a/a$c.ColorStateListItem_alpha : I
    //   161: istore #6
    //   163: goto -> 134
    //   166: aload #15
    //   168: invokevirtual recycle : ()V
    //   171: aload_2
    //   172: invokeinterface getAttributeCount : ()I
    //   177: istore #12
    //   179: iload #12
    //   181: newarray int
    //   183: astore #15
    //   185: iconst_0
    //   186: istore #6
    //   188: iload #6
    //   190: istore #7
    //   192: iload #6
    //   194: iload #12
    //   196: if_icmpge -> 293
    //   199: aload_2
    //   200: iload #6
    //   202: invokeinterface getAttributeNameResource : (I)I
    //   207: istore #9
    //   209: iload #7
    //   211: istore #8
    //   213: iload #9
    //   215: ldc 16843173
    //   217: if_icmpeq -> 280
    //   220: iload #7
    //   222: istore #8
    //   224: iload #9
    //   226: ldc 16843551
    //   228: if_icmpeq -> 280
    //   231: iload #7
    //   233: istore #8
    //   235: iload #9
    //   237: getstatic android/support/a/a$a.alpha : I
    //   240: if_icmpeq -> 280
    //   243: aload_2
    //   244: iload #6
    //   246: iconst_0
    //   247: invokeinterface getAttributeBooleanValue : (IZ)Z
    //   252: ifeq -> 262
    //   255: iload #9
    //   257: istore #8
    //   259: goto -> 267
    //   262: iload #9
    //   264: ineg
    //   265: istore #8
    //   267: aload #15
    //   269: iload #7
    //   271: iload #8
    //   273: iastore
    //   274: iload #7
    //   276: iconst_1
    //   277: iadd
    //   278: istore #8
    //   280: iload #6
    //   282: iconst_1
    //   283: iadd
    //   284: istore #6
    //   286: iload #8
    //   288: istore #7
    //   290: goto -> 192
    //   293: aload #15
    //   295: iload #7
    //   297: invokestatic trimStateSet : ([II)[I
    //   300: astore #15
    //   302: iload #11
    //   304: fload #4
    //   306: invokestatic a : (IF)I
    //   309: istore #6
    //   311: iload #5
    //   313: ifeq -> 321
    //   316: aload #15
    //   318: arraylength
    //   319: istore #7
    //   321: aload #14
    //   323: iload #5
    //   325: iload #6
    //   327: invokestatic a : ([III)[I
    //   330: astore #14
    //   332: aload #13
    //   334: iload #5
    //   336: aload #15
    //   338: invokestatic a : ([Ljava/lang/Object;ILjava/lang/Object;)[Ljava/lang/Object;
    //   341: checkcast [[I
    //   344: astore #13
    //   346: iload #5
    //   348: iconst_1
    //   349: iadd
    //   350: istore #5
    //   352: goto -> 355
    //   355: goto -> 27
    //   358: iload #5
    //   360: newarray int
    //   362: astore_0
    //   363: iload #5
    //   365: anewarray [I
    //   368: astore_1
    //   369: aload #14
    //   371: iconst_0
    //   372: aload_0
    //   373: iconst_0
    //   374: iload #5
    //   376: invokestatic arraycopy : (Ljava/lang/Object;ILjava/lang/Object;II)V
    //   379: aload #13
    //   381: iconst_0
    //   382: aload_1
    //   383: iconst_0
    //   384: iload #5
    //   386: invokestatic arraycopy : (Ljava/lang/Object;ILjava/lang/Object;II)V
    //   389: new android/content/res/ColorStateList
    //   392: dup
    //   393: aload_1
    //   394: aload_0
    //   395: invokespecial <init> : ([[I[I)V
    //   398: areturn }
}
