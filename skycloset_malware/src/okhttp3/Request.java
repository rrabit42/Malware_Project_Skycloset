package okhttp3;

import java.util.List;
import java.util.Map;
import okhttp3.internal.Util;

public final class Request {
  final RequestBody body;
  
  final Headers headers;
  
  final String method;
  
  final Map<Class<?>, Object> tags;
  
  final HttpUrl url;
  
  Request(Builder paramBuilder) {
    this.url = paramBuilder.url;
    this.method = paramBuilder.method;
    this.headers = paramBuilder.headers.build();
    this.body = paramBuilder.body;
    this.tags = Util.immutableMap(paramBuilder.tags);
  }
  
  public RequestBody body() { return this.body; }
  
  public CacheControl cacheControl() {
    CacheControl cacheControl1 = this.cacheControl;
    if (cacheControl1 != null)
      return cacheControl1; 
    cacheControl1 = CacheControl.parse(this.headers);
    this.cacheControl = cacheControl1;
    return cacheControl1;
  }
  
  public String header(String paramString) { return this.headers.get(paramString); }
  
  public List<String> headers(String paramString) { return this.headers.values(paramString); }
  
  public Headers headers() { return this.headers; }
  
  public boolean isHttps() { return this.url.isHttps(); }
  
  public String method() { return this.method; }
  
  public Builder newBuilder() { return new Builder(this); }
  
  public Object tag() { return tag(Object.class); }
  
  public <T> T tag(Class<? extends T> paramClass) { return (T)paramClass.cast(this.tags.get(paramClass)); }
  
  public String toString() {
    StringBuilder stringBuilder = new StringBuilder();
    stringBuilder.append("Request{method=");
    stringBuilder.append(this.method);
    stringBuilder.append(", url=");
    stringBuilder.append(this.url);
    stringBuilder.append(", tags=");
    stringBuilder.append(this.tags);
    stringBuilder.append('}');
    return stringBuilder.toString();
  }
  
  public HttpUrl url() { return this.url; }
}
