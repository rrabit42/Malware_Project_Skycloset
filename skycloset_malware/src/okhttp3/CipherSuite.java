package okhttp3;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

public final class CipherSuite {
  private static final Map<String, CipherSuite> INSTANCES;
  
  static final Comparator<String> ORDER_BY_NAME = new Object();
  
  public static final CipherSuite TLS_AES_128_CCM_SHA256;
  
  public static final CipherSuite TLS_AES_128_GCM_SHA256;
  
  public static final CipherSuite TLS_AES_256_CCM_8_SHA256;
  
  public static final CipherSuite TLS_AES_256_GCM_SHA384;
  
  public static final CipherSuite TLS_CHACHA20_POLY1305_SHA256;
  
  public static final CipherSuite TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA;
  
  public static final CipherSuite TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA;
  
  public static final CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA;
  
  public static final CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA256;
  
  public static final CipherSuite TLS_DHE_DSS_WITH_AES_128_GCM_SHA256;
  
  public static final CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA;
  
  public static final CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA256;
  
  public static final CipherSuite TLS_DHE_DSS_WITH_AES_256_GCM_SHA384;
  
  public static final CipherSuite TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA;
  
  public static final CipherSuite TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA;
  
  public static final CipherSuite TLS_DHE_DSS_WITH_DES_CBC_SHA;
  
  public static final CipherSuite TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA;
  
  public static final CipherSuite TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA;
  
  public static final CipherSuite TLS_DHE_RSA_WITH_AES_128_CBC_SHA;
  
  public static final CipherSuite TLS_DHE_RSA_WITH_AES_128_CBC_SHA256;
  
  public static final CipherSuite TLS_DHE_RSA_WITH_AES_128_GCM_SHA256;
  
  public static final CipherSuite TLS_DHE_RSA_WITH_AES_256_CBC_SHA;
  
  public static final CipherSuite TLS_DHE_RSA_WITH_AES_256_CBC_SHA256;
  
  public static final CipherSuite TLS_DHE_RSA_WITH_AES_256_GCM_SHA384;
  
  public static final CipherSuite TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA;
  
  public static final CipherSuite TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA;
  
  public static final CipherSuite TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256;
  
  public static final CipherSuite TLS_DHE_RSA_WITH_DES_CBC_SHA;
  
  public static final CipherSuite TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA;
  
  public static final CipherSuite TLS_DH_anon_EXPORT_WITH_RC4_40_MD5;
  
  public static final CipherSuite TLS_DH_anon_WITH_3DES_EDE_CBC_SHA;
  
  public static final CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA;
  
  public static final CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA256;
  
  public static final CipherSuite TLS_DH_anon_WITH_AES_128_GCM_SHA256;
  
  public static final CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA;
  
  public static final CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA256;
  
  public static final CipherSuite TLS_DH_anon_WITH_AES_256_GCM_SHA384;
  
  public static final CipherSuite TLS_DH_anon_WITH_DES_CBC_SHA;
  
  public static final CipherSuite TLS_DH_anon_WITH_RC4_128_MD5;
  
  public static final CipherSuite TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA;
  
  public static final CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA;
  
  public static final CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256;
  
  public static final CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256;
  
  public static final CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA;
  
  public static final CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384;
  
  public static final CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384;
  
  public static final CipherSuite TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256;
  
  public static final CipherSuite TLS_ECDHE_ECDSA_WITH_NULL_SHA;
  
  public static final CipherSuite TLS_ECDHE_ECDSA_WITH_RC4_128_SHA;
  
  public static final CipherSuite TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA;
  
  public static final CipherSuite TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA;
  
  public static final CipherSuite TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256;
  
  public static final CipherSuite TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA;
  
  public static final CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA;
  
  public static final CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256;
  
  public static final CipherSuite TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256;
  
  public static final CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA;
  
  public static final CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384;
  
  public static final CipherSuite TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384;
  
  public static final CipherSuite TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256;
  
  public static final CipherSuite TLS_ECDHE_RSA_WITH_NULL_SHA;
  
  public static final CipherSuite TLS_ECDHE_RSA_WITH_RC4_128_SHA;
  
  public static final CipherSuite TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA;
  
  public static final CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA;
  
  public static final CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256;
  
  public static final CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256;
  
  public static final CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA;
  
  public static final CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384;
  
  public static final CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384;
  
  public static final CipherSuite TLS_ECDH_ECDSA_WITH_NULL_SHA;
  
  public static final CipherSuite TLS_ECDH_ECDSA_WITH_RC4_128_SHA;
  
  public static final CipherSuite TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA;
  
  public static final CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA;
  
  public static final CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256;
  
  public static final CipherSuite TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256;
  
  public static final CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA;
  
  public static final CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384;
  
  public static final CipherSuite TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384;
  
  public static final CipherSuite TLS_ECDH_RSA_WITH_NULL_SHA;
  
  public static final CipherSuite TLS_ECDH_RSA_WITH_RC4_128_SHA;
  
  public static final CipherSuite TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA;
  
  public static final CipherSuite TLS_ECDH_anon_WITH_AES_128_CBC_SHA;
  
  public static final CipherSuite TLS_ECDH_anon_WITH_AES_256_CBC_SHA;
  
  public static final CipherSuite TLS_ECDH_anon_WITH_NULL_SHA;
  
  public static final CipherSuite TLS_ECDH_anon_WITH_RC4_128_SHA;
  
  public static final CipherSuite TLS_EMPTY_RENEGOTIATION_INFO_SCSV;
  
  public static final CipherSuite TLS_FALLBACK_SCSV;
  
  public static final CipherSuite TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5;
  
  public static final CipherSuite TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA;
  
  public static final CipherSuite TLS_KRB5_EXPORT_WITH_RC4_40_MD5;
  
  public static final CipherSuite TLS_KRB5_EXPORT_WITH_RC4_40_SHA;
  
  public static final CipherSuite TLS_KRB5_WITH_3DES_EDE_CBC_MD5;
  
  public static final CipherSuite TLS_KRB5_WITH_3DES_EDE_CBC_SHA;
  
  public static final CipherSuite TLS_KRB5_WITH_DES_CBC_MD5;
  
  public static final CipherSuite TLS_KRB5_WITH_DES_CBC_SHA;
  
  public static final CipherSuite TLS_KRB5_WITH_RC4_128_MD5;
  
  public static final CipherSuite TLS_KRB5_WITH_RC4_128_SHA;
  
  public static final CipherSuite TLS_PSK_WITH_3DES_EDE_CBC_SHA;
  
  public static final CipherSuite TLS_PSK_WITH_AES_128_CBC_SHA;
  
  public static final CipherSuite TLS_PSK_WITH_AES_256_CBC_SHA;
  
  public static final CipherSuite TLS_PSK_WITH_RC4_128_SHA;
  
  public static final CipherSuite TLS_RSA_EXPORT_WITH_DES40_CBC_SHA;
  
  public static final CipherSuite TLS_RSA_EXPORT_WITH_RC4_40_MD5;
  
  public static final CipherSuite TLS_RSA_WITH_3DES_EDE_CBC_SHA;
  
  public static final CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA;
  
  public static final CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA256;
  
  public static final CipherSuite TLS_RSA_WITH_AES_128_GCM_SHA256;
  
  public static final CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA;
  
  public static final CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA256;
  
  public static final CipherSuite TLS_RSA_WITH_AES_256_GCM_SHA384;
  
  public static final CipherSuite TLS_RSA_WITH_CAMELLIA_128_CBC_SHA;
  
  public static final CipherSuite TLS_RSA_WITH_CAMELLIA_256_CBC_SHA;
  
  public static final CipherSuite TLS_RSA_WITH_DES_CBC_SHA;
  
  public static final CipherSuite TLS_RSA_WITH_NULL_MD5;
  
  public static final CipherSuite TLS_RSA_WITH_NULL_SHA;
  
  public static final CipherSuite TLS_RSA_WITH_NULL_SHA256;
  
  public static final CipherSuite TLS_RSA_WITH_RC4_128_MD5;
  
  public static final CipherSuite TLS_RSA_WITH_RC4_128_SHA;
  
  public static final CipherSuite TLS_RSA_WITH_SEED_CBC_SHA;
  
  final String javaName;
  
  static  {
    INSTANCES = new LinkedHashMap();
    TLS_AES_256_CCM_8_SHA256 = (TLS_AES_128_CCM_SHA256 = (TLS_CHACHA20_POLY1305_SHA256 = (TLS_AES_256_GCM_SHA384 = (TLS_AES_128_GCM_SHA256 = (TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256 = (TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256 = (TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 = (TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 = (TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA = (TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA = (TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384 = (TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256 = (TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 = (TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 = (TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384 = (TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256 = (TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 = (TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 = (TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384 = (TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 = (TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 = (TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 = (TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384 = (TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 = (TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 = (TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 = (TLS_ECDH_anon_WITH_AES_256_CBC_SHA = (TLS_ECDH_anon_WITH_AES_128_CBC_SHA = (TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA = (TLS_ECDH_anon_WITH_RC4_128_SHA = (TLS_ECDH_anon_WITH_NULL_SHA = (TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA = (TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA = (TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA = (TLS_ECDHE_RSA_WITH_RC4_128_SHA = (TLS_ECDHE_RSA_WITH_NULL_SHA = (TLS_ECDH_RSA_WITH_AES_256_CBC_SHA = (TLS_ECDH_RSA_WITH_AES_128_CBC_SHA = (TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA = (TLS_ECDH_RSA_WITH_RC4_128_SHA = (TLS_ECDH_RSA_WITH_NULL_SHA = (TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA = (TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA = (TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA = (TLS_ECDHE_ECDSA_WITH_RC4_128_SHA = (TLS_ECDHE_ECDSA_WITH_NULL_SHA = (TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA = (TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA = (TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA = (TLS_ECDH_ECDSA_WITH_RC4_128_SHA = (TLS_ECDH_ECDSA_WITH_NULL_SHA = (TLS_FALLBACK_SCSV = (TLS_EMPTY_RENEGOTIATION_INFO_SCSV = (TLS_DH_anon_WITH_AES_256_GCM_SHA384 = (TLS_DH_anon_WITH_AES_128_GCM_SHA256 = (TLS_DHE_DSS_WITH_AES_256_GCM_SHA384 = (TLS_DHE_DSS_WITH_AES_128_GCM_SHA256 = (TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 = (TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 = (TLS_RSA_WITH_AES_256_GCM_SHA384 = (TLS_RSA_WITH_AES_128_GCM_SHA256 = (TLS_RSA_WITH_SEED_CBC_SHA = (TLS_PSK_WITH_AES_256_CBC_SHA = (TLS_PSK_WITH_AES_128_CBC_SHA = (TLS_PSK_WITH_3DES_EDE_CBC_SHA = (TLS_PSK_WITH_RC4_128_SHA = (TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA = (TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA = (TLS_RSA_WITH_CAMELLIA_256_CBC_SHA = (TLS_DH_anon_WITH_AES_256_CBC_SHA256 = (TLS_DH_anon_WITH_AES_128_CBC_SHA256 = (TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = (TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = (TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = (TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA = (TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA = (TLS_RSA_WITH_CAMELLIA_128_CBC_SHA = (TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = (TLS_RSA_WITH_AES_256_CBC_SHA256 = (TLS_RSA_WITH_AES_128_CBC_SHA256 = (TLS_RSA_WITH_NULL_SHA256 = (TLS_DH_anon_WITH_AES_256_CBC_SHA = (TLS_DHE_RSA_WITH_AES_256_CBC_SHA = (TLS_DHE_DSS_WITH_AES_256_CBC_SHA = (TLS_RSA_WITH_AES_256_CBC_SHA = (TLS_DH_anon_WITH_AES_128_CBC_SHA = (TLS_DHE_RSA_WITH_AES_128_CBC_SHA = (TLS_DHE_DSS_WITH_AES_128_CBC_SHA = (TLS_RSA_WITH_AES_128_CBC_SHA = (TLS_KRB5_EXPORT_WITH_RC4_40_MD5 = (TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5 = (TLS_KRB5_EXPORT_WITH_RC4_40_SHA = (TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA = (TLS_KRB5_WITH_RC4_128_MD5 = (TLS_KRB5_WITH_3DES_EDE_CBC_MD5 = (TLS_KRB5_WITH_DES_CBC_MD5 = (TLS_KRB5_WITH_RC4_128_SHA = (TLS_KRB5_WITH_3DES_EDE_CBC_SHA = (TLS_KRB5_WITH_DES_CBC_SHA = (TLS_DH_anon_WITH_3DES_EDE_CBC_SHA = (TLS_DH_anon_WITH_DES_CBC_SHA = (TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA = (TLS_DH_anon_WITH_RC4_128_MD5 = (TLS_DH_anon_EXPORT_WITH_RC4_40_MD5 = (TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = (TLS_DHE_RSA_WITH_DES_CBC_SHA = (TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA = (TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = (TLS_DHE_DSS_WITH_DES_CBC_SHA = (TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA = (TLS_RSA_WITH_3DES_EDE_CBC_SHA = (TLS_RSA_WITH_DES_CBC_SHA = (TLS_RSA_EXPORT_WITH_DES40_CBC_SHA = (TLS_RSA_WITH_RC4_128_SHA = (TLS_RSA_WITH_RC4_128_MD5 = (TLS_RSA_EXPORT_WITH_RC4_40_MD5 = (TLS_RSA_WITH_NULL_SHA = (TLS_RSA_WITH_NULL_MD5 = init("SSL_RSA_WITH_NULL_MD5", 1)).init("SSL_RSA_WITH_NULL_SHA", 2)).init("SSL_RSA_EXPORT_WITH_RC4_40_MD5", 3)).init("SSL_RSA_WITH_RC4_128_MD5", 4)).init("SSL_RSA_WITH_RC4_128_SHA", 5)).init("SSL_RSA_EXPORT_WITH_DES40_CBC_SHA", 8)).init("SSL_RSA_WITH_DES_CBC_SHA", 9)).init("SSL_RSA_WITH_3DES_EDE_CBC_SHA", 10)).init("SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA", 17)).init("SSL_DHE_DSS_WITH_DES_CBC_SHA", 18)).init("SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA", 19)).init("SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA", 20)).init("SSL_DHE_RSA_WITH_DES_CBC_SHA", 21)).init("SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA", 22)).init("SSL_DH_anon_EXPORT_WITH_RC4_40_MD5", 23)).init("SSL_DH_anon_WITH_RC4_128_MD5", 24)).init("SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA", 25)).init("SSL_DH_anon_WITH_DES_CBC_SHA", 26)).init("SSL_DH_anon_WITH_3DES_EDE_CBC_SHA", 27)).init("TLS_KRB5_WITH_DES_CBC_SHA", 30)).init("TLS_KRB5_WITH_3DES_EDE_CBC_SHA", 31)).init("TLS_KRB5_WITH_RC4_128_SHA", 32)).init("TLS_KRB5_WITH_DES_CBC_MD5", 34)).init("TLS_KRB5_WITH_3DES_EDE_CBC_MD5", 35)).init("TLS_KRB5_WITH_RC4_128_MD5", 36)).init("TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA", 38)).init("TLS_KRB5_EXPORT_WITH_RC4_40_SHA", 40)).init("TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5", 41)).init("TLS_KRB5_EXPORT_WITH_RC4_40_MD5", 43)).init("TLS_RSA_WITH_AES_128_CBC_SHA", 47)).init("TLS_DHE_DSS_WITH_AES_128_CBC_SHA", 50)).init("TLS_DHE_RSA_WITH_AES_128_CBC_SHA", 51)).init("TLS_DH_anon_WITH_AES_128_CBC_SHA", 52)).init("TLS_RSA_WITH_AES_256_CBC_SHA", 53)).init("TLS_DHE_DSS_WITH_AES_256_CBC_SHA", 56)).init("TLS_DHE_RSA_WITH_AES_256_CBC_SHA", 57)).init("TLS_DH_anon_WITH_AES_256_CBC_SHA", 58)).init("TLS_RSA_WITH_NULL_SHA256", 59)).init("TLS_RSA_WITH_AES_128_CBC_SHA256", 60)).init("TLS_RSA_WITH_AES_256_CBC_SHA256", 61)).init("TLS_DHE_DSS_WITH_AES_128_CBC_SHA256", 64)).init("TLS_RSA_WITH_CAMELLIA_128_CBC_SHA", 65)).init("TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA", 68)).init("TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA", 69)).init("TLS_DHE_RSA_WITH_AES_128_CBC_SHA256", 103)).init("TLS_DHE_DSS_WITH_AES_256_CBC_SHA256", 106)).init("TLS_DHE_RSA_WITH_AES_256_CBC_SHA256", 107)).init("TLS_DH_anon_WITH_AES_128_CBC_SHA256", 108)).init("TLS_DH_anon_WITH_AES_256_CBC_SHA256", 109)).init("TLS_RSA_WITH_CAMELLIA_256_CBC_SHA", 132)).init("TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA", 135)).init("TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA", 136)).init("TLS_PSK_WITH_RC4_128_SHA", 138)).init("TLS_PSK_WITH_3DES_EDE_CBC_SHA", 139)).init("TLS_PSK_WITH_AES_128_CBC_SHA", 140)).init("TLS_PSK_WITH_AES_256_CBC_SHA", 141)).init("TLS_RSA_WITH_SEED_CBC_SHA", 150)).init("TLS_RSA_WITH_AES_128_GCM_SHA256", 156)).init("TLS_RSA_WITH_AES_256_GCM_SHA384", 157)).init("TLS_DHE_RSA_WITH_AES_128_GCM_SHA256", 158)).init("TLS_DHE_RSA_WITH_AES_256_GCM_SHA384", 159)).init("TLS_DHE_DSS_WITH_AES_128_GCM_SHA256", 162)).init("TLS_DHE_DSS_WITH_AES_256_GCM_SHA384", 163)).init("TLS_DH_anon_WITH_AES_128_GCM_SHA256", 166)).init("TLS_DH_anon_WITH_AES_256_GCM_SHA384", 167)).init("TLS_EMPTY_RENEGOTIATION_INFO_SCSV", 255)).init("TLS_FALLBACK_SCSV", 22016)).init("TLS_ECDH_ECDSA_WITH_NULL_SHA", 49153)).init("TLS_ECDH_ECDSA_WITH_RC4_128_SHA", 49154)).init("TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA", 49155)).init("TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA", 49156)).init("TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA", 49157)).init("TLS_ECDHE_ECDSA_WITH_NULL_SHA", 49158)).init("TLS_ECDHE_ECDSA_WITH_RC4_128_SHA", 49159)).init("TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA", 49160)).init("TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA", 49161)).init("TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA", 49162)).init("TLS_ECDH_RSA_WITH_NULL_SHA", 49163)).init("TLS_ECDH_RSA_WITH_RC4_128_SHA", 49164)).init("TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA", 49165)).init("TLS_ECDH_RSA_WITH_AES_128_CBC_SHA", 49166)).init("TLS_ECDH_RSA_WITH_AES_256_CBC_SHA", 49167)).init("TLS_ECDHE_RSA_WITH_NULL_SHA", 49168)).init("TLS_ECDHE_RSA_WITH_RC4_128_SHA", 49169)).init("TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA", 49170)).init("TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA", 49171)).init("TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA", 49172)).init("TLS_ECDH_anon_WITH_NULL_SHA", 49173)).init("TLS_ECDH_anon_WITH_RC4_128_SHA", 49174)).init("TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA", 49175)).init("TLS_ECDH_anon_WITH_AES_128_CBC_SHA", 49176)).init("TLS_ECDH_anon_WITH_AES_256_CBC_SHA", 49177)).init("TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256", 49187)).init("TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384", 49188)).init("TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256", 49189)).init("TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384", 49190)).init("TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256", 49191)).init("TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384", 49192)).init("TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256", 49193)).init("TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384", 49194)).init("TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256", 49195)).init("TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384", 49196)).init("TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256", 49197)).init("TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384", 49198)).init("TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256", 49199)).init("TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384", 49200)).init("TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256", 49201)).init("TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384", 49202)).init("TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA", 49205)).init("TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA", 49206)).init("TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256", 52392)).init("TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256", 52393)).init("TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256", 52394)).init("TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256", 52396)).init("TLS_AES_128_GCM_SHA256", 4865)).init("TLS_AES_256_GCM_SHA384", 4866)).init("TLS_CHACHA20_POLY1305_SHA256", 4867)).init("TLS_AES_128_CCM_SHA256", 4868)).init("TLS_AES_256_CCM_8_SHA256", 4869);
  }
  
  private CipherSuite(String paramString) {
    if (paramString != null) {
      this.javaName = paramString;
      return;
    } 
    throw new NullPointerException();
  }
  
  public static CipherSuite forJavaName(String paramString) { // Byte code:
    //   0: ldc okhttp3/CipherSuite
    //   2: monitorenter
    //   3: getstatic okhttp3/CipherSuite.INSTANCES : Ljava/util/Map;
    //   6: aload_0
    //   7: invokeinterface get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   12: checkcast okhttp3/CipherSuite
    //   15: astore_2
    //   16: aload_2
    //   17: astore_1
    //   18: aload_2
    //   19: ifnonnull -> 64
    //   22: getstatic okhttp3/CipherSuite.INSTANCES : Ljava/util/Map;
    //   25: aload_0
    //   26: invokestatic secondaryName : (Ljava/lang/String;)Ljava/lang/String;
    //   29: invokeinterface get : (Ljava/lang/Object;)Ljava/lang/Object;
    //   34: checkcast okhttp3/CipherSuite
    //   37: astore_2
    //   38: aload_2
    //   39: astore_1
    //   40: aload_2
    //   41: ifnonnull -> 53
    //   44: new okhttp3/CipherSuite
    //   47: dup
    //   48: aload_0
    //   49: invokespecial <init> : (Ljava/lang/String;)V
    //   52: astore_1
    //   53: getstatic okhttp3/CipherSuite.INSTANCES : Ljava/util/Map;
    //   56: aload_0
    //   57: aload_1
    //   58: invokeinterface put : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   63: pop
    //   64: ldc okhttp3/CipherSuite
    //   66: monitorexit
    //   67: aload_1
    //   68: areturn
    //   69: astore_0
    //   70: ldc okhttp3/CipherSuite
    //   72: monitorexit
    //   73: aload_0
    //   74: athrow
    // Exception table:
    //   from	to	target	type
    //   3	16	69	finally
    //   22	38	69	finally
    //   44	53	69	finally
    //   53	64	69	finally }
  
  static List<CipherSuite> forJavaNames(String... paramVarArgs) {
    ArrayList arrayList = new ArrayList(paramVarArgs.length);
    int i = paramVarArgs.length;
    for (byte b = 0; b < i; b++)
      arrayList.add(forJavaName(paramVarArgs[b])); 
    return Collections.unmodifiableList(arrayList);
  }
  
  private static CipherSuite init(String paramString, int paramInt) {
    CipherSuite cipherSuite = new CipherSuite(paramString);
    INSTANCES.put(paramString, cipherSuite);
    return cipherSuite;
  }
  
  private static String secondaryName(String paramString) {
    if (paramString.startsWith("TLS_")) {
      StringBuilder stringBuilder = new StringBuilder();
      String str = "SSL_";
      stringBuilder.append(str);
      stringBuilder.append(paramString.substring(4));
      return stringBuilder.toString();
    } 
    if (paramString.startsWith("SSL_")) {
      StringBuilder stringBuilder = new StringBuilder();
      String str = "TLS_";
      stringBuilder.append(str);
      stringBuilder.append(paramString.substring(4));
      return stringBuilder.toString();
    } 
    return paramString;
  }
  
  public String javaName() { return this.javaName; }
  
  public String toString() { return this.javaName; }
}
