package okhttp3.internal.cache2;

import b.c;
import java.nio.channels.FileChannel;

final class FileOperator {
  private final FileChannel fileChannel;
  
  FileOperator(FileChannel paramFileChannel) { this.fileChannel = paramFileChannel; }
  
  public void read(long paramLong1, c paramc, long paramLong2) {
    if (paramLong2 >= 0L) {
      while (paramLong2 > 0L) {
        long l = this.fileChannel.transferTo(paramLong1, paramLong2, paramc);
        paramLong1 += l;
        paramLong2 -= l;
      } 
      return;
    } 
    throw new IndexOutOfBoundsException();
  }
  
  public void write(long paramLong1, c paramc, long paramLong2) {
    if (paramLong2 >= 0L && paramLong2 <= paramc.a()) {
      while (paramLong2 > 0L) {
        long l = this.fileChannel.transferFrom(paramc, paramLong1, paramLong2);
        paramLong1 += l;
        paramLong2 -= l;
      } 
      return;
    } 
    throw new IndexOutOfBoundsException();
  }
}
