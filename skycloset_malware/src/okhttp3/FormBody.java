package okhttp3;

import b.c;
import b.d;
import java.util.List;
import okhttp3.internal.Util;

public final class FormBody extends RequestBody {
  private static final MediaType CONTENT_TYPE = MediaType.get("application/x-www-form-urlencoded");
  
  private final List<String> encodedNames;
  
  private final List<String> encodedValues;
  
  FormBody(List<String> paramList1, List<String> paramList2) {
    this.encodedNames = Util.immutableList(paramList1);
    this.encodedValues = Util.immutableList(paramList2);
  }
  
  private long writeOrCountBytes(d paramd, boolean paramBoolean) {
    c c;
    if (paramBoolean) {
      c = new c();
    } else {
      c = c.b();
    } 
    byte b = 0;
    int i = this.encodedNames.size();
    while (b < i) {
      if (b)
        c.b(38); 
      c.a((String)this.encodedNames.get(b));
      c.b(61);
      c.a((String)this.encodedValues.get(b));
      b++;
    } 
    if (paramBoolean) {
      long l = c.a();
      c.u();
      return l;
    } 
    return 0L;
  }
  
  public long contentLength() { return writeOrCountBytes(null, true); }
  
  public MediaType contentType() { return CONTENT_TYPE; }
  
  public String encodedName(int paramInt) { return (String)this.encodedNames.get(paramInt); }
  
  public String encodedValue(int paramInt) { return (String)this.encodedValues.get(paramInt); }
  
  public String name(int paramInt) { return HttpUrl.percentDecode(encodedName(paramInt), true); }
  
  public int size() { return this.encodedNames.size(); }
  
  public String value(int paramInt) { return HttpUrl.percentDecode(encodedValue(paramInt), true); }
  
  public void writeTo(d paramd) { writeOrCountBytes(paramd, false); }
}
