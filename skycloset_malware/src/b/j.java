package b;

import java.io.EOFException;
import java.io.IOException;
import java.util.zip.CRC32;
import java.util.zip.Inflater;

public final class j implements t {
  private int a = 0;
  
  private final e b;
  
  private final Inflater c;
  
  private final k d;
  
  private final CRC32 e = new CRC32();
  
  public j(t paramt) {
    if (paramt != null) {
      this.c = new Inflater(true);
      this.b = l.a(paramt);
      this.d = new k(this.b, this.c);
      return;
    } 
    throw new IllegalArgumentException("source == null");
  }
  
  private void a() {
    boolean bool;
    this.b.a(10L);
    byte b1 = this.b.b().c(3L);
    if ((b1 >> 1 & true) == 1) {
      bool = true;
    } else {
      bool = false;
    } 
    if (bool)
      a(this.b.b(), 0L, 10L); 
    a("ID1ID2", 8075, this.b.j());
    this.b.i(8L);
    if ((b1 >> 2 & true) == 1) {
      this.b.a(2L);
      if (bool)
        a(this.b.b(), 0L, 2L); 
      short s = this.b.b().m();
      e e1 = this.b;
      long l = s;
      e1.a(l);
      if (bool)
        a(this.b.b(), 0L, l); 
      this.b.i(l);
    } 
    if ((b1 >> 3 & true) == 1) {
      long l = this.b.a((byte)0);
      if (l != -1L) {
        if (bool)
          a(this.b.b(), 0L, l + 1L); 
        this.b.i(l + 1L);
      } else {
        throw new EOFException();
      } 
    } 
    if ((b1 >> 4 & true) == 1) {
      long l = this.b.a((byte)0);
      if (l != -1L) {
        if (bool)
          a(this.b.b(), 0L, l + 1L); 
        this.b.i(l + 1L);
      } else {
        throw new EOFException();
      } 
    } 
    if (bool) {
      a("FHCRC", this.b.m(), (short)(int)this.e.getValue());
      this.e.reset();
    } 
  }
  
  private void a(c paramc, long paramLong1, long paramLong2) {
    p p;
    for (p = paramc.a; paramLong1 >= (p.c - p.b); p = p.f)
      paramLong1 -= (p.c - p.b); 
    while (paramLong2 > 0L) {
      int i = (int)(p.b + paramLong1);
      int m = (int)Math.min((p.c - i), paramLong2);
      this.e.update(p.a, i, m);
      paramLong2 -= m;
      p = p.f;
      paramLong1 = 0L;
    } 
  }
  
  private void a(String paramString, int paramInt1, int paramInt2) {
    if (paramInt2 == paramInt1)
      return; 
    throw new IOException(String.format("%s: actual 0x%08x != expected 0x%08x", new Object[] { paramString, Integer.valueOf(paramInt2), Integer.valueOf(paramInt1) }));
  }
  
  private void b() {
    a("CRC", this.b.n(), (int)this.e.getValue());
    a("ISIZE", this.b.n(), (int)this.c.getBytesWritten());
  }
  
  public void close() { this.d.close(); }
  
  public long read(c paramc, long paramLong) {
    int i = paramLong cmp 0L;
    if (i >= 0) {
      if (i == 0)
        return 0L; 
      if (this.a == 0) {
        a();
        this.a = 1;
      } 
      if (this.a == 1) {
        long l = paramc.b;
        paramLong = this.d.read(paramc, paramLong);
        if (paramLong != -1L) {
          a(paramc, l, paramLong);
          return paramLong;
        } 
        this.a = 2;
      } 
      if (this.a == 2) {
        b();
        this.a = 3;
        if (this.b.f())
          return -1L; 
        throw new IOException("gzip finished without exhausting source");
      } 
      return -1L;
    } 
    StringBuilder stringBuilder = new StringBuilder();
    stringBuilder.append("byteCount < 0: ");
    stringBuilder.append(paramLong);
    throw new IllegalArgumentException(stringBuilder.toString());
  }
  
  public u timeout() { return this.b.timeout(); }
}
