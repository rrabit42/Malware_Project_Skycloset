package a;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.concurrent.Callable;
import java.util.concurrent.Executor;
import java.util.concurrent.ExecutorService;

public class h<TResult> extends Object {
  public static final ExecutorService a = b.a();
  
  public static final Executor b;
  
  private static final Executor c = b.b();
  
  private static h<?> m;
  
  private static h<Boolean> n;
  
  private static h<Boolean> o;
  
  private static h<?> p;
  
  private final Object e = new Object();
  
  private boolean f;
  
  private boolean g;
  
  private TResult h;
  
  private Exception i;
  
  private boolean j;
  
  private j k;
  
  private List<f<TResult, Void>> l = new ArrayList();
  
  static  {
    b = a.b();
    m = new h(null);
    n = new h(Boolean.valueOf(true));
    o = new h(Boolean.valueOf(false));
    p = new h(true);
  }
  
  h() {}
  
  private h(TResult paramTResult) { b(paramTResult); }
  
  private h(boolean paramBoolean) {
    if (paramBoolean) {
      g();
      return;
    } 
    b(null);
  }
  
  public static a a() { return d; }
  
  public static <TResult> h<TResult> a(Exception paramException) {
    i i1 = new i();
    i1.b(paramException);
    return i1.a();
  }
  
  public static <TResult> h<TResult> a(TResult paramTResult) {
    if (paramTResult == null)
      return m; 
    if (paramTResult instanceof Boolean)
      return ((Boolean)paramTResult).booleanValue() ? n : o; 
    i i1 = new i();
    i1.b(paramTResult);
    return i1.a();
  }
  
  public static <TResult> h<TResult> a(Callable<TResult> paramCallable, Executor paramExecutor) { return a(paramCallable, paramExecutor, null); }
  
  public static <TResult> h<TResult> a(Callable<TResult> paramCallable, Executor paramExecutor, c paramc) {
    i i1 = new i();
    try {
      paramExecutor.execute(new Object(paramc, i1, paramCallable));
    } catch (Exception paramCallable) {
      i1.b(new g(paramCallable));
    } 
    return i1.a();
  }
  
  private static <TContinuationResult, TResult> void b(i<TContinuationResult> parami, f<TResult, TContinuationResult> paramf, h<TResult> paramh, Executor paramExecutor, c paramc) {
    try {
      paramExecutor.execute(new Object(paramc, parami, paramf, paramh));
      return;
    } catch (Exception paramf) {
      parami.b(new g(paramf));
      return;
    } 
  }
  
  private void h() {
    synchronized (this.e) {
      iterator = this.l.iterator();
      while (iterator.hasNext()) {
        f f1 = (f)iterator.next();
        try {
          f1.a(this);
        } catch (RuntimeException iterator) {
          throw iterator;
        } catch (Exception iterator) {
          throw new RuntimeException(iterator);
        } 
      } 
      this.l = null;
      return;
    } 
  }
  
  public <TContinuationResult> h<TContinuationResult> a(f<TResult, TContinuationResult> paramf) { return a(paramf, c, null); }
  
  public <TContinuationResult> h<TContinuationResult> a(f<TResult, TContinuationResult> paramf, Executor paramExecutor, c paramc) {
    i i1 = new i();
    synchronized (this.e) {
      boolean bool = b();
      if (!bool)
        this.l.add(new Object(this, i1, paramf, paramExecutor, paramc)); 
      if (bool)
        b(i1, paramf, this, paramExecutor, paramc); 
      return i1.a();
    } 
  }
  
  public boolean b() {
    synchronized (this.e) {
      return this.f;
    } 
  }
  
  boolean b(Exception paramException) {
    synchronized (this.e) {
      if (this.f)
        return false; 
      this.f = true;
      this.i = paramException;
      this.j = false;
      this.e.notifyAll();
      h();
      if (!this.j && a() != null)
        this.k = new j(this); 
      return true;
    } 
  }
  
  boolean b(TResult paramTResult) {
    synchronized (this.e) {
      if (this.f)
        return false; 
      this.f = true;
      this.h = paramTResult;
      this.e.notifyAll();
      h();
      return true;
    } 
  }
  
  public boolean c() {
    synchronized (this.e) {
      return this.g;
    } 
  }
  
  public boolean d() {
    synchronized (this.e) {
      if (f() != null)
        return true; 
    } 
    boolean bool = false;
    /* monitor exit ClassFileLocalVariableReferenceExpression{type=ObjectType{java/lang/Object}, name=SYNTHETIC_LOCAL_VARIABLE_2} */
    return bool;
  }
  
  public TResult e() {
    synchronized (this.e) {
      Object object = this.h;
      return (TResult)object;
    } 
  }
  
  public Exception f() {
    synchronized (this.e) {
      if (this.i != null) {
        this.j = true;
        if (this.k != null) {
          this.k.a();
          this.k = null;
        } 
      } 
      return this.i;
    } 
  }
  
  boolean g() {
    synchronized (this.e) {
      if (this.f)
        return false; 
      this.f = true;
      this.g = true;
      this.e.notifyAll();
      h();
      return true;
    } 
  }
}
